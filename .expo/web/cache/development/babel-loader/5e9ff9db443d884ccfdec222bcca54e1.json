{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\mysiew\\\\Documents\\\\eCommerce\\\\codecanyon-xPJMYS8x-react-native-delivery-solution-with-advance-website-and-cms\\\\SourceCode\\\\vesend-consumer-app-master\\\\node_modules\\\\react-native-keyboard-spacer\\\\KeyboardSpacer.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n});\n\nvar defaultAnimation = {\n  duration: 500,\n  create: {\n    duration: 300,\n    type: _reactNative.LayoutAnimation.Types.easeInEaseOut,\n    property: _reactNative.LayoutAnimation.Properties.opacity\n  },\n  update: {\n    type: _reactNative.LayoutAnimation.Types.spring,\n    springDamping: 200\n  }\n};\n\nvar KeyboardSpacer = function (_Component) {\n  (0, _inherits2.default)(KeyboardSpacer, _Component);\n\n  var _super = _createSuper(KeyboardSpacer);\n\n  function KeyboardSpacer(props, context) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, KeyboardSpacer);\n    _this = _super.call(this, props, context);\n    _this.state = {\n      keyboardSpace: 0,\n      isKeyboardOpened: false\n    };\n    _this._listeners = null;\n    _this.updateKeyboardSpace = _this.updateKeyboardSpace.bind((0, _assertThisInitialized2.default)(_this));\n    _this.resetKeyboardSpace = _this.resetKeyboardSpace.bind((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  (0, _createClass2.default)(KeyboardSpacer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var updateListener = _reactNative.Platform.OS === 'android' ? 'keyboardDidShow' : 'keyboardWillShow';\n      var resetListener = _reactNative.Platform.OS === 'android' ? 'keyboardDidHide' : 'keyboardWillHide';\n      this._listeners = [_reactNative.Keyboard.addListener(updateListener, this.updateKeyboardSpace), _reactNative.Keyboard.addListener(resetListener, this.resetKeyboardSpace)];\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._listeners.forEach(function (listener) {\n        return listener.remove();\n      });\n    }\n  }, {\n    key: \"updateKeyboardSpace\",\n    value: function updateKeyboardSpace(event) {\n      if (!event.endCoordinates) {\n        return;\n      }\n\n      var animationConfig = defaultAnimation;\n\n      if (_reactNative.Platform.OS === 'ios') {\n        animationConfig = _reactNative.LayoutAnimation.create(event.duration, _reactNative.LayoutAnimation.Types[event.easing], _reactNative.LayoutAnimation.Properties.opacity);\n      }\n\n      _reactNative.LayoutAnimation.configureNext(animationConfig);\n\n      var screenHeight = _reactNative.Dimensions.get('window').height;\n\n      var keyboardSpace = screenHeight - event.endCoordinates.screenY + this.props.topSpacing;\n      this.setState({\n        keyboardSpace: keyboardSpace,\n        isKeyboardOpened: true\n      }, this.props.onToggle(true, keyboardSpace));\n    }\n  }, {\n    key: \"resetKeyboardSpace\",\n    value: function resetKeyboardSpace(event) {\n      var animationConfig = defaultAnimation;\n\n      if (_reactNative.Platform.OS === 'ios') {\n        animationConfig = _reactNative.LayoutAnimation.create(event.duration, _reactNative.LayoutAnimation.Types[event.easing], _reactNative.LayoutAnimation.Properties.opacity);\n      }\n\n      _reactNative.LayoutAnimation.configureNext(animationConfig);\n\n      this.setState({\n        keyboardSpace: 0,\n        isKeyboardOpened: false\n      }, this.props.onToggle(false, 0));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(_reactNative.View, {\n        style: [styles.container, {\n          height: this.state.keyboardSpace\n        }, this.props.style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n  return KeyboardSpacer;\n}(_react.Component);\n\nexports.default = KeyboardSpacer;\nKeyboardSpacer.propTypes = {\n  topSpacing: _propTypes.default.number,\n  onToggle: _propTypes.default.func,\n  style: _reactNative.ViewPropTypes.style\n};\nKeyboardSpacer.defaultProps = {\n  topSpacing: 0,\n  onToggle: function onToggle() {\n    return null;\n  }\n};","map":{"version":3,"sources":["C:/Users/mysiew/Documents/eCommerce/codecanyon-xPJMYS8x-react-native-delivery-solution-with-advance-website-and-cms/SourceCode/vesend-consumer-app-master/node_modules/react-native-keyboard-spacer/KeyboardSpacer.js"],"names":["styles","StyleSheet","create","container","left","right","bottom","defaultAnimation","duration","type","LayoutAnimation","Types","easeInEaseOut","property","Properties","opacity","update","spring","springDamping","KeyboardSpacer","props","context","state","keyboardSpace","isKeyboardOpened","_listeners","updateKeyboardSpace","bind","resetKeyboardSpace","updateListener","Platform","OS","resetListener","Keyboard","addListener","forEach","listener","remove","event","endCoordinates","animationConfig","easing","configureNext","screenHeight","Dimensions","get","height","screenY","topSpacing","setState","onToggle","style","Component","propTypes","PropTypes","number","func","ViewPropTypes","defaultProps"],"mappings":"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","sourcesContent":["/**\n * Created by andrewhurst on 10/5/15.\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Keyboard,\n  LayoutAnimation,\n  View,\n  Dimensions,\n  ViewPropTypes,\n  Platform,\n  StyleSheet\n} from 'react-native';\n\nconst styles = StyleSheet.create({\n  container: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n\n// From: https://medium.com/man-moon/writing-modern-react-native-ui-e317ff956f02\nconst defaultAnimation = {\n  duration: 500,\n  create: {\n    duration: 300,\n    type: LayoutAnimation.Types.easeInEaseOut,\n    property: LayoutAnimation.Properties.opacity\n  },\n  update: {\n    type: LayoutAnimation.Types.spring,\n    springDamping: 200\n  }\n};\n\nexport default class KeyboardSpacer extends Component {\n  static propTypes = {\n    topSpacing: PropTypes.number,\n    onToggle: PropTypes.func,\n    style: ViewPropTypes.style,\n  };\n\n  static defaultProps = {\n    topSpacing: 0,\n    onToggle: () => null,\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      keyboardSpace: 0,\n      isKeyboardOpened: false\n    };\n    this._listeners = null;\n    this.updateKeyboardSpace = this.updateKeyboardSpace.bind(this);\n    this.resetKeyboardSpace = this.resetKeyboardSpace.bind(this);\n  }\n\n  componentDidMount() {\n    const updateListener = Platform.OS === 'android' ? 'keyboardDidShow' : 'keyboardWillShow';\n    const resetListener = Platform.OS === 'android' ? 'keyboardDidHide' : 'keyboardWillHide';\n    this._listeners = [\n      Keyboard.addListener(updateListener, this.updateKeyboardSpace),\n      Keyboard.addListener(resetListener, this.resetKeyboardSpace)\n    ];\n  }\n\n  componentWillUnmount() {\n    this._listeners.forEach(listener => listener.remove());\n  }\n\n  updateKeyboardSpace(event) {\n    if (!event.endCoordinates) {\n      return;\n    }\n\n    let animationConfig = defaultAnimation;\n    if (Platform.OS === 'ios') {\n      animationConfig = LayoutAnimation.create(\n        event.duration,\n        LayoutAnimation.Types[event.easing],\n        LayoutAnimation.Properties.opacity,\n      );\n    }\n    LayoutAnimation.configureNext(animationConfig);\n\n    // get updated on rotation\n    const screenHeight = Dimensions.get('window').height;\n    // when external physical keyboard is connected\n    // event.endCoordinates.height still equals virtual keyboard height\n    // however only the keyboard toolbar is showing if there should be one\n    const keyboardSpace = (screenHeight - event.endCoordinates.screenY) + this.props.topSpacing;\n    this.setState({\n      keyboardSpace,\n      isKeyboardOpened: true\n    }, this.props.onToggle(true, keyboardSpace));\n  }\n\n  resetKeyboardSpace(event) {\n    let animationConfig = defaultAnimation;\n    if (Platform.OS === 'ios') {\n      animationConfig = LayoutAnimation.create(\n        event.duration,\n        LayoutAnimation.Types[event.easing],\n        LayoutAnimation.Properties.opacity,\n      );\n    }\n    LayoutAnimation.configureNext(animationConfig);\n\n    this.setState({\n      keyboardSpace: 0,\n      isKeyboardOpened: false\n    }, this.props.onToggle(false, 0));\n  }\n\n  render() {\n    return (\n      <View style={[styles.container, { height: this.state.keyboardSpace }, this.props.style]} />);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}