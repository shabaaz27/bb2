{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _Platform = _interopRequireDefault(require(\"../Utilities/Platform\"));\n\nvar _EventEmitter2 = _interopRequireDefault(require(\"../vendor/emitter/EventEmitter\"));\n\nvar _RCTDeviceEventEmitter = _interopRequireDefault(require(\"./RCTDeviceEventEmitter\"));\n\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar DEFAULT_NATIVE_EVENT_EMITTER_OPTIONS = {\n  __SECRET_DISABLE_CALLS_INTO_MODULE_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: false\n};\n\nvar NativeEventEmitter = function (_EventEmitter) {\n  (0, _inherits2.default)(NativeEventEmitter, _EventEmitter);\n\n  var _super = _createSuper(NativeEventEmitter);\n\n  function NativeEventEmitter(nativeModule) {\n    var _this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_NATIVE_EVENT_EMITTER_OPTIONS;\n    (0, _classCallCheck2.default)(this, NativeEventEmitter);\n    _this = _super.call(this, _RCTDeviceEventEmitter.default.sharedSubscriber);\n    _this._disableCallsIntoModule = options.__SECRET_DISABLE_CALLS_INTO_MODULE_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\n    if (_Platform.default.OS === 'ios') {\n      (0, _invariant.default)(nativeModule, 'Native module cannot be null.');\n      _this._nativeModule = nativeModule;\n    }\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(NativeEventEmitter, [{\n    key: \"addListener\",\n    value: function addListener(eventType, listener, context) {\n      if (this._nativeModule != null && !this._disableCallsIntoModule) {\n        this._nativeModule.addListener(eventType);\n      }\n\n      return (0, _get2.default)((0, _getPrototypeOf2.default)(NativeEventEmitter.prototype), \"addListener\", this).call(this, eventType, listener, context);\n    }\n  }, {\n    key: \"removeAllListeners\",\n    value: function removeAllListeners(eventType) {\n      (0, _invariant.default)(eventType, 'eventType argument is required.');\n      var count = this.listenerCount(eventType);\n\n      if (this._nativeModule != null && !this._disableCallsIntoModule) {\n        this._nativeModule.removeListeners(count);\n      }\n\n      (0, _get2.default)((0, _getPrototypeOf2.default)(NativeEventEmitter.prototype), \"removeAllListeners\", this).call(this, eventType);\n    }\n  }, {\n    key: \"removeSubscription\",\n    value: function removeSubscription(subscription) {\n      if (this._nativeModule != null && !this._disableCallsIntoModule) {\n        this._nativeModule.removeListeners(1);\n      }\n\n      (0, _get2.default)((0, _getPrototypeOf2.default)(NativeEventEmitter.prototype), \"removeSubscription\", this).call(this, subscription);\n    }\n  }]);\n  return NativeEventEmitter;\n}(_EventEmitter2.default);\n\nexports.default = NativeEventEmitter;","map":{"version":3,"sources":["C:/Users/mysiew/Documents/eCommerce/codecanyon-xPJMYS8x-react-native-delivery-solution-with-advance-website-and-cms/SourceCode/vesend-consumer-app-master/node_modules/react-native/Libraries/EventEmitter/NativeEventEmitter.js"],"names":["DEFAULT_NATIVE_EVENT_EMITTER_OPTIONS","__SECRET_DISABLE_CALLS_INTO_MODULE_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","NativeEventEmitter","nativeModule","options","RCTDeviceEventEmitter","sharedSubscriber","_disableCallsIntoModule","Platform","OS","_nativeModule","eventType","listener","context","addListener","count","listenerCount","removeListeners","subscription","EventEmitter"],"mappings":"AAUA;;;;;;;;;;;;;;;;;;;;;AAEA;;AACA;;AAEA;;AACA;;;;;;AAYA,IAAMA,oCAAoC,GAAG;AAC3CC,EAAAA,kEAAkE,EAAE;AADzB,CAA7C;;IAQqBC,kB;;;;;AAInB,8BACEC,YADF,EAGE;AAAA;;AAAA,QADAC,OACA,uEADqCJ,oCACrC;AAAA;AACA,8BAAMK,+BAAsBC,gBAA5B;AACA,UAAKC,uBAAL,GACEH,OAAO,CAACH,kEADV;;AAEA,QAAIO,kBAASC,EAAT,KAAgB,KAApB,EAA2B;AACzB,8BAAUN,YAAV,EAAwB,+BAAxB;AACA,YAAKO,aAAL,GAAqBP,YAArB;AACD;;AAPD;AAQD;;;;gCAGCQ,S,EACAC,Q,EACAC,O,EACmB;AACnB,UAAI,KAAKH,aAAL,IAAsB,IAAtB,IAA8B,CAAC,KAAKH,uBAAxC,EAAiE;AAC/D,aAAKG,aAAL,CAAmBI,WAAnB,CAA+BH,SAA/B;AACD;;AACD,6HAAyBA,SAAzB,EAAoCC,QAApC,EAA8CC,OAA9C;AACD;;;uCAEkBF,S,EAAmB;AACpC,8BAAUA,SAAV,EAAqB,iCAArB;AACA,UAAMI,KAAK,GAAG,KAAKC,aAAL,CAAmBL,SAAnB,CAAd;;AACA,UAAI,KAAKD,aAAL,IAAsB,IAAtB,IAA8B,CAAC,KAAKH,uBAAxC,EAAiE;AAC/D,aAAKG,aAAL,CAAmBO,eAAnB,CAAmCF,KAAnC;AACD;;AACD,6HAAyBJ,SAAzB;AACD;;;uCAEkBO,Y,EAAiC;AAClD,UAAI,KAAKR,aAAL,IAAsB,IAAtB,IAA8B,CAAC,KAAKH,uBAAxC,EAAiE;AAC/D,aAAKG,aAAL,CAAmBO,eAAnB,CAAmC,CAAnC;AACD;;AACD,6HAAyBC,YAAzB;AACD;;;EA1C6CC,sB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nimport Platform from '../Utilities/Platform';\nimport EventEmitter from '../vendor/emitter/EventEmitter';\nimport {type EventSubscription} from '../vendor/emitter/EventEmitter';\nimport RCTDeviceEventEmitter from './RCTDeviceEventEmitter';\nimport invariant from 'invariant';\n\ntype NativeModule = {\n  +addListener: (eventType: string) => void,\n  +removeListeners: (count: number) => void,\n  ...\n};\n\ntype NativeEventEmitterOptions = $ReadOnly<{|\n  __SECRET_DISABLE_CALLS_INTO_MODULE_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: boolean,\n|}>;\n\nconst DEFAULT_NATIVE_EVENT_EMITTER_OPTIONS = {\n  __SECRET_DISABLE_CALLS_INTO_MODULE_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: false,\n};\n\n/**\n * Abstract base class for implementing event-emitting modules. This implements\n * a subset of the standard EventEmitter node module API.\n */\nexport default class NativeEventEmitter extends EventEmitter {\n  _nativeModule: ?NativeModule;\n  _disableCallsIntoModule: boolean;\n\n  constructor(\n    nativeModule: ?NativeModule,\n    options: NativeEventEmitterOptions = DEFAULT_NATIVE_EVENT_EMITTER_OPTIONS,\n  ) {\n    super(RCTDeviceEventEmitter.sharedSubscriber);\n    this._disableCallsIntoModule =\n      options.__SECRET_DISABLE_CALLS_INTO_MODULE_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n    if (Platform.OS === 'ios') {\n      invariant(nativeModule, 'Native module cannot be null.');\n      this._nativeModule = nativeModule;\n    }\n  }\n\n  addListener(\n    eventType: string,\n    listener: Function,\n    context: ?Object,\n  ): EventSubscription {\n    if (this._nativeModule != null && !this._disableCallsIntoModule) {\n      this._nativeModule.addListener(eventType);\n    }\n    return super.addListener(eventType, listener, context);\n  }\n\n  removeAllListeners(eventType: string) {\n    invariant(eventType, 'eventType argument is required.');\n    const count = this.listenerCount(eventType);\n    if (this._nativeModule != null && !this._disableCallsIntoModule) {\n      this._nativeModule.removeListeners(count);\n    }\n    super.removeAllListeners(eventType);\n  }\n\n  removeSubscription(subscription: EventSubscription) {\n    if (this._nativeModule != null && !this._disableCallsIntoModule) {\n      this._nativeModule.removeListeners(1);\n    }\n    super.removeSubscription(subscription);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}