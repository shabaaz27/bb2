{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Theme = _interopRequireDefault(require(\"./Theme.style\"));\n\nvar _syncStorage = _interopRequireDefault(require(\"sync-storage\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\mysiew\\\\Documents\\\\eCommerce\\\\codecanyon-xPJMYS8x-react-native-delivery-solution-with-advance-website-and-cms\\\\SourceCode\\\\vesend-consumer-app-master\\\\src\\\\common\\\\Swiper.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar _Dimensions$get = _reactNative.Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar condition = 1;\n\nvar OnboardingScreens = function (_PureComponent) {\n  (0, _inherits2.default)(OnboardingScreens, _PureComponent);\n\n  var _super = _createSuper(OnboardingScreens);\n\n  function OnboardingScreens() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, OnboardingScreens);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.condition = 1;\n    _this.state = _this.initState(_this.props);\n\n    _this.onScrollBegin = function () {\n      _this.internals.isScrolling = true;\n    };\n\n    _this.onScrollEnd = function (e) {\n      _this.internals.isScrolling = false;\n\n      _this.updateIndex(e.nativeEvent.contentOffset ? e.nativeEvent.contentOffset.x : e.nativeEvent.position * _this.state.width);\n    };\n\n    _this.onScrollEndDrag = function (e) {\n      var newOffset = e.nativeEvent.contentOffset.x;\n      var children = _this.props.children;\n      var index = _this.state.index;\n      var offset = _this.internals.offset;\n\n      if (offset === newOffset && (index - 1 === 0 || index - 1 === children.length - 1)) {\n        _this.internals.isScrolling = false;\n      }\n    };\n\n    _this.updateIndex = function (offset) {\n      var state = _this.state;\n      var diff = offset - _this.internals.offset;\n      var step = state.width;\n      var index = state.temp;\n\n      if (!diff) {\n        return;\n      }\n\n      index = parseInt(index + Math.round(diff / step), 10);\n      _this.internals.offset = offset;\n\n      _this.setState({\n        temp: index,\n        index: index\n      });\n    };\n\n    _this.swipe = function () {\n      if (_this.internals.isScrolling || _this.state.total < 2) {\n        return;\n      }\n\n      var state = _this.state;\n      var diff = _this.state.index + 1;\n      var x = diff * state.width;\n      var y = 0;\n      _this.scrollView && _this.scrollView.scrollTo({\n        x: x,\n        y: y,\n        animated: true,\n        useNativeDriver: true\n      });\n      _this.internals.isScrolling = true;\n\n      if (_reactNative.Platform.OS === 'android') {\n        setImmediate(function () {\n          _this.onScrollEnd({\n            nativeEvent: {\n              position: diff\n            }\n          });\n        });\n      }\n    };\n\n    _this.renderScrollView = function (pages) {\n      return _react.default.createElement(_reactNative.ScrollView, (0, _extends2.default)({\n        ref: function ref(component) {\n          _this.scrollView = component;\n        }\n      }, _this.props, {\n        contentContainerStyle: [styles.wrapper, _this.props.style],\n        onScrollBeginDrag: _this.onScrollBegin,\n        onMomentumScrollEnd: _this.onScrollEnd,\n        onScrollEndDrag: _this.onScrollEndDrag,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 5\n        }\n      }), pages.map(function (page, i) {\n        return _react.default.createElement(_reactNative.View, {\n          style: styles.slide,\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 9\n          }\n        }, page);\n      }));\n    };\n\n    _this.renderPagination = function () {\n      if (_this.state.total <= 1) {\n        return null;\n      }\n\n      var ActiveDot = _react.default.createElement(_reactNative.View, {\n        style: _this.props.type === 'Home' ? [styles.dotHome, styles.activeDot] : [styles.dot, styles.activeDot],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 7\n        }\n      });\n\n      var Dot = _react.default.createElement(_reactNative.View, {\n        style: _this.props.type === 'Home' ? styles.dotHome : styles.dot,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 7\n        }\n      });\n\n      var dots = [];\n\n      for (var key = 0; key < _this.state.total; key++) {\n        dots.push(key == _this.state.index ? _react.default.cloneElement(ActiveDot, {\n          key: key\n        }) : _react.default.cloneElement(Dot, {\n          key: key\n        }));\n      }\n\n      if (_this.props.type === 'Home') {\n        if (_this.state.index !== 0) {\n          condition = 0;\n        }\n\n        return _react.default.createElement(_reactNative.View, {\n          pointerEvents: \"none\",\n          style: {\n            flexDirection: condition === 1 && _this.state.total - 1 !== _this.state.index ? 'row' : _reactNative.Platform.OS === 'android' ? _reactNative.I18nManager.isRTL ? 'row-reverse' : 'row' : 'row',\n            justifyContent: 'center',\n            alignItems: 'flex-end',\n            flex: 1,\n            backgroundColor: _Theme.default.textColor\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 9\n          }\n        }, dots);\n      }\n\n      return _react.default.createElement(_reactNative.View, {\n        pointerEvents: \"none\",\n        style: [styles.pagination, styles.fullScreen2],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 7\n        }\n      }, dots);\n    };\n\n    _this.FUN = function (nav) {\n      _reactNative.StatusBar.setBackgroundColor(_Theme.default.StatusBarColor);\n\n      _reactNative.StatusBar.setHidden(false);\n\n      if (_syncStorage.default.get('showIntroPage') === '0') {\n        nav.navigate('Home1Screen');\n      } else {\n        nav.navigate('App');\n      }\n    };\n\n    _this.renderButton = function (nav) {\n      var lastScreen = _this.state.index === _this.state.total - 1;\n\n      if (lastScreen) {\n        _this.state = _this.initState(_this.props);\n      }\n\n      return _react.default.createElement(_reactNative.View, {\n        pointerEvents: \"box-none\",\n        style: [styles.buttonWrapper, styles.fullScreen2],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 7\n        }\n      }, _this.props.type === 'Home' ? null : lastScreen ? _react.default.createElement(_reactNative.TouchableOpacity, {\n        style: {\n          paddingTop: 5\n        },\n        onPress: function onPress() {\n          if (_this.props.cartItems2.Config.languageJson2 !== '') {\n            _this.FUN(nav);\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: {\n          alignItems: 'center',\n          height: 38,\n          width: 80,\n          backgroundColor: 'transparent',\n          justifyContent: 'center',\n          borderColor: _Theme.default.primary,\n          borderWidth: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: {\n          textAlign: 'center',\n          color: _Theme.default.primary,\n          fontSize: 13,\n          fontWeight: '500'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 15\n        }\n      }, 'Start Now'))) : _react.default.createElement(_reactNative.TouchableOpacity, {\n        style: {\n          paddingTop: 5\n        },\n        onPress: function onPress() {\n          return _this.swipe(nav);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: {\n          alignItems: 'center',\n          height: 38,\n          width: 80,\n          backgroundColor: 'transparent',\n          justifyContent: 'center',\n          borderColor: _Theme.default.primary,\n          borderWidth: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: {\n          textAlign: 'center',\n          color: _Theme.default.primary,\n          fontSize: 13,\n          fontWeight: '500'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 15\n        }\n      }, 'Continue'))));\n    };\n\n    _this.render = function () {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props,\n          children = _ref.children;\n\n      return _react.default.createElement(_reactNative.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 5\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 9\n        }\n      }, _this.props.type === 'Home' && _this.props.type2 !== 'ProductDetails' ? _react.default.createElement(_reactNative.View, {\n        style: [styles.container, {\n          width: width,\n          height: 200,\n          backgroundColor: 'transparent'\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 15\n        }\n      }, _this.renderScrollView(children), _this.renderPagination(), _this.renderButton(_this.props.navigation)) : _this.props.type2 === 'ProductDetails' ? _react.default.createElement(_reactNative.View, {\n        style: [styles.container, styles.fullScreen3],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 15\n        }\n      }, _this.renderScrollView(children), _this.renderPagination(), _this.renderButton(_this.props.navigation)) : _react.default.createElement(_reactNative.View, {\n        style: [styles.container, styles.fullScreen2],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 15\n        }\n      }, _this.renderScrollView(children), _this.renderPagination(), _this.renderButton(_this.props.navigation))));\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(OnboardingScreens, [{\n    key: \"initState\",\n    value: function initState(props) {\n      var total = props.children ? props.children.length || 1 : 0;\n      var index = this.props.type === 'Home' ? total > 1 ? 0 : 0 : total > 1 ? Math.min(props.index, total - 1) : 0;\n      var offset = width * (index - 1);\n      var state = {\n        total: total,\n        index: index,\n        offset: offset,\n        width: width,\n        height: height,\n        timer: null,\n        temp: -1\n      };\n      this.internals = {\n        isScrolling: false,\n        offset: offset\n      };\n      return state;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      condition = 1;\n    }\n  }]);\n  return OnboardingScreens;\n}(_react.PureComponent);\n\nOnboardingScreens.navigationOptions = {\n  headerStyle: {\n    backgroundColor: '#16a085',\n    elevation: null\n  }\n};\nOnboardingScreens.defaultProps = {\n  horizontal: true,\n  pagingEnabled: true,\n  showsHorizontalScrollIndicator: false,\n  showsVerticalScrollIndicator: false,\n  bounces: false,\n  scrollsToTop: false,\n  removeClippedSubviews: true,\n  automaticallyAdjustContentInsets: false,\n  index: 0\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cartItems2: state\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, null)(OnboardingScreens);\n\nexports.default = _default;\n\nvar styles = _reactNative.StyleSheet.create({\n  fullScreen2: {\n    width: width,\n    height: height\n  },\n  fullScreen3: {\n    width: width,\n    height: _reactNative.Platform.OS === 'ios' ? _Theme.default.singleRowCardWidth + 240 : _Theme.default.singleRowCardWidth + 240,\n    backgroundColor: 'transparent'\n  },\n  container: {\n    backgroundColor: 'transparent',\n    position: 'relative'\n  },\n  slide: {\n    backgroundColor: 'transparent'\n  },\n  pagination: {\n    position: 'absolute',\n    bottom: 90,\n    left: 0,\n    right: 0,\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n    backgroundColor: 'transparent'\n  },\n  paginationHome: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n    backgroundColor: _Theme.default.textColor\n  },\n  dotHome: {\n    backgroundColor: 'rgba(0,0,0,0.2)',\n    width: 8,\n    height: 8,\n    borderRadius: 4,\n    marginLeft: 3,\n    marginRight: 3,\n    marginTop: 3,\n    marginBottom: 3\n  },\n  dot: {\n    backgroundColor: 'gray',\n    width: 8,\n    height: 8,\n    borderRadius: 4,\n    marginLeft: 3,\n    marginRight: 3\n  },\n  activeDot: {\n    backgroundColor: _Theme.default.otherBtnsColor\n  },\n  buttonWrapper: {\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    bottom: 45,\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    zIndex: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/mysiew/Documents/eCommerce/codecanyon-xPJMYS8x-react-native-delivery-solution-with-advance-website-and-cms/SourceCode/vesend-consumer-app-master/src/common/Swiper.js"],"names":["Dimensions","get","width","height","condition","OnboardingScreens","state","initState","props","onScrollBegin","internals","isScrolling","onScrollEnd","e","updateIndex","nativeEvent","contentOffset","x","position","onScrollEndDrag","newOffset","children","index","offset","length","diff","step","temp","parseInt","Math","round","setState","swipe","total","y","scrollView","scrollTo","animated","useNativeDriver","Platform","OS","setImmediate","renderScrollView","pages","component","styles","wrapper","style","map","page","i","slide","renderPagination","ActiveDot","type","dotHome","activeDot","dot","Dot","dots","key","push","React","cloneElement","flexDirection","I18nManager","isRTL","justifyContent","alignItems","flex","backgroundColor","themeStyle","textColor","pagination","fullScreen2","FUN","nav","StatusBar","setBackgroundColor","StatusBarColor","setHidden","SyncStorage","navigate","renderButton","lastScreen","buttonWrapper","paddingTop","cartItems2","Config","languageJson2","borderColor","primary","borderWidth","textAlign","color","fontSize","fontWeight","render","type2","container","navigation","fullScreen3","min","timer","PureComponent","navigationOptions","headerStyle","elevation","defaultProps","horizontal","pagingEnabled","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","bounces","scrollsToTop","removeClippedSubviews","automaticallyAdjustContentInsets","mapStateToProps","StyleSheet","create","singleRowCardWidth","bottom","left","right","paginationHome","borderRadius","marginLeft","marginRight","marginTop","marginBottom","otherBtnsColor","zIndex"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport {\n  Dimensions, // Detects screen dimensions\n  Platform, // Detects platform running the app\n  ScrollView, // Handles navigation between screens\n  StyleSheet, // CSS-like styles\n  View, // Container PureComponent,\n  I18nManager,\n  TouchableOpacity,\n  Text,\n  StatusBar\n} from 'react-native'\nimport themeStyle from './Theme.style'\nimport SyncStorage from 'sync-storage'\nimport { connect } from 'react-redux'\n\nconst { width, height } = Dimensions.get('window')\nlet condition = 1\nclass OnboardingScreens extends PureComponent {\n  static navigationOptions = {\n    headerStyle: {\n      backgroundColor: '#16a085',\n      elevation: null\n    }\n  }\n\n  condition = 1\n  // Props for ScrollView component\n  static defaultProps = {\n    // Arrange screens horizontally\n    horizontal: true,\n    // Scroll exactly to the next screen, instead of continous scrolling\n    pagingEnabled: true,\n    // Hide all scroll indicators\n    showsHorizontalScrollIndicator: false,\n    showsVerticalScrollIndicator: false,\n    // Do not bounce when the end is reached\n    bounces: false,\n    // Do not scroll to top when the status bar is tapped\n    scrollsToTop: false,\n    // Remove offscreen child views\n    removeClippedSubviews: true,\n    // Do not adjust content behind nav-, tab- or toolbars automatically\n    automaticallyAdjustContentInsets: false,\n    // Fisrt is screen is active\n    index: 0\n  }\n\n  state = this.initState(this.props)\n  /**\n   * Initialize the state\n   */\n  initState (props) {\n    // Get the total number of slides passed as children\n\n    const total = props.children ? props.children.length || 1 : 0\n    // Current index\n    const index =\n        this.props.type === 'Home'\n          ? total > 1\n            ? 0\n            : 0\n          : total > 1\n            ? Math.min(props.index, total - 1)\n            : 0\n    const offset = width * (index - 1)\n\n    const state = {\n      total,\n      index,\n      offset,\n      width,\n      height,\n      timer: null,\n      temp: -1\n    }\n\n    // Component internals as a class property,\n    // and not state to avoid component re-renders when updated\n    this.internals = {\n      isScrolling: false,\n      offset\n    }\n\n    return state\n  }\n\n  /**\n   * Scroll begin handler\n   * @param {object} e native event\n   */\n  onScrollBegin = () => {\n    // Update internal isScrolling state\n    this.internals.isScrolling = true\n  }\n\n  /**\n   * Scroll end handler\n   * @param {object} e native event\n   */\n  onScrollEnd = e => {\n    // Update internal isScrolling state\n    this.internals.isScrolling = false\n\n    // Update index\n    this.updateIndex(\n      e.nativeEvent.contentOffset\n        ? e.nativeEvent.contentOffset.x\n        : e.nativeEvent.position * this.state.width\n    )\n  }\n\n  /*\n   * Drag end handler\n   * @param {object} e native event\n   */\n  onScrollEndDrag = e => {\n    const {\n      contentOffset: { x: newOffset }\n    } = e.nativeEvent\n    const { children } = this.props\n    const { index } = this.state\n    const { offset } = this.internals\n\n    // Update internal isScrolling state\n    // if swiped right on the last slide\n    // or left on the first one\n    if (\n      offset === newOffset &&\n      (index - 1 === 0 || index - 1 === children.length - 1)\n    ) {\n      this.internals.isScrolling = false\n    }\n  }\n\n  /**\n   * Update index after scroll\n   * @param {object} offset content offset\n   */\n  updateIndex = offset => {\n    const state = this.state\n    const diff = offset - this.internals.offset\n    const step = state.width\n    let index = state.temp\n    // Do nothing if offset didn't change\n    if (!diff) {\n      return\n    }\n\n    // Make sure index is always an integer\n    index = parseInt(index + Math.round(diff / step), 10)\n    // Update internal offset\n    this.internals.offset = offset\n    // Update index in the state\n    this.setState({\n      temp: index,\n      index\n    })\n  }\n\n  /**\n   * Swipe one slide forward\n   */\n  swipe = () => {\n    // Ignore if already scrolling or if there is less than 2 slides\n    if (this.internals.isScrolling || this.state.total < 2) {\n      return\n    }\n\n    const state = this.state\n    const diff = this.state.index + 1\n    const x = diff * state.width\n    const y = 0\n\n    // Call scrollTo on scrollView component to perform the swipe\n    this.scrollView && this.scrollView.scrollTo({ x, y, animated: true, useNativeDriver: true })\n\n    // Update internal scroll state\n    this.internals.isScrolling = true\n\n    // Trigger onScrollEnd manually on android\n    if (Platform.OS === 'android') {\n      setImmediate(() => {\n        this.onScrollEnd({\n          nativeEvent: {\n            position: diff\n          }\n        })\n      })\n    }\n  }\n\n  /**\n   * Render ScrollView component\n   * @param {array} slides to swipe through\n   */\n  renderScrollView = pages => (\n    <ScrollView\n      ref={component => {\n        this.scrollView = component\n      }}\n      {...this.props}\n      contentContainerStyle={[styles.wrapper, this.props.style]}\n      onScrollBeginDrag={this.onScrollBegin}\n      onMomentumScrollEnd={this.onScrollEnd}\n      onScrollEndDrag={this.onScrollEndDrag}>\n      {pages.map((page, i) => (\n        // Render each slide inside a View\n        <View style={styles.slide} key={i}>\n          {page}\n        </View>\n      ))}\n    </ScrollView>\n  )\n\n  componentDidMount () {\n    condition = 1\n  }\n\n  /**\n   * Render pagination indicators\n   */\n  renderPagination = () => {\n    if (this.state.total <= 1) {\n      return null\n    }\n\n    const ActiveDot = (\n      <View\n        style={\n          this.props.type === 'Home'\n            ? [styles.dotHome, styles.activeDot]\n            : [styles.dot, styles.activeDot]\n        }\n      />\n    )\n    const Dot = (\n      <View\n        style={this.props.type === 'Home' ? styles.dotHome : styles.dot}\n      />\n    )\n    // let temp =0;\n    const dots = []\n    for (let key = 0; key < this.state.total; key++) {\n      dots.push(\n        key == this.state.index\n          ? React.cloneElement(ActiveDot, { key })\n          : React.cloneElement(Dot, { key })\n      )\n    }\n    if (this.props.type === 'Home') {\n      if (this.state.index !== 0) {\n        condition = 0\n      }\n      return (\n        <View\n          pointerEvents='none'\n          style={{\n            flexDirection:\n              condition === 1 && this.state.total - 1 !== this.state.index\n                ? 'row'\n                : Platform.OS === 'android'\n                  ? I18nManager.isRTL\n                    ? 'row-reverse'\n                    : 'row'\n                  : 'row',\n            justifyContent: 'center',\n            alignItems: 'flex-end',\n            flex: 1,\n            backgroundColor: themeStyle.textColor\n          }}>\n          {dots}\n        </View>\n      )\n    }\n\n    return (\n      <View\n        pointerEvents='none'\n        style={[styles.pagination, styles.fullScreen2]}>\n        {dots}\n      </View>\n    )\n  }\n\n  FUN = nav => {\n    StatusBar.setBackgroundColor(themeStyle.StatusBarColor)\n    StatusBar.setHidden(false)\n    if (SyncStorage.get('showIntroPage') === '0') {\n      nav.navigate('Home1Screen')\n    } else {\n      nav.navigate('App')\n    }\n  }\n\n  /**\n   * Render Continue or Done button\n   */\n  renderButton = nav => {\n    // this.state = this.initState(this.props);\n    const lastScreen = this.state.index === this.state.total - 1\n    if (lastScreen) {\n      this.state = this.initState(this.props)\n      // this.setState({index:0})\n    }\n    return (\n      <View\n        pointerEvents='box-none'\n        style={[styles.buttonWrapper, styles.fullScreen2]}>\n        {this.props.type === 'Home' ? null : lastScreen ? (\n          <TouchableOpacity\n            style={{ paddingTop: 5 }}\n            onPress={() => {\n              if (this.props.cartItems2.Config.languageJson2 !== '') {\n                this.FUN(nav)\n              }\n            }}>\n            <View\n              style={{\n                alignItems: 'center',\n                height: 38,\n                width: 80,\n                backgroundColor: 'transparent',\n                justifyContent: 'center',\n                borderColor: themeStyle.primary,\n                borderWidth: 2\n              }}>\n              <Text\n                style={{\n                  textAlign: 'center',\n                  color: themeStyle.primary,\n                  fontSize: 13,\n                  fontWeight: '500'\n                }}>\n                {'Start Now'}\n              </Text>\n            </View>\n          </TouchableOpacity>\n        ) : (\n          <TouchableOpacity\n            style={{ paddingTop: 5 }}\n            onPress={() => this.swipe(nav)}>\n            <View\n              style={{\n                alignItems: 'center',\n                height: 38,\n                width: 80,\n                backgroundColor: 'transparent',\n                justifyContent: 'center',\n                borderColor: themeStyle.primary,\n                borderWidth: 2\n              }}>\n              <Text\n                style={{\n                  textAlign: 'center',\n                  color: themeStyle.primary,\n                  fontSize: 13,\n                  fontWeight: '500'\n                }}>\n                {'Continue'}\n              </Text>\n            </View>\n          </TouchableOpacity>\n        )}\n      </View>\n    )\n  }\n\n  /**\n   * Render the component\n   */\n\n  render = ({ children } = this.props) => (\n    <View>\n      {\n        <View>\n          {this.props.type === 'Home' &&\n          this.props.type2 !== 'ProductDetails' ? (\n              <View\n                style={[\n                  styles.container,\n                  {\n                    width,\n                    // height: this.props.news === true ? height * 0.246 : Platform.OS === 'ios' ? height * 0.260 : height * 0.266,\n                    height: 200,\n                    backgroundColor: 'transparent'\n                  }\n                ]}>\n                {/* Render screens */}\n                {this.renderScrollView(children)}\n                {/* Render pagination */}\n                {this.renderPagination()}\n                {/* Render Continue or Done button */}\n                {this.renderButton(this.props.navigation)}\n              </View>\n            ) : this.props.type2 === 'ProductDetails' ? (\n              <View style={[styles.container, styles.fullScreen3]}>\n                {/* Render screens */}\n                {this.renderScrollView(children)}\n                {/* Render pagination */}\n                {this.renderPagination()}\n                {/* Render Continue or Done button */}\n                {this.renderButton(this.props.navigation)}\n              </View>\n            ) : (\n            // IntroScreen\n              <View style={[styles.container, styles.fullScreen2]}>\n                {/* Render screens */}\n                {this.renderScrollView(children)}\n                {/* Render pagination */}\n                {this.renderPagination()}\n                {/* Render Continue or Done button */}\n                {this.renderButton(this.props.navigation)}\n              </View>\n            )}\n        </View>\n      }\n    </View>\n  )\n}\n\n/// ///////////////////////////////////////////////\nconst mapStateToProps = state => ({\n  cartItems2: state\n})\nexport default connect(mapStateToProps, null)(OnboardingScreens)\n\nconst styles = StyleSheet.create({\n  // Set width and height to the screen size\n  fullScreen2: {\n    width,\n    height\n  },\n  // fullScreen: {\n  //   width,\n  //   height: height * 0.246,\n  //   // height: 208,\n  //   backgroundColor: 'transparent',\n  // },\n  fullScreen3: {\n    width,\n    height:\n      Platform.OS === 'ios'\n        ? themeStyle.singleRowCardWidth + 240\n        : themeStyle.singleRowCardWidth + 240,\n    backgroundColor: 'transparent'\n  },\n  // Main container\n  container: {\n    backgroundColor: 'transparent',\n    position: 'relative'\n  },\n  // Slide\n  slide: {\n    backgroundColor: 'transparent'\n    // width: width - 1,\n    // height: 208,\n  },\n  // Pagination indicators\n  pagination: {\n    position: 'absolute',\n    bottom: 90,\n    left: 0,\n    right: 0,\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n    backgroundColor: 'transparent'\n  },\n  paginationHome: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n    backgroundColor: themeStyle.textColor\n  },\n  // Pagination dot\n  dotHome: {\n    backgroundColor: 'rgba(0,0,0,0.2)',\n    width: 8,\n    height: 8,\n    borderRadius: 4,\n    marginLeft: 3,\n    marginRight: 3,\n    marginTop: 3,\n    marginBottom: 3\n  },\n  // Pagination dot\n  dot: {\n    backgroundColor: 'gray',\n    width: 8,\n    height: 8,\n    borderRadius: 4,\n    marginLeft: 3,\n    marginRight: 3\n  },\n  // Active dot\n  activeDot: {\n    backgroundColor: themeStyle.otherBtnsColor\n  },\n  buttonWrapper: {\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    bottom: 45,\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    zIndex: 1\n  }\n})\n"]},"metadata":{},"sourceType":"script"}