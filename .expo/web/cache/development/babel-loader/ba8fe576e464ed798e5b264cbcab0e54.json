{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNavigationStack = require(\"react-navigation-stack\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeRenderHtml = _interopRequireDefault(require(\"react-native-render-html\"));\n\nvar _Theme = _interopRequireDefault(require(\"../common/Theme.style\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\mysiew\\\\Documents\\\\eCommerce\\\\codecanyon-xPJMYS8x-react-native-delivery-solution-with-advance-website-and-cms\\\\SourceCode\\\\vesend-consumer-app-master\\\\src\\\\screens\\\\TermAndServiceScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar TermAndServices = function (_PureComponent) {\n  (0, _inherits2.default)(TermAndServices, _PureComponent);\n\n  var _super = _createSuper(TermAndServices);\n\n  function TermAndServices() {\n    (0, _classCallCheck2.default)(this, TermAndServices);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(TermAndServices, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.navigation.setParams({\n        headerTitle: this.props.isLoading.Config.languageJson2['Term and Services']\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(_reactNative.View, {\n        style: {\n          padding: 10,\n          flex: 1,\n          backgroundColor: _Theme.default.backgroundColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 5\n        }\n      }, _react.default.createElement(_reactNative.ScrollView, {\n        style: {\n          flex: 1,\n          backgroundColor: _Theme.default.backgroundColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }\n      }, this.props.isLoading.Config.termServices === '' || this.props.isLoading.Config.termServices === null || this.props.isLoading.Config.termServices === undefined ? _react.default.createElement(_reactNative.View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center',\n          alignSelf: 'center',\n          alignContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center',\n          marginBottom: 40,\n          alignSelf: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: {\n          fontSize: _Theme.default.largeSize + 2,\n          color: _Theme.default.textColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }, this.props.isLoading.Config.languageJson2['No Data Found']))) : _react.default.createElement(_reactNativeRenderHtml.default, {\n        onLinkPress: function onLinkPress(event, href) {\n          _reactNative.Linking.openURL(href);\n        },\n        html: this.props.isLoading.Config.termServices,\n        baseFontStyle: {\n          color: _Theme.default.textColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n  return TermAndServices;\n}(_react.PureComponent);\n\nTermAndServices.navigationOptions = function (_ref) {\n  var navigation = _ref.navigation;\n  var headerStyle = navigation.getParam('headerTitle');\n  return {\n    headerTitle: headerStyle,\n    cardStyleInterpolator: _reactNavigationStack.CardStyleInterpolators.forHorizontalIOS,\n    headerRight: function headerRight() {\n      return null;\n    },\n    gestureEnabled: false,\n    drawerLockMode: 'locked-closed',\n    headerTitleAlign: 'center',\n    headerTintColor: _Theme.default.headerTintColor,\n    headerStyle: {\n      backgroundColor: _Theme.default.primary\n    },\n    headerTitleStyle: {\n      fontWeight: _reactNative.Platform.OS === 'android' ? 'bold' : 'normal'\n    },\n    headerForceInset: {\n      top: 'never',\n      vertical: 'never'\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoading: state\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, null)(TermAndServices);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/mysiew/Documents/eCommerce/codecanyon-xPJMYS8x-react-native-delivery-solution-with-advance-website-and-cms/SourceCode/vesend-consumer-app-master/src/screens/TermAndServiceScreen.js"],"names":["TermAndServices","props","navigation","setParams","headerTitle","isLoading","Config","languageJson2","padding","flex","backgroundColor","themeStyle","termServices","undefined","justifyContent","alignItems","alignSelf","alignContent","marginBottom","fontSize","largeSize","color","textColor","event","href","Linking","openURL","PureComponent","navigationOptions","headerStyle","getParam","cardStyleInterpolator","CardStyleInterpolators","forHorizontalIOS","headerRight","gestureEnabled","drawerLockMode","headerTitleAlign","headerTintColor","primary","headerTitleStyle","fontWeight","Platform","OS","headerForceInset","top","vertical","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport { CardStyleInterpolators } from 'react-navigation-stack'\nimport { connect } from 'react-redux'\nimport { View, ScrollView, Linking, Platform, Text } from 'react-native'\nimport HTML from 'react-native-render-html'\nimport themeStyle from '../common/Theme.style'\nclass TermAndServices extends PureComponent {\nstatic navigationOptions = ({ navigation }) => {\n  const headerStyle = navigation.getParam(\n    'headerTitle'\n  )\n  return {\n    headerTitle: headerStyle,\n    cardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS,\n    headerRight: () => null,\n    gestureEnabled: false,\n    drawerLockMode: 'locked-closed',\n    headerTitleAlign: 'center',\n    headerTintColor: themeStyle.headerTintColor,\n    headerStyle: {\n      backgroundColor: themeStyle.primary\n    },\n    headerTitleStyle: {\n      fontWeight: Platform.OS === 'android' ? 'bold' : 'normal'\n    },\n    headerForceInset: { top: 'never', vertical: 'never' }\n  }\n};\n\ncomponentDidMount () {\n  this.props.navigation.setParams({\n    headerTitle: this.props.isLoading.Config.languageJson2['Term and Services']\n  })\n}\n\nrender () {\n  return (\n    <View style={{\n      padding: 10,\n      flex: 1,\n      backgroundColor: themeStyle.backgroundColor\n\n    }}>\n      <ScrollView\n        style={{\n          flex: 1,\n          backgroundColor: themeStyle.backgroundColor\n        }}\n\n      >\n        { this.props.isLoading.Config.termServices === '' ||\n       this.props.isLoading.Config.termServices === null ||\n       this.props.isLoading.Config.termServices === undefined ? (\n            <View\n              style={{\n                flex: 1,\n                justifyContent: 'center',\n                alignItems: 'center',\n                alignSelf: 'center',\n                alignContent: 'center'\n              }}>\n              <View\n                style={{\n                  flex: 1,\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  marginBottom: 40,\n                  alignSelf: 'center'\n                }}>\n                <Text style={{ fontSize: themeStyle.largeSize + 2, color: themeStyle.textColor }}>\n                  {this.props.isLoading.Config.languageJson2['No Data Found']}\n                </Text>\n              </View>\n            </View>\n          )\n          : <HTML\n            onLinkPress={(event, href) => {\n              Linking.openURL(href)\n            }} html={this.props.isLoading.Config.termServices} baseFontStyle={{ color: themeStyle.textColor }}\n          />\n        }\n      </ScrollView>\n    </View>\n  )\n}\n}\nconst mapStateToProps = state => ({\n  isLoading: state\n})\n\nexport default connect(\n  mapStateToProps,\n  null\n)(TermAndServices)\n"]},"metadata":{},"sourceType":"script"}