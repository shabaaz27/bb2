{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _redux = require(\"redux\");\n\nvar _reduxThunk = _interopRequireDefault(require(\"redux-thunk\"));\n\nvar _cartItems = _interopRequireDefault(require(\"../reducers/cartItems\"));\n\nvar _sharedData = _interopRequireDefault(require(\"../reducers/sharedData\"));\n\nvar _config = _interopRequireDefault(require(\"../reducers/config\"));\n\nvar _reactNativeOffline = require(\"react-native-offline\");\n\nvar middlewares = [_reduxThunk.default];\nvar networkMiddleware = (0, _reactNativeOffline.createNetworkMiddleware)({\n  queueReleaseThrottle: 200\n});\nvar Cr = (0, _redux.combineReducers)({\n  cartItems: _cartItems.default,\n  sharedData: _sharedData.default,\n  Config: _config.default,\n  network: _reactNativeOffline.reducer\n});\n\nvar _default = store = (0, _redux.createStore)(Cr, _redux.applyMiddleware.apply(void 0, [networkMiddleware].concat(middlewares)));\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/mysiew/Documents/eCommerce/codecanyon-xPJMYS8x-react-native-delivery-solution-with-advance-website-and-cms/SourceCode/vesend-consumer-app-master/src/redux/store/index.js"],"names":["middlewares","thunk","networkMiddleware","queueReleaseThrottle","Cr","cartItems","sharedData","Config","network","store","applyMiddleware"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA,IAAMA,WAAW,GAAG,CAACC,mBAAD,CAApB;AACA,IAAMC,iBAAiB,GAAG,iDAAwB;AAChDC,EAAAA,oBAAoB,EAAE;AAD0B,CAAxB,CAA1B;AAGA,IAAMC,EAAE,GAAG,4BAAgB;AACzBC,EAAAA,SAAS,EAATA,kBADyB;AAEzBC,EAAAA,UAAU,EAAVA,mBAFyB;AAGzBC,EAAAA,MAAM,EAANA,eAHyB;AAIzBC,EAAAA,OAAO,EAAPA;AAJyB,CAAhB,CAAX;;eAOeC,KAAK,GAAG,wBACrBL,EADqB,EAErBM,sCAAgBR,iBAAhB,SAAsCF,WAAtC,EAFqB,C","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport cartItems from '../reducers/cartItems'\nimport sharedData from '../reducers/sharedData'\nimport Config from '../reducers/config'\nimport { reducer as network, createNetworkMiddleware } from 'react-native-offline'\nconst middlewares = [thunk]\nconst networkMiddleware = createNetworkMiddleware({\n  queueReleaseThrottle: 200\n})\nconst Cr = combineReducers({\n  cartItems,\n  sharedData,\n  Config,\n  network\n})\n\nexport default store = createStore(\n  Cr,\n  applyMiddleware(networkMiddleware, ...middlewares)\n)\n"]},"metadata":{},"sourceType":"script"}