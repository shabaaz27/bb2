{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _index = require(\"./index\");\n\nvar _reactNativeLoadingSpinnerOverlay = _interopRequireDefault(require(\"react-native-loading-spinner-overlay\"));\n\nvar _reactNativeEasyToast = _interopRequireDefault(require(\"react-native-easy-toast\"));\n\nvar _WooComFetch = require(\"../common/WooComFetch\");\n\nvar _Theme = _interopRequireDefault(require(\"./Theme.style\"));\n\nvar _reactNativeScalableImage = _interopRequireDefault(require(\"react-native-scalable-image\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\mysiew\\\\Documents\\\\eCommerce\\\\codecanyon-xPJMYS8x-react-native-delivery-solution-with-advance-website-and-cms\\\\SourceCode\\\\vesend-consumer-app-master\\\\src\\\\common\\\\SwiperBanner3.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar _Dimensions$get = _reactNative.Dimensions.get('window'),\n    width = _Dimensions$get.width;\n\nvar App = function (_React$PureComponent) {\n  (0, _inherits2.default)(App, _React$PureComponent);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, App);\n    _this = _super.call(this, props);\n    _this.myCustomAnimatedValue = new _reactNative.Animated.Value(0);\n\n    _this.getPageTransformStyle = function (index) {\n      return {\n        transform: [{\n          scale: _this.myCustomAnimatedValue.interpolate({\n            inputRange: [(index - 1) * (width + 8), index * (width + 8), (index + 1) * (width + 8)],\n            outputRange: [0, 1, 0],\n            extrapolate: 'clamp'\n          }, {\n            useNativeDriver: true\n          })\n        }, {\n          rotate: _this.myCustomAnimatedValue.interpolate({\n            inputRange: [(index - 1) * (width + 8), index * (width + 8), (index + 1) * (width + 8)],\n            outputRange: ['180deg', '0deg', '-180deg'],\n            extrapolate: 'clamp'\n          }, {\n            useNativeDriver: true\n          })\n        }]\n      };\n    };\n\n    _this.getOneProduct = function _callee(value) {\n      var formData, json2;\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                SpinnerTemp: true\n              });\n\n              formData = new FormData();\n              formData.append('language_id', '1');\n              formData.append('products_id', value);\n              formData.append('currency_code', '1');\n              formData.append('currency_code', _this.props.currency);\n              _context.next = 8;\n              return _regenerator.default.awrap((0, _WooComFetch.postHttp)((0, _WooComFetch.getUrl)() + '/api/' + 'getallproducts', formData));\n\n            case 8:\n              json2 = _context.sent;\n\n              if (json2.success !== '1') {\n                _this.setState({\n                  SpinnerTemp: false\n                });\n\n                _this.refs.toast.show(json2.message + _this.props.language2);\n              } else {\n                _this.setState({\n                  SpinnerTemp: false\n                });\n\n                _this.props.navigation.navigate('ProductDetails', {\n                  objectArray: json2.product_data[0]\n                });\n              }\n\n              _this.setState({\n                SpinnerTemp: false\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      SpinnerTemp: false\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(_reactNative.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNativeLoadingSpinnerOverlay.default, {\n        visible: this.state.SpinnerTemp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }), _react.default.createElement(_reactNativeEasyToast.default, {\n        ref: \"toast\",\n        style: {\n          backgroundColor: _Theme.default.otherBtnsColor,\n          position: 'absolute',\n          top: -39,\n          zIndex: 12\n        },\n        position: \"top\",\n        positionValue: 200,\n        fadeOutDuration: 1000,\n        textStyle: {\n          color: '#fff',\n          fontSize: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }), _react.default.createElement(_index.ParallaxSwiper, {\n        speed: 0.5,\n        animatedValue: this.myCustomAnimatedValue,\n        dividerWidth: 8,\n        dividerColor: _Theme.default.textColor,\n        backgroundColor: _Theme.default.textColor,\n        showProgressBar: true,\n        progressBarBackgroundColor: \"rgba(0,0,0,0.25)\",\n        progressBarValueBackgroundColor: _Theme.default.otherBtnsColor,\n        progressBarThickness: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      }, this.props.banners.length > 0 ? this.props.banners.map(function (val, key) {\n        return _react.default.createElement(_index.ParallaxSwiperPage, {\n          scrollToIndex: 0,\n          BackgroundComponent: _react.default.createElement(_reactNative.TouchableOpacity, {\n            onPress: function onPress() {\n              if (val.type === 'category') {\n                _this2.props.navigation.navigate('NewestScreen', {\n                  id: parseInt(val.url),\n                  name: '',\n                  sortOrder: val.type\n                });\n              } else if (val.type === 'product') {\n                _this2.getOneProduct(parseInt(val.url));\n              } else {\n                _this2.props.navigation.navigate('NewestScreen', {\n                  id: parseInt(val.url),\n                  name: '',\n                  sortOrder: val.type\n                });\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }\n          }, _react.default.createElement(_reactNativeScalableImage.default, {\n            placeholder: false,\n            ActivityIndicator: true,\n            key: key,\n            width: _reactNative.Dimensions.get('window').width,\n            loadingStyle: {\n              size: 'large',\n              color: _Theme.default.loadingIndicatorColor\n            },\n            placeholderStyle: {\n              width: 0,\n              height: 0\n            },\n            source: {\n              uri: val.image !== undefined ? _Theme.default.url + '/' + val.image.toString().startsWith('https') ? _Theme.default.url + '/' + val.image.toString() : _Theme.default.url + '/' + val.image.toString().replace('http', 'https') : ''\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 21\n            }\n          })),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }\n        });\n      }) : null));\n    }\n  }]);\n  return App;\n}(_react.default.PureComponent);\n\nexports.default = App;","map":{"version":3,"sources":["C:/Users/mysiew/Documents/eCommerce/codecanyon-xPJMYS8x-react-native-delivery-solution-with-advance-website-and-cms/SourceCode/vesend-consumer-app-master/src/common/SwiperBanner3.js"],"names":["Dimensions","get","width","App","props","myCustomAnimatedValue","Animated","Value","getPageTransformStyle","index","transform","scale","interpolate","inputRange","outputRange","extrapolate","useNativeDriver","rotate","getOneProduct","value","setState","SpinnerTemp","formData","FormData","append","currency","json2","success","refs","toast","show","message","language2","navigation","navigate","objectArray","product_data","state","backgroundColor","theme","otherBtnsColor","position","top","zIndex","color","fontSize","textColor","banners","length","map","val","key","type","id","parseInt","url","name","sortOrder","size","loadingIndicatorColor","height","uri","image","undefined","toString","startsWith","replace","React","PureComponent"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Animated, Dimensions, TouchableOpacity, View } from 'react-native'\nimport { ParallaxSwiper, ParallaxSwiperPage } from './index'\nimport Spinner from 'react-native-loading-spinner-overlay'\nimport Toast from 'react-native-easy-toast'\nimport { getUrl, postHttp } from '../common/WooComFetch'\nimport theme from './Theme.style'\nimport Image from 'react-native-scalable-image'\nconst { width } = Dimensions.get('window')\n\nexport default class App extends React.PureComponent {\n  constructor (props) {\n    super(props)\n    this.state = {\n      SpinnerTemp: false\n    }\n  }\n\n  myCustomAnimatedValue = new Animated.Value(0)\n\n  getPageTransformStyle = index => ({\n    transform: [\n      {\n        scale: this.myCustomAnimatedValue.interpolate({\n          inputRange: [\n            (index - 1) * (width + 8), // Add 8 for dividerWidth\n            index * (width + 8),\n            (index + 1) * (width + 8)\n          ],\n          outputRange: [0, 1, 0],\n          extrapolate: 'clamp'\n        }, { useNativeDriver: true })\n      },\n      {\n        rotate: this.myCustomAnimatedValue.interpolate({\n          inputRange: [\n            (index - 1) * (width + 8),\n            index * (width + 8),\n            (index + 1) * (width + 8)\n          ],\n          outputRange: ['180deg', '0deg', '-180deg'],\n          extrapolate: 'clamp'\n        }, { useNativeDriver: true })\n      }\n    ]\n  })\n\n  // getting single product data\n  getOneProduct = async value => {\n    this.setState({ SpinnerTemp: true })\n    const formData = new FormData()\n    formData.append('language_id', '1')\n    formData.append('products_id', value)\n    formData.append('currency_code', '1')\n    formData.append(\n      'currency_code',\n      this.props.currency\n    )\n    const json2 = await postHttp(\n      getUrl() + '/api/' + 'getallproducts',\n      formData\n    )\n    if (json2.success !== '1') {\n      this.setState({ SpinnerTemp: false })\n      this.refs.toast.show(\n        json2.message +\n          this.props.language2\n      )\n    } else {\n      this.setState({ SpinnerTemp: false })\n      this.props.navigation.navigate('ProductDetails', {\n        objectArray: json2.product_data[0] //\n      })\n    }\n    this.setState({ SpinnerTemp: false })\n  }\n\n  render () {\n    return (\n      <View>\n        <Spinner visible={this.state.SpinnerTemp} />\n        <Toast\n          ref='toast'\n          style={{\n            backgroundColor: theme.otherBtnsColor,\n            position: 'absolute',\n            top: -39,\n            zIndex: 12\n          }}\n          position='top'\n          positionValue={200}\n          fadeOutDuration={1000}\n          textStyle={{ color: '#fff', fontSize: 15 }}\n        />\n\n        <ParallaxSwiper\n          speed={0.5}\n          animatedValue={this.myCustomAnimatedValue}\n          dividerWidth={8}\n          dividerColor={theme.textColor}\n          backgroundColor={theme.textColor}\n          showProgressBar={true}\n          progressBarBackgroundColor='rgba(0,0,0,0.25)'\n          progressBarValueBackgroundColor={theme.otherBtnsColor}\n          progressBarThickness={4}>\n          {this.props.banners.length > 0\n            ? this.props.banners.map((val, key) => (\n              <ParallaxSwiperPage\n                scrollToIndex={0}\n                BackgroundComponent={\n                  <TouchableOpacity\n                    onPress={() => {\n                      if (val.type === 'category') {\n                        this.props.navigation.navigate('NewestScreen', {\n                          id: parseInt(val.url),\n                          name: '',\n                          sortOrder: val.type\n                        })\n                      } else if (val.type === 'product') {\n                        this.getOneProduct(parseInt(val.url))\n                      } else {\n                        this.props.navigation.navigate('NewestScreen', {\n                          id: parseInt(val.url),\n                          name: '',\n                          sortOrder: val.type\n                        })\n                      }\n                    }}>\n                    <Image\n                      placeholder={false}\n                      ActivityIndicator={true}\n                      key={key}\n                      width={Dimensions.get('window').width}\n                      loadingStyle={{\n                        size: 'large',\n                        color: theme.loadingIndicatorColor\n                      }}\n                      placeholderStyle={{ width: 0, height: 0 }}\n                      source={{\n                        uri:\n                            val.image !== undefined\n                              ? theme.url +\n                                '/' +\n                                val.image.toString().startsWith('https')\n                                ? theme.url + '/' + val.image.toString()\n                                : theme.url +\n                                  '/' +\n                                  val.image.toString().replace('http', 'https')\n                              : ''\n                      }}\n                    />\n                  </TouchableOpacity>\n                }\n              />\n            ))\n            : null}\n        </ParallaxSwiper>\n      </View>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"script"}