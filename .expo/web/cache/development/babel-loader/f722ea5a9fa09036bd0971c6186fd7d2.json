{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _reactNavigationStack = require(\"react-navigation-stack\");\n\nvar _Theme = _interopRequireDefault(require(\"../common/Theme.style\"));\n\nvar _reactNativeMaps = _interopRequireWildcard(require(\"react-native-maps\"));\n\nvar _geolocation = _interopRequireDefault(require(\"@react-native-community/geolocation\"));\n\nvar _reactNativeEasyToast = _interopRequireDefault(require(\"react-native-easy-toast\"));\n\nvar _reactNativeLoadingSpinnerOverlay = _interopRequireDefault(require(\"react-native-loading-spinner-overlay\"));\n\nvar _ShoppingCartIcon = _interopRequireDefault(require(\"../common/ShoppingCartIcon\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\mysiew\\\\Documents\\\\eCommerce\\\\codecanyon-xPJMYS8x-react-native-delivery-solution-with-advance-website-and-cms\\\\SourceCode\\\\vesend-consumer-app-master\\\\src\\\\screens\\\\MapScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar _Dimensions$get = _reactNative.Dimensions.get('window'),\n    width = _Dimensions$get.width;\n\nvar RewardPoints = function (_Component) {\n  (0, _inherits2.default)(RewardPoints, _Component);\n\n  var _super = _createSuper(RewardPoints);\n\n  (0, _createClass2.default)(RewardPoints, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      return _regenerator.default.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.props.navigation.setParams({\n                headerTitle: this.props.isLoading.Config.languageJson2['Map Screen']\n              });\n\n              if (!(_reactNative.Platform.OS === 'android')) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 4;\n              return _regenerator.default.awrap(this.requestLocationPermission());\n\n            case 4:\n              _context.next = 7;\n              break;\n\n            case 6:\n              _geolocation.default.getCurrentPosition(function (info) {\n                var newCoords = {};\n                newCoords.latitude = parseFloat(JSON.stringify(info.coords.latitude));\n                newCoords.longitude = parseFloat(JSON.stringify(info.coords.longitude));\n                newCoords.latitudeDelta = 0.09;\n                newCoords.longitudeDelta = 0.09;\n\n                _this2.setState({\n                  x: newCoords,\n                  SpinnerTemp: false\n                });\n              }, function (error) {\n                _this2.refs.toast.show(error.message + _this2.props.isLoading.Config.languageJson2['Press and hold the marker to set location']);\n\n                _this2.setState({\n                  SpinnerTemp: false\n                });\n              }, {\n                enableHighAccuracy: false,\n                timeout: 20000\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }]);\n\n  function RewardPoints(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, RewardPoints);\n    _this = _super.call(this, props);\n\n    _this.requestLocationPermission = function _callee() {\n      var granted;\n      return _regenerator.default.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regenerator.default.awrap(_reactNative.PermissionsAndroid.request(_reactNative.PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION, _reactNative.PermissionsAndroid.PERMISSIONS.ACCESS_COARSE_LOCATION, {\n                title: _Theme.default.title,\n                message: _Theme.default.title + 'App access to your location ',\n                buttonNegative: 'Cancel',\n                buttonPositive: 'OK'\n              }));\n\n            case 3:\n              granted = _context2.sent;\n\n              if (granted === _reactNative.PermissionsAndroid.RESULTS.GRANTED) {\n                _geolocation.default.getCurrentPosition(function (info) {\n                  var newCoords = {};\n                  newCoords.latitude = parseFloat(JSON.stringify(info.coords.latitude));\n                  newCoords.longitude = parseFloat(JSON.stringify(info.coords.longitude));\n                  newCoords.latitudeDelta = 0.09;\n                  newCoords.longitudeDelta = 0.09;\n\n                  _this.setState({\n                    x: newCoords,\n                    SpinnerTemp: false\n                  });\n                }, function (error) {\n                  _this.refs.toast.show(error.message + _this.props.isLoading.Config.languageJson2['Press and hold the marker to set location']);\n\n                  _this.setState({\n                    SpinnerTemp: false\n                  });\n                }, {\n                  enableHighAccuracy: false,\n                  timeout: 20000\n                });\n              } else {\n                _this.refs.toast.show(_this.props.isLoading.Config.languageJson2['Press and hold the marker to set location']);\n\n                _this.setState({\n                  SpinnerTemp: false\n                });\n              }\n\n              _context2.next = 11;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n\n              _this.refs.toast.show(_this.props.isLoading.Config.languageJson2['Press and hold the marker to set location']);\n\n              _this.setState({\n                SpinnerTemp: false\n              });\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    _this.state = {\n      x: {\n        latitude: 32.100847,\n        longitude: 72.688091,\n        latitudeDelta: 0.009,\n        longitudeDelta: 0.009\n      },\n      SpinnerTemp: true\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(RewardPoints, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return _react.default.createElement(_reactNative.View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNativeLoadingSpinnerOverlay.default, {\n        visible: this.state.SpinnerTemp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 9\n        }\n      }), _react.default.createElement(_reactNativeEasyToast.default, {\n        ref: \"toast\",\n        style: {\n          backgroundColor: '#c1c1c1'\n        },\n        position: \"bottom\",\n        positionValue: 200,\n        fadeOutDuration: 7000,\n        textStyle: {\n          color: _Theme.default.textColor,\n          fontSize: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }\n      }), _react.default.createElement(_reactNativeMaps.default, {\n        showsUserLocation: true,\n        style: {\n          flex: 1,\n          marginBottom: 40,\n          marginTop: 10\n        },\n        showsMyLocationButton: true,\n        initialRegion: this.state.x,\n        region: this.state.x,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNativeMaps.Marker, {\n        draggable: true,\n        coordinate: this.state.x,\n        title: this.props.isLoading.Config.languageJson2.Address,\n        onDragEnd: function onDragEnd(e) {\n          var newCoords = {};\n          newCoords.latitude = e.nativeEvent.coordinate.latitude;\n          newCoords.longitude = e.nativeEvent.coordinate.longitude;\n          newCoords.latitudeDelta = 0.09;\n          newCoords.longitudeDelta = 0.09;\n\n          _this3.setState({\n            x: newCoords\n          });\n        },\n        description: this.props.isLoading.Config.languageJson2['My Location'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }\n      })), _react.default.createElement(_reactNative.View, {\n        style: {\n          backgroundColor: _Theme.default.outOfStockBtnColor,\n          alignItems: 'center',\n          justifyContent: 'center',\n          position: 'absolute',\n          zIndex: 12,\n          top: 0,\n          width: width\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: {\n          color: '#fff',\n          fontSize: _Theme.default.mediumSize,\n          fontWeight: '500'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }\n      }, this.props.isLoading.Config.languageJson2['Press and hold the marker to set location'])), _react.default.createElement(_reactNative.TouchableOpacity, {\n        onPress: function onPress() {\n          _this3.props.navigation.state.params.onGoBackFun(_this3.state.x);\n\n          _this3.props.navigation.pop();\n        },\n        style: {\n          flex: 1,\n          bottom: 0,\n          position: 'absolute',\n          width: width,\n          borderColor: '#fff',\n          alignItems: 'center',\n          height: 42,\n          backgroundColor: _Theme.default.otherBtnsColor,\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: {\n          color: _Theme.default.otherBtnsText,\n          fontSize: _Theme.default.mediumSize,\n          fontWeight: '500',\n          position: 'absolute'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }\n      }, this.props.isLoading.Config.languageJson2['Set this location'])));\n    }\n  }]);\n  return RewardPoints;\n}(_react.Component);\n\nRewardPoints.navigationOptions = function (_ref) {\n  var navigation = _ref.navigation;\n  var headerStyle = navigation.getParam('headerTitle');\n  return {\n    headerTitle: headerStyle,\n    headerRight: function headerRight() {\n      return _react.default.createElement(_ShoppingCartIcon.default, {\n        navigation: navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 26\n        }\n      });\n    },\n    cardStyleInterpolator: _reactNavigationStack.CardStyleInterpolators.forHorizontalIOS,\n    headerTitleAlign: 'center',\n    headerTintColor: _Theme.default.headerTintColor,\n    headerStyle: {\n      backgroundColor: _Theme.default.primary\n    },\n    headerTitleStyle: {\n      fontWeight: _reactNative.Platform.OS === 'android' ? 'bold' : 'normal'\n    },\n    headerForceInset: {\n      top: 'never',\n      vertical: 'never'\n    },\n    gestureEnabled: true\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoading: state\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, null)(RewardPoints);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/mysiew/Documents/eCommerce/codecanyon-xPJMYS8x-react-native-delivery-solution-with-advance-website-and-cms/SourceCode/vesend-consumer-app-master/src/screens/MapScreen.js"],"names":["Dimensions","get","width","RewardPoints","props","navigation","setParams","headerTitle","isLoading","Config","languageJson2","Platform","OS","requestLocationPermission","Geolocation","getCurrentPosition","info","newCoords","latitude","parseFloat","JSON","stringify","coords","longitude","latitudeDelta","longitudeDelta","setState","x","SpinnerTemp","error","refs","toast","show","message","enableHighAccuracy","timeout","PermissionsAndroid","request","PERMISSIONS","ACCESS_FINE_LOCATION","ACCESS_COARSE_LOCATION","title","themeStyle","buttonNegative","buttonPositive","granted","RESULTS","GRANTED","state","flex","backgroundColor","color","textColor","fontSize","marginBottom","marginTop","Address","e","nativeEvent","coordinate","outOfStockBtnColor","alignItems","justifyContent","position","zIndex","top","mediumSize","fontWeight","params","onGoBackFun","pop","bottom","borderColor","height","otherBtnsColor","otherBtnsText","Component","navigationOptions","headerStyle","getParam","headerRight","cardStyleInterpolator","CardStyleInterpolators","forHorizontalIOS","headerTitleAlign","headerTintColor","primary","headerTitleStyle","headerForceInset","vertical","gestureEnabled","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Text,\n  View,\n  Dimensions,\n  PermissionsAndroid,\n  Platform,\n  TouchableOpacity\n} from 'react-native'\nimport { connect } from 'react-redux'\nimport { CardStyleInterpolators } from 'react-navigation-stack'\nimport themeStyle from '../common/Theme.style'\nimport MapView, { Marker } from 'react-native-maps'\nimport Geolocation from '@react-native-community/geolocation'\nimport Toast from 'react-native-easy-toast'\nimport Spinner from 'react-native-loading-spinner-overlay'\nimport ShoppingCartIcon from '../common/ShoppingCartIcon'\nconst { width } = Dimensions.get('window')\nclass RewardPoints extends Component {\n  static navigationOptions = ({ navigation }) => {\n    const headerStyle = navigation.getParam('headerTitle')\n    return {\n      headerTitle: headerStyle,\n      headerRight: () => <ShoppingCartIcon navigation={navigation} />,\n      cardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS,\n      headerTitleAlign: 'center',\n      headerTintColor: themeStyle.headerTintColor,\n      headerStyle: {\n        backgroundColor: themeStyle.primary\n      },\n      headerTitleStyle: {\n        fontWeight: Platform.OS === 'android' ? 'bold' : 'normal'\n      },\n      headerForceInset: { top: 'never', vertical: 'never' },\n      gestureEnabled: true\n    }\n  }\n\n  async componentDidMount () {\n    this.props.navigation.setParams({\n      headerTitle: this.props.isLoading.Config.languageJson2['Map Screen']\n    })\n    if (Platform.OS === 'android') {\n      await this.requestLocationPermission()\n    } else {\n      Geolocation.getCurrentPosition(\n        info => {\n          const newCoords = {}\n          newCoords.latitude = parseFloat(JSON.stringify(info.coords.latitude))\n          newCoords.longitude = parseFloat(\n            JSON.stringify(info.coords.longitude)\n          )\n          newCoords.latitudeDelta = 0.09\n          newCoords.longitudeDelta = 0.09\n          this.setState({\n            x: newCoords,\n            SpinnerTemp: false\n          })\n        },\n\n        error => {\n          this.refs.toast.show(error.message + this.props.isLoading.Config.languageJson2[\n            'Press and hold the marker to set location'\n          ])\n          this.setState(\n            {\n              SpinnerTemp: false\n            }\n          )\n        },\n        {\n          enableHighAccuracy: false,\n          timeout: 20000\n        }\n      )\n    }\n  }\n\n  requestLocationPermission = async () => {\n    try {\n      const granted = await PermissionsAndroid.request(\n        PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION,\n        PermissionsAndroid.PERMISSIONS.ACCESS_COARSE_LOCATION,\n        {\n          title: themeStyle.title,\n          message: themeStyle.title + 'App access to your location ',\n          buttonNegative: 'Cancel',\n          buttonPositive: 'OK'\n        }\n      )\n      if (granted === PermissionsAndroid.RESULTS.GRANTED) {\n        Geolocation.getCurrentPosition(\n          info => {\n            const newCoords = {}\n            newCoords.latitude = parseFloat(\n              JSON.stringify(info.coords.latitude)\n            )\n            newCoords.longitude = parseFloat(\n              JSON.stringify(info.coords.longitude)\n            )\n            newCoords.latitudeDelta = 0.09\n            newCoords.longitudeDelta = 0.09\n            this.setState({\n              x: newCoords,\n              SpinnerTemp: false\n            })\n          },\n          error => {\n            this.refs.toast.show(error.message + this.props.isLoading.Config.languageJson2[\n              'Press and hold the marker to set location'\n            ])\n            this.setState(\n              {\n                SpinnerTemp: false\n              }\n            )\n          },\n          {\n            enableHighAccuracy: false,\n            timeout: 20000\n          }\n        )\n      } else {\n        this.refs.toast.show(this.props.isLoading.Config.languageJson2[\n          'Press and hold the marker to set location'\n        ])\n        this.setState(\n          {\n            SpinnerTemp: false\n          }\n        )\n      }\n    } catch (err) {\n      this.refs.toast.show(this.props.isLoading.Config.languageJson2[\n        'Press and hold the marker to set location'\n      ])\n      this.setState(\n        {\n          SpinnerTemp: false\n        }\n      )\n    }\n  }\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      x: {\n        latitude: 32.100847,\n        longitude: 72.688091,\n        latitudeDelta: 0.009,\n        longitudeDelta: 0.009\n      },\n      SpinnerTemp: true\n    }\n  }\n\n  render () {\n    return (\n      <View style={{ flex: 1 }}>\n        <Spinner visible={this.state.SpinnerTemp} />\n        <Toast\n          ref='toast'\n          style={{ backgroundColor: '#c1c1c1' }}\n          position='bottom'\n          positionValue={200}\n          fadeOutDuration={7000}\n          textStyle={{ color: themeStyle.textColor, fontSize: 15 }}\n        />\n        <MapView\n          showsUserLocation={true}\n          style={{ flex: 1, marginBottom: 40, marginTop: 10 }}\n          showsMyLocationButton={true}\n          initialRegion={this.state.x}\n          region={this.state.x}>\n          <Marker\n            draggable\n            coordinate={this.state.x}\n            title={this.props.isLoading.Config.languageJson2.Address}\n            onDragEnd={e => {\n              const newCoords = {}\n              newCoords.latitude = e.nativeEvent.coordinate.latitude\n              newCoords.longitude = e.nativeEvent.coordinate.longitude\n              newCoords.latitudeDelta = 0.09\n              newCoords.longitudeDelta = 0.09\n              this.setState({ x: newCoords })\n            }}\n            description={\n              this.props.isLoading.Config.languageJson2['My Location']\n            }\n          />\n        </MapView>\n        <View\n          style={{\n            backgroundColor: themeStyle.outOfStockBtnColor,\n            alignItems: 'center',\n            justifyContent: 'center',\n            position: 'absolute',\n            zIndex: 12,\n            top: 0,\n            width\n          }}>\n          <Text\n            style={{\n              color: '#fff',\n              fontSize: themeStyle.mediumSize,\n              fontWeight: '500'\n            }}>\n            {\n              this.props.isLoading.Config.languageJson2[\n                'Press and hold the marker to set location'\n              ]\n            }\n          </Text>\n        </View>\n\n        <TouchableOpacity\n          onPress={() => {\n            this.props.navigation.state.params.onGoBackFun(this.state.x)\n            this.props.navigation.pop()\n          }}\n          style={{\n            flex: 1,\n            bottom: 0,\n            position: 'absolute',\n            width: width,\n            borderColor: '#fff',\n            alignItems: 'center',\n            height: 42,\n            backgroundColor: themeStyle.otherBtnsColor,\n            justifyContent: 'center'\n          }}>\n          <Text\n            style={{\n              color: themeStyle.otherBtnsText,\n              fontSize: themeStyle.mediumSize,\n              fontWeight: '500',\n              position: 'absolute'\n            }}>\n            {this.props.isLoading.Config.languageJson2['Set this location']}\n          </Text>\n        </TouchableOpacity>\n      </View>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  isLoading: state\n})\n\nexport default connect(mapStateToProps, null)(RewardPoints)\n"]},"metadata":{},"sourceType":"script"}