{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nrequire(\"react-native-gesture-handler\");\n\nvar _nativeBase = require(\"native-base\");\n\nvar _reactNative = require(\"react-native\");\n\nvar _netinfo = _interopRequireDefault(require(\"@react-native-community/netinfo\"));\n\nvar _reactNativeRestart = _interopRequireDefault(require(\"react-native-restart\"));\n\nvar _RnImagePlaceH = _interopRequireDefault(require(\"./src/common/RnImagePlaceH\"));\n\nvar _store = _interopRequireDefault(require(\"./src/redux/store\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _App = _interopRequireDefault(require(\"./App\"));\n\nvar _reactNativeOffline = require(\"react-native-offline\");\n\nvar _Theme = _interopRequireDefault(require(\"./src/common/Theme.style\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\mysiew\\\\Documents\\\\eCommerce\\\\codecanyon-xPJMYS8x-react-native-delivery-solution-with-advance-website-and-cms\\\\SourceCode\\\\vesend-consumer-app-master\\\\AppIndex.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar AppIndex = function (_Component) {\n  (0, _inherits2.default)(AppIndex, _Component);\n\n  var _super = _createSuper(AppIndex);\n\n  function AppIndex() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, AppIndex);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.CheckConnectivity = function () {\n      if (_reactNative.Platform.OS === 'android') {\n        _netinfo.default.fetch().then(function (state) {\n          if (state.isConnected) {} else {\n            _reactNative.Alert.alert('Please connect to the internet');\n          }\n        });\n      } else {\n        _netinfo.default.addEventListener('connectionChange', _this.handleFirstConnectivityChange);\n      }\n    };\n\n    _this.handleFirstConnectivityChange = function (state) {\n      _netinfo.default.removeEventListener('connectionChange', _this.handleFirstConnectivityChange);\n\n      if (state.isConnected === false) {\n        _reactNative.Alert.alert('Please connect to the internet');\n      } else {}\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(AppIndex, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.CheckConnectivity();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(_reactRedux.Provider, {\n        store: _store.default,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNativeOffline.NetworkProvider, {\n        children: _react.default.Node,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNativeOffline.NetworkConsumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }, function (_ref) {\n        var isConnected = _ref.isConnected;\n        return isConnected ? _react.default.createElement(_nativeBase.Root, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }\n        }, _react.default.createElement(_App.default, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 19\n          }\n        })) : _react.default.createElement(_reactNative.View, {\n          style: {\n            flex: 1,\n            backgroundColor: _Theme.default.backgroundColor\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }\n        }, _reactNative.Platform.OS === 'ios' ? _react.default.createElement(_reactNative.View, {\n          style: {\n            height: 36,\n            backgroundColor: '#51688F'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }\n        }) : null, _react.default.createElement(_reactNative.View, {\n          style: {\n            flex: 1,\n            backgroundColor: _Theme.default.backgroundColor,\n            justifyContent: 'center',\n            alignItems: 'center',\n            paddingBottom: 170\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }\n        }, _react.default.createElement(_RnImagePlaceH.default, {\n          key: 'key',\n          style: {\n            width: 200,\n            height: 200\n          },\n          loadingStyle: {\n            size: 'large',\n            color: _Theme.default.primary\n          },\n          placeholderSource: require('./src/images/wifi.png'),\n          placeholderStyle: {\n            width: 200,\n            height: 300\n          },\n          source: require('./src/images/wifi.png'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }\n        }), _react.default.createElement(_reactNative.Text, {\n          style: {\n            fontSize: 22\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }\n        }, \"No internet \", '\\n', \"Try:\", '\\n', \"Reconnecting to Wi-Fi\"), _react.default.createElement(_reactNative.TouchableOpacity, {\n          onPress: function onPress() {\n            return _reactNativeRestart.default.Restart();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }\n        }, _react.default.createElement(_reactNative.View, {\n          style: {\n            marginTop: 18,\n            borderColor: '#51688F',\n            alignItems: 'center',\n            height: 38,\n            width: 90,\n            backgroundColor: '#51688F',\n            justifyContent: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 23\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: {\n            textAlign: 'center',\n            color: '#fff',\n            fontSize: 15\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }\n        }, \"Try Again\")))));\n      })));\n    }\n  }]);\n  return AppIndex;\n}(_react.Component);\n\nexports.default = AppIndex;","map":{"version":3,"sources":["C:/Users/mysiew/Documents/eCommerce/codecanyon-xPJMYS8x-react-native-delivery-solution-with-advance-website-and-cms/SourceCode/vesend-consumer-app-master/AppIndex.js"],"names":["AppIndex","CheckConnectivity","Platform","OS","NetInfo","fetch","then","state","isConnected","Alert","alert","addEventListener","handleFirstConnectivityChange","removeEventListener","store","React","Node","flex","backgroundColor","ThemeStyle","height","justifyContent","alignItems","paddingBottom","width","size","color","primary","require","fontSize","RNRestart","Restart","marginTop","borderColor","textAlign","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport 'react-native-gesture-handler'\nimport { Root } from 'native-base'\nimport { Platform, View, Text, TouchableOpacity, Alert } from 'react-native'\nimport NetInfo from '@react-native-community/netinfo'\nimport RNRestart from 'react-native-restart'\nimport ImageLoad from './src/common/RnImagePlaceH'\nimport store from './src/redux/store'\nimport { Provider } from 'react-redux'\nimport Appp from './App'\nimport { NetworkProvider, NetworkConsumer } from 'react-native-offline'\nimport ThemeStyle from './src/common/Theme.style'\nexport default class AppIndex extends Component {\n  CheckConnectivity = () => {\n    if (Platform.OS === 'android') {\n      NetInfo.fetch().then(state => {\n        if (state.isConnected) {\n        } else {\n          Alert.alert('Please connect to the internet')\n        }\n      })\n    } else {\n      // For iOS devices\n      NetInfo.addEventListener(\n        'connectionChange',\n        this.handleFirstConnectivityChange\n      )\n    }\n  };\n\n  handleFirstConnectivityChange = state => {\n    NetInfo.removeEventListener(\n      'connectionChange',\n      this.handleFirstConnectivityChange\n    )\n\n    if (state.isConnected === false) {\n      Alert.alert('Please connect to the internet')\n    } else {\n    }\n  };\n\n  componentDidMount () {\n    this.CheckConnectivity()\n  }\n\n  render () {\n    return (\n      <Provider store={store}>\n        <NetworkProvider children={React.Node}>\n          <NetworkConsumer>\n            {({ isConnected }) =>\n              isConnected ? (\n                <Root>\n                  <Appp />\n                </Root>\n              ) : (\n                <View style={{ flex: 1, backgroundColor: ThemeStyle.backgroundColor }}>\n                  {Platform.OS === 'ios' ? (\n                    <View style={{ height: 36, backgroundColor: '#51688F' }} />\n                  ) : null}\n\n                  <View\n                    style={{\n                      flex: 1,\n                      backgroundColor: ThemeStyle.backgroundColor,\n                      justifyContent: 'center',\n                      alignItems: 'center',\n                      paddingBottom: 170\n                    }}\n                  >\n                    <ImageLoad\n                      key={'key'}\n                      style={{ width: 200, height: 200 }}\n                      loadingStyle={{ size: 'large', color: ThemeStyle.primary }}\n                      placeholderSource={require('./src/images/wifi.png')}\n                      placeholderStyle={{ width: 200, height: 300 }}\n                      source={require('./src/images/wifi.png')}\n                    />\n                    <Text style={{ fontSize: 22 }}>\n                        No internet {'\\n'}\n                        Try:{'\\n'}\n                        Reconnecting to Wi-Fi\n                    </Text>\n                    <TouchableOpacity\n                      onPress={() =>\n                        RNRestart.Restart()\n                      }\n                    >\n                      <View\n                        style={{\n                          marginTop: 18,\n                          borderColor: '#51688F',\n                          alignItems: 'center',\n                          height: 38,\n                          width: 90,\n                          backgroundColor: '#51688F',\n                          justifyContent: 'center'\n                        }}\n                      >\n                        <Text\n                          style={{\n                            textAlign: 'center',\n                            color: '#fff',\n                            fontSize: 15\n                          }}\n                        >\n                            Try Again\n                        </Text>\n                      </View>\n                    </TouchableOpacity>\n                  </View>\n                </View>\n              )\n            }\n          </NetworkConsumer>\n        </NetworkProvider>\n      </Provider>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"script"}