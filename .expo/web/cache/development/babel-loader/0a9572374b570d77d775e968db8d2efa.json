{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNavigationStack = require(\"react-navigation-stack\");\n\nvar _WooComFetch = require(\"../common/WooComFetch\");\n\nvar _reactNativeResponsiveScreen = require(\"react-native-responsive-screen\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _reactNativeLoadingSpinnerOverlay = _interopRequireDefault(require(\"react-native-loading-spinner-overlay\"));\n\nvar _Theme = _interopRequireDefault(require(\"../common/Theme.style\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\mysiew\\\\Documents\\\\eCommerce\\\\codecanyon-xPJMYS8x-react-native-delivery-solution-with-advance-website-and-cms\\\\SourceCode\\\\vesend-consumer-app-master\\\\src\\\\screens\\\\ForgotPasswordScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar ForgotPassword = function (_PureComponent) {\n  (0, _inherits2.default)(ForgotPassword, _PureComponent);\n\n  var _super = _createSuper(ForgotPassword);\n\n  (0, _createClass2.default)(ForgotPassword, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.navigation.setParams({\n        headerTitle: this.props.isLoading.Config.languageJson2['Forgot Password']\n      });\n    }\n  }]);\n\n  function ForgotPassword(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, ForgotPassword);\n    _this = _super.call(this, props);\n\n    _this.forgetPassword = function _callee(t) {\n      var formData, data;\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              t.setState({\n                SpinnerTemp: true\n              });\n              formData = new FormData();\n              formData.append('email', _this.state.email);\n              _context.next = 5;\n              return _regenerator.default.awrap((0, _WooComFetch.postHttp)((0, _WooComFetch.getUrl)() + '/api/' + 'processforgotpassword', formData));\n\n            case 5:\n              data = _context.sent;\n              t.setState({\n                errorMessage: data.message,\n                SpinnerTemp: false,\n                success: data.success\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      email: '',\n      errorMessage: '',\n      SpinnerTemp: false,\n      success: 0\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(ForgotPassword, [{\n    key: \"EmailNumberCheck\",\n    value: function EmailNumberCheck() {\n      var email = this.state.email;\n      var reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n      return email.length > 0 && reg.test(this.state.email) === true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var isEnabled = this.EmailNumberCheck();\n      return _react.default.createElement(_reactNative.ScrollView, {\n        style: {\n          backgroundColor: _Theme.default.backgroundColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: {\n          flex: 1,\n          backgroundColor: _Theme.default.backgroundColor,\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNativeLoadingSpinnerOverlay.default, {\n        visible: this.state.SpinnerTemp,\n        textStyle: {\n          backgroundColor: _Theme.default.loadingIndicatorColor,\n          color: _Theme.default.loadingIndicatorColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }\n      }), _react.default.createElement(_reactNative.View, {\n        style: {\n          opacity: 0.2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        key: 1,\n        style: {\n          marginTop: 50,\n          width: 150,\n          height: 150,\n          tintColor: _Theme.default.textColor\n        },\n        source: require('../images/icons_stripe.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      })), _react.default.createElement(_reactNative.View, {\n        style: {\n          flex: 1,\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.TextInput, {\n        style: {\n          marginTop: 20,\n          height: 38,\n          width: (0, _reactNativeResponsiveScreen.widthPercentageToDP)('90%'),\n          borderColor: this.EmailNumberCheck() ? '#c1c1c1' : _Theme.default.removeBtnColor,\n          borderBottomWidth: 1,\n          fontSize: _Theme.default.mediumSize + 2,\n          textAlign: _reactNative.I18nManager.isRTL ? 'right' : 'left',\n          paddingLeft: 6,\n          paddingRight: 6,\n          color: _Theme.default.textColor\n        },\n        placeholderTextColor: _Theme.default.textColor,\n        selectionColor: \"#51688F\",\n        placeholder: this.props.isLoading.Config.languageJson2.Email,\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email,\n            errorMessage: ''\n          });\n        },\n        value: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }\n      }), !this.EmailNumberCheck() ? _react.default.createElement(_reactNative.Text, {\n        style: {\n          marginTop: 5,\n          color: 'red',\n          fontSize: _Theme.default.mediumSize,\n          alignSelf: 'flex-start'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }\n      }, this.props.isLoading.Config.languageJson2['The email address is not valid']) : null, this.state.errorMessage ? _react.default.createElement(_reactNative.Text, {\n        style: {\n          marginTop: 15,\n          color: this.state.success == 1 ? 'green' : 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }\n      }, this.state.errorMessage) : null, _react.default.createElement(_reactNative.TouchableOpacity, {\n        disabled: !isEnabled,\n        onPress: function onPress() {\n          return _this2.forgetPassword(_this2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: {\n          marginTop: 15,\n          alignItems: 'center',\n          height: 38,\n          width: (0, _reactNativeResponsiveScreen.widthPercentageToDP)('90%'),\n          backgroundColor: _Theme.default.otherBtnsColor,\n          justifyContent: 'center',\n          opacity: !isEnabled ? 0.4 : 0.9\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: {\n          textAlign: 'center',\n          color: _Theme.default.otherBtnsText,\n          fontSize: 13\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }\n      }, this.props.isLoading.Config.languageJson2.Send))))));\n    }\n  }]);\n  return ForgotPassword;\n}(_react.PureComponent);\n\nForgotPassword.navigationOptions = function (_ref) {\n  var navigation = _ref.navigation;\n  var headerStyle = navigation.getParam('headerTitle');\n  return {\n    headerTitle: headerStyle,\n    headerRight: function headerRight() {\n      return null;\n    },\n    gestureEnabled: false,\n    drawerLockMode: 'locked-closed',\n    headerTitleAlign: 'center',\n    headerTintColor: _Theme.default.headerTintColor,\n    headerStyle: {\n      backgroundColor: _Theme.default.primary\n    },\n    headerTitleStyle: {\n      fontWeight: _reactNative.Platform.OS === 'android' ? 'bold' : 'normal'\n    },\n    headerForceInset: {\n      top: 'never',\n      vertical: 'never'\n    },\n    cardStyleInterpolator: _reactNavigationStack.CardStyleInterpolators.forHorizontalIOS\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoading: state\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, null)(ForgotPassword);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/mysiew/Documents/eCommerce/codecanyon-xPJMYS8x-react-native-delivery-solution-with-advance-website-and-cms/SourceCode/vesend-consumer-app-master/src/screens/ForgotPasswordScreen.js"],"names":["ForgotPassword","props","navigation","setParams","headerTitle","isLoading","Config","languageJson2","forgetPassword","t","setState","SpinnerTemp","formData","FormData","append","state","email","data","errorMessage","message","success","reg","length","test","isEnabled","EmailNumberCheck","backgroundColor","themeStyle","flex","justifyContent","alignItems","loadingIndicatorColor","color","opacity","marginTop","width","height","tintColor","textColor","require","flexDirection","borderColor","removeBtnColor","borderBottomWidth","fontSize","mediumSize","textAlign","I18nManager","isRTL","paddingLeft","paddingRight","Email","alignSelf","otherBtnsColor","otherBtnsText","Send","PureComponent","navigationOptions","headerStyle","getParam","headerRight","gestureEnabled","drawerLockMode","headerTitleAlign","headerTintColor","primary","headerTitleStyle","fontWeight","Platform","OS","headerForceInset","top","vertical","cardStyleInterpolator","CardStyleInterpolators","forHorizontalIOS","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport {\n  Text,\n  View,\n  TextInput,\n  TouchableOpacity,\n  Platform,\n  I18nManager,\n  Image,\n  ScrollView\n} from 'react-native'\nimport { CardStyleInterpolators } from 'react-navigation-stack'\nimport { getUrl, postHttp } from '../common/WooComFetch'\nimport { widthPercentageToDP as wp } from 'react-native-responsive-screen'\nimport { connect } from 'react-redux'\nimport Spinner from 'react-native-loading-spinner-overlay'\nimport themeStyle from '../common/Theme.style'\nclass ForgotPassword extends PureComponent {\n  /// /////////////////////////////////////////////////////////\n  static navigationOptions = ({ navigation }) => {\n    const headerStyle = navigation.getParam('headerTitle')\n    return {\n      headerTitle: headerStyle,\n      headerRight: () => null,\n      gestureEnabled: false,\n      drawerLockMode: 'locked-closed',\n      headerTitleAlign: 'center',\n      headerTintColor: themeStyle.headerTintColor,\n      headerStyle: {\n        backgroundColor: themeStyle.primary\n      },\n      headerTitleStyle: {\n        fontWeight: Platform.OS === 'android' ? 'bold' : 'normal'\n      },\n      headerForceInset: { top: 'never', vertical: 'never' },\n      cardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS\n    }\n  }\n\n  /// /////////////////////////////////////////////////////////\n  componentDidMount () {\n    this.props.navigation.setParams({\n      headerTitle: this.props.isLoading.Config.languageJson2['Forgot Password']\n    })\n  }\n\n  /// //////////////////////////////////////////////////////////\n  constructor (props) {\n    super(props)\n    this.state = {\n      email: '',\n      errorMessage: '',\n      SpinnerTemp: false,\n      success: 0\n    }\n  }\n\n  /// ///////////////////////////////////////\n  forgetPassword = async t => {\n    t.setState({ SpinnerTemp: true })\n    const formData = new FormData()\n    formData.append('email', this.state.email)\n\n    const data = await postHttp(\n      getUrl() + '/api/' + 'processforgotpassword',\n      formData\n    )\n\n    t.setState({\n      errorMessage: data.message,\n      SpinnerTemp: false,\n      success: data.success\n    })\n  }\n\n  EmailNumberCheck () {\n    const { email } = this.state\n    const reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\n    return (\n      (email.length > 0) && reg.test(this.state.email) === true\n    )\n  }\n\n  render () {\n    const isEnabled = this.EmailNumberCheck()\n    return (\n      <ScrollView style={{ backgroundColor: themeStyle.backgroundColor }}>\n        <View\n          style={{\n            flex: 1,\n            backgroundColor: themeStyle.backgroundColor,\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          }}>\n          <Spinner\n            visible={this.state.SpinnerTemp}\n            textStyle={{\n              backgroundColor: themeStyle.loadingIndicatorColor,\n              color: themeStyle.loadingIndicatorColor\n            }}\n          />\n          <View style={{ opacity: 0.2 }}>\n            <Image\n              key={1}\n              style={{\n                marginTop: 50,\n                width: 150,\n                height: 150,\n                tintColor: themeStyle.textColor\n              }}\n              source={require('../images/icons_stripe.png')}\n            />\n          </View>\n\n          <View\n            style={{\n              flex: 1,\n              flexDirection: 'column',\n              justifyContent: 'center',\n              alignItems: 'center'\n            }}>\n            <TextInput\n              style={{\n                marginTop: 20,\n                height: 38,\n                width: wp('90%'),\n                borderColor: this.EmailNumberCheck() ? '#c1c1c1' : themeStyle.removeBtnColor,\n                borderBottomWidth: 1,\n                fontSize: themeStyle.mediumSize + 2,\n                textAlign: I18nManager.isRTL ? 'right' : 'left',\n                paddingLeft: 6,\n                paddingRight: 6,\n                color: themeStyle.textColor\n              }}\n              placeholderTextColor={themeStyle.textColor}\n              selectionColor='#51688F'\n              placeholder={this.props.isLoading.Config.languageJson2.Email}\n              onChangeText={email => this.setState({ email, errorMessage: '' })}\n              value={this.state.email}\n            />\n            {!this.EmailNumberCheck() ? (\n              <Text\n                style={{\n                  marginTop: 5,\n                  color: 'red',\n                  fontSize: themeStyle.mediumSize,\n                  alignSelf: 'flex-start'\n                }}>\n                {this.props.isLoading.Config.languageJson2['The email address is not valid']}\n              </Text>\n            ) : null}\n            {this.state.errorMessage ? (\n              <Text\n                style={{\n                  marginTop: 15,\n                  color: this.state.success == 1 ? 'green' : 'red'\n                }}>\n                {this.state.errorMessage}\n              </Text>\n            ) : null}\n            <TouchableOpacity\n              disabled={!isEnabled}\n              onPress={() => this.forgetPassword(this)}>\n              <View\n                style={{\n                  marginTop: 15,\n                  alignItems: 'center',\n                  height: 38,\n                  width: wp('90%'),\n                  backgroundColor: themeStyle.otherBtnsColor,\n                  justifyContent: 'center',\n                  opacity: !isEnabled ? 0.4 : 0.9\n                }}>\n                <Text\n                  style={{ textAlign: 'center', color: themeStyle.otherBtnsText, fontSize: 13 }}>\n                  {this.props.isLoading.Config.languageJson2.Send}\n                </Text>\n              </View>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </ScrollView>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoading: state\n})\n\nexport default connect(mapStateToProps, null)(ForgotPassword)\n"]},"metadata":{},"sourceType":"script"}