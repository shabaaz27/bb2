{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _reactNavigationStack = require(\"react-navigation-stack\");\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeRenderHtml = _interopRequireDefault(require(\"react-native-render-html\"));\n\nvar _Theme = _interopRequireDefault(require(\"../common/Theme.style\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\mysiew\\\\Documents\\\\eCommerce\\\\codecanyon-xPJMYS8x-react-native-delivery-solution-with-advance-website-and-cms\\\\SourceCode\\\\vesend-consumer-app-master\\\\src\\\\screens\\\\RefundPolicy.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar RefundPolicy = function (_PureComponent) {\n  (0, _inherits2.default)(RefundPolicy, _PureComponent);\n\n  var _super = _createSuper(RefundPolicy);\n\n  function RefundPolicy() {\n    (0, _classCallCheck2.default)(this, RefundPolicy);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(RefundPolicy, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.navigation.setParams({\n        headerTitle: this.props.isLoading.Config.languageJson2['Refund Policy']\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(_reactNative.View, {\n        style: {\n          padding: 10,\n          backgroundColor: _Theme.default.backgroundColor,\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }, this.props.isLoading.Config.refundPolicy === '' || this.props.isLoading.Config.refundPolicy === null || this.props.isLoading.Config.refundPolicy === undefined ? _react.default.createElement(_reactNative.View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center',\n          alignSelf: 'center',\n          alignContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center',\n          marginBottom: 40,\n          alignSelf: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: {\n          fontSize: _Theme.default.largeSize + 2,\n          color: _Theme.default.textColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }\n      }, this.props.isLoading.Config.languageJson2['No Data Found']))) : _react.default.createElement(_reactNativeRenderHtml.default, {\n        onLinkPress: function onLinkPress(event, href) {\n          _reactNative.Linking.openURL(href);\n        },\n        html: this.props.isLoading.Config.refundPolicy,\n        baseFontStyle: {\n          color: _Theme.default.textColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }\n      })));\n    }\n  }]);\n  return RefundPolicy;\n}(_react.PureComponent);\n\nRefundPolicy.navigationOptions = function (_ref) {\n  var navigation = _ref.navigation;\n  var headerStyle = navigation.getParam('headerTitle');\n  return {\n    headerTitle: headerStyle,\n    cardStyleInterpolator: _reactNavigationStack.CardStyleInterpolators.forHorizontalIOS,\n    headerRight: function headerRight() {\n      return null;\n    },\n    drawerLockMode: 'locked-closed',\n    headerTitleAlign: 'center',\n    headerTintColor: _Theme.default.headerTintColor,\n    headerStyle: {\n      backgroundColor: _Theme.default.primary\n    },\n    headerTitleStyle: {\n      fontWeight: _reactNative.Platform.OS === 'android' ? 'bold' : 'normal'\n    },\n    headerForceInset: {\n      top: 'never',\n      vertical: 'never'\n    },\n    gestureEnabled: true\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoading: state\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, null)(RefundPolicy);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/mysiew/Documents/eCommerce/codecanyon-xPJMYS8x-react-native-delivery-solution-with-advance-website-and-cms/SourceCode/vesend-consumer-app-master/src/screens/RefundPolicy.js"],"names":["RefundPolicy","props","navigation","setParams","headerTitle","isLoading","Config","languageJson2","padding","backgroundColor","themeStyle","flex","refundPolicy","undefined","justifyContent","alignItems","alignSelf","alignContent","marginBottom","fontSize","largeSize","color","textColor","event","href","Linking","openURL","PureComponent","navigationOptions","headerStyle","getParam","cardStyleInterpolator","CardStyleInterpolators","forHorizontalIOS","headerRight","drawerLockMode","headerTitleAlign","headerTintColor","primary","headerTitleStyle","fontWeight","Platform","OS","headerForceInset","top","vertical","gestureEnabled","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { CardStyleInterpolators } from 'react-navigation-stack'\nimport { View, ScrollView, Linking, Platform, Text } from 'react-native'\nimport HTML from 'react-native-render-html'\nimport themeStyle from '../common/Theme.style'\nclass RefundPolicy extends PureComponent {\n  static navigationOptions = ({ navigation }) => {\n    const headerStyle = navigation.getParam('headerTitle')\n    return {\n      headerTitle: headerStyle,\n      cardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS,\n      headerRight: () => null,\n      drawerLockMode: 'locked-closed',\n      headerTitleAlign: 'center',\n      headerTintColor: themeStyle.headerTintColor,\n      headerStyle: {\n        backgroundColor: themeStyle.primary\n      },\n      headerTitleStyle: {\n        fontWeight: Platform.OS === 'android' ? 'bold' : 'normal'\n      },\n      headerForceInset: { top: 'never', vertical: 'never' },\n      gestureEnabled: true\n    }\n  }\n\n  componentDidMount () {\n    this.props.navigation.setParams({\n      headerTitle: this.props.isLoading.Config.languageJson2['Refund Policy']\n    })\n  }\n\n  render () {\n    return (\n      <View style={{\n        padding: 10,\n        backgroundColor: themeStyle.backgroundColor,\n        flex: 1\n      }}>\n        <ScrollView>\n          { this.props.isLoading.Config.refundPolicy === '' ||\n       this.props.isLoading.Config.refundPolicy === null ||\n       this.props.isLoading.Config.refundPolicy === undefined ? (\n              <View\n                style={{\n                  flex: 1,\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  alignSelf: 'center',\n                  alignContent: 'center'\n                }}>\n                <View\n                  style={{\n                    flex: 1,\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    marginBottom: 40,\n                    alignSelf: 'center'\n                  }}>\n                  <Text style={{ fontSize: themeStyle.largeSize + 2, color: themeStyle.textColor }}>\n                    {this.props.isLoading.Config.languageJson2['No Data Found']}\n                  </Text>\n                </View>\n              </View>\n            )\n            : <HTML\n              onLinkPress={(event, href) => {\n                Linking.openURL(href)\n              }}\n              html={this.props.isLoading.Config.refundPolicy}\n              baseFontStyle={{ color: themeStyle.textColor }}\n            />\n          }\n        </ScrollView>\n      </View>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  isLoading: state\n})\n\nexport default connect(\n  mapStateToProps,\n  null\n)(RefundPolicy)\n"]},"metadata":{},"sourceType":"script"}