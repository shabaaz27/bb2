{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getUniqueId = getUniqueId;\nexports.syncUniqueId = syncUniqueId;\nexports.getInstanceId = getInstanceId;\nexports.getInstanceIdSync = getInstanceIdSync;\nexports.getSerialNumber = getSerialNumber;\nexports.getSerialNumberSync = getSerialNumberSync;\nexports.getAndroidId = getAndroidId;\nexports.getAndroidIdSync = getAndroidIdSync;\nexports.getIpAddress = getIpAddress;\nexports.getIpAddressSync = getIpAddressSync;\nexports.isCameraPresent = isCameraPresent;\nexports.isCameraPresentSync = isCameraPresentSync;\nexports.getMacAddress = getMacAddress;\nexports.getMacAddressSync = getMacAddressSync;\nexports.getDeviceId = getDeviceId;\nexports.getManufacturer = getManufacturer;\nexports.getManufacturerSync = getManufacturerSync;\nexports.getModel = getModel;\nexports.getBrand = getBrand;\nexports.getSystemName = getSystemName;\nexports.getSystemVersion = getSystemVersion;\nexports.getBuildId = getBuildId;\nexports.getBuildIdSync = getBuildIdSync;\nexports.getApiLevel = getApiLevel;\nexports.getApiLevelSync = getApiLevelSync;\nexports.getBundleId = getBundleId;\nexports.getInstallerPackageName = getInstallerPackageName;\nexports.getInstallerPackageNameSync = getInstallerPackageNameSync;\nexports.getApplicationName = getApplicationName;\nexports.getBuildNumber = getBuildNumber;\nexports.getVersion = getVersion;\nexports.getReadableVersion = getReadableVersion;\nexports.getDeviceName = getDeviceName;\nexports.getDeviceNameSync = getDeviceNameSync;\nexports.getUsedMemory = getUsedMemory;\nexports.getUsedMemorySync = getUsedMemorySync;\nexports.getUserAgent = getUserAgent;\nexports.getUserAgentSync = getUserAgentSync;\nexports.getFontScale = getFontScale;\nexports.getFontScaleSync = getFontScaleSync;\nexports.getBootloader = getBootloader;\nexports.getBootloaderSync = getBootloaderSync;\nexports.getDevice = getDevice;\nexports.getDeviceSync = getDeviceSync;\nexports.getDisplay = getDisplay;\nexports.getDisplaySync = getDisplaySync;\nexports.getFingerprint = getFingerprint;\nexports.getFingerprintSync = getFingerprintSync;\nexports.getHardware = getHardware;\nexports.getHardwareSync = getHardwareSync;\nexports.getHost = getHost;\nexports.getHostSync = getHostSync;\nexports.getProduct = getProduct;\nexports.getProductSync = getProductSync;\nexports.getTags = getTags;\nexports.getTagsSync = getTagsSync;\nexports.getType = getType;\nexports.getTypeSync = getTypeSync;\nexports.getBaseOs = getBaseOs;\nexports.getBaseOsSync = getBaseOsSync;\nexports.getPreviewSdkInt = getPreviewSdkInt;\nexports.getPreviewSdkIntSync = getPreviewSdkIntSync;\nexports.getSecurityPatch = getSecurityPatch;\nexports.getSecurityPatchSync = getSecurityPatchSync;\nexports.getCodename = getCodename;\nexports.getCodenameSync = getCodenameSync;\nexports.getIncremental = getIncremental;\nexports.getIncrementalSync = getIncrementalSync;\nexports.isEmulator = isEmulator;\nexports.isEmulatorSync = isEmulatorSync;\nexports.isTablet = isTablet;\nexports.isPinOrFingerprintSet = isPinOrFingerprintSet;\nexports.isPinOrFingerprintSetSync = isPinOrFingerprintSetSync;\nexports.hasNotch = hasNotch;\nexports.getFirstInstallTime = getFirstInstallTime;\nexports.getFirstInstallTimeSync = getFirstInstallTimeSync;\nexports.getInstallReferrer = getInstallReferrer;\nexports.getInstallReferrerSync = getInstallReferrerSync;\nexports.getLastUpdateTime = getLastUpdateTime;\nexports.getLastUpdateTimeSync = getLastUpdateTimeSync;\nexports.getPhoneNumber = getPhoneNumber;\nexports.getPhoneNumberSync = getPhoneNumberSync;\nexports.getCarrier = getCarrier;\nexports.getCarrierSync = getCarrierSync;\nexports.getTotalMemory = getTotalMemory;\nexports.getTotalMemorySync = getTotalMemorySync;\nexports.getMaxMemory = getMaxMemory;\nexports.getMaxMemorySync = getMaxMemorySync;\nexports.getTotalDiskCapacity = getTotalDiskCapacity;\nexports.getTotalDiskCapacitySync = getTotalDiskCapacitySync;\nexports.getFreeDiskStorage = getFreeDiskStorage;\nexports.getFreeDiskStorageSync = getFreeDiskStorageSync;\nexports.getBatteryLevel = getBatteryLevel;\nexports.getBatteryLevelSync = getBatteryLevelSync;\nexports.getPowerState = getPowerState;\nexports.getPowerStateSync = getPowerStateSync;\nexports.isBatteryCharging = isBatteryCharging;\nexports.isBatteryChargingSync = isBatteryChargingSync;\nexports.isLandscape = isLandscape;\nexports.isLandscapeSync = isLandscapeSync;\nexports.isAirplaneMode = isAirplaneMode;\nexports.isAirplaneModeSync = isAirplaneModeSync;\nexports.getDeviceType = getDeviceType;\nexports.getDeviceTypeSync = getDeviceTypeSync;\nexports.supportedAbis = supportedAbis;\nexports.supportedAbisSync = supportedAbisSync;\nexports.supported32BitAbis = supported32BitAbis;\nexports.supported32BitAbisSync = supported32BitAbisSync;\nexports.supported64BitAbis = supported64BitAbis;\nexports.supported64BitAbisSync = supported64BitAbisSync;\nexports.hasSystemFeature = hasSystemFeature;\nexports.hasSystemFeatureSync = hasSystemFeatureSync;\nexports.getSystemAvailableFeatures = getSystemAvailableFeatures;\nexports.getSystemAvailableFeaturesSync = getSystemAvailableFeaturesSync;\nexports.isLocationEnabled = isLocationEnabled;\nexports.isLocationEnabledSync = isLocationEnabledSync;\nexports.isHeadphonesConnected = isHeadphonesConnected;\nexports.isHeadphonesConnectedSync = isHeadphonesConnectedSync;\nexports.getAvailableLocationProviders = getAvailableLocationProviders;\nexports.getAvailableLocationProvidersSync = getAvailableLocationProvidersSync;\nexports.getDeviceToken = getDeviceToken;\nexports.useBatteryLevel = useBatteryLevel;\nexports.useBatteryLevelIsLow = useBatteryLevelIsLow;\nexports.usePowerState = usePowerState;\nexports.useFirstInstallTime = useFirstInstallTime;\nexports.useDeviceName = useDeviceName;\nexports.useHasSystemFeature = useHasSystemFeature;\nexports.useIsEmulator = useIsEmulator;\nObject.defineProperty(exports, \"AsyncHookResult\", {\n  enumerable: true,\n  get: function get() {\n    return _types.AsyncHookResult;\n  }\n});\nObject.defineProperty(exports, \"DeviceType\", {\n  enumerable: true,\n  get: function get() {\n    return _types.DeviceType;\n  }\n});\nObject.defineProperty(exports, \"LocationProviderInfo\", {\n  enumerable: true,\n  get: function get() {\n    return _types.LocationProviderInfo;\n  }\n});\nObject.defineProperty(exports, \"PowerState\", {\n  enumerable: true,\n  get: function get() {\n    return _types.PowerState;\n  }\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _react = require(\"react\");\n\nvar _reactNative = require(\"react-native\");\n\nvar _asyncHookWrappers = require(\"./internal/asyncHookWrappers\");\n\nvar _devicesWithNotch = _interopRequireDefault(require(\"./internal/devicesWithNotch\"));\n\nvar _nativeInterface = _interopRequireDefault(require(\"./internal/nativeInterface\"));\n\nvar _types = require(\"./internal/types\");\n\nvar uniqueId;\n\nfunction getUniqueId() {\n  if (!uniqueId) {\n    if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'windows') {\n      uniqueId = _nativeInterface.default.uniqueId;\n    } else {\n      uniqueId = 'unknown';\n    }\n  }\n\n  return uniqueId;\n}\n\nfunction syncUniqueId() {\n  return _regenerator.default.async(function syncUniqueId$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!(_reactNative.Platform.OS === 'ios')) {\n            _context.next = 6;\n            break;\n          }\n\n          _context.next = 3;\n          return _regenerator.default.awrap(_nativeInterface.default.syncUniqueId());\n\n        case 3:\n          uniqueId = _context.sent;\n          _context.next = 7;\n          break;\n\n        case 6:\n          uniqueId = getUniqueId();\n\n        case 7:\n          return _context.abrupt(\"return\", uniqueId);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar instanceId;\n\nfunction getInstanceId() {\n  return _regenerator.default.async(function getInstanceId$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (instanceId) {\n            _context2.next = 8;\n            break;\n          }\n\n          if (!(_reactNative.Platform.OS === 'android')) {\n            _context2.next = 7;\n            break;\n          }\n\n          _context2.next = 4;\n          return _regenerator.default.awrap(_nativeInterface.default.getInstanceId());\n\n        case 4:\n          instanceId = _context2.sent;\n          _context2.next = 8;\n          break;\n\n        case 7:\n          instanceId = 'unknown';\n\n        case 8:\n          return _context2.abrupt(\"return\", instanceId);\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getInstanceIdSync() {\n  if (!instanceId) {\n    if (_reactNative.Platform.OS === 'android') {\n      instanceId = _nativeInterface.default.getInstanceIdSync();\n    } else {\n      instanceId = 'unknown';\n    }\n  }\n\n  return instanceId;\n}\n\nvar serialNumber;\n\nfunction getSerialNumber() {\n  return _regenerator.default.async(function getSerialNumber$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          if (serialNumber) {\n            _context3.next = 8;\n            break;\n          }\n\n          if (!(_reactNative.Platform.OS === 'android')) {\n            _context3.next = 7;\n            break;\n          }\n\n          _context3.next = 4;\n          return _regenerator.default.awrap(_nativeInterface.default.getSerialNumber());\n\n        case 4:\n          serialNumber = _context3.sent;\n          _context3.next = 8;\n          break;\n\n        case 7:\n          serialNumber = 'unknown';\n\n        case 8:\n          return _context3.abrupt(\"return\", serialNumber);\n\n        case 9:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getSerialNumberSync() {\n  if (!serialNumber) {\n    if (_reactNative.Platform.OS === 'android') {\n      serialNumber = _nativeInterface.default.getSerialNumberSync();\n    } else {\n      serialNumber = 'unknown';\n    }\n  }\n\n  return serialNumber;\n}\n\nvar androidId;\n\nfunction getAndroidId() {\n  return _regenerator.default.async(function getAndroidId$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          if (androidId) {\n            _context4.next = 8;\n            break;\n          }\n\n          if (!(_reactNative.Platform.OS === 'android')) {\n            _context4.next = 7;\n            break;\n          }\n\n          _context4.next = 4;\n          return _regenerator.default.awrap(_nativeInterface.default.getAndroidId());\n\n        case 4:\n          androidId = _context4.sent;\n          _context4.next = 8;\n          break;\n\n        case 7:\n          androidId = 'unknown';\n\n        case 8:\n          return _context4.abrupt(\"return\", androidId);\n\n        case 9:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getAndroidIdSync() {\n  if (!androidId) {\n    if (_reactNative.Platform.OS === 'android') {\n      androidId = _nativeInterface.default.getAndroidIdSync();\n    } else {\n      androidId = 'unknown';\n    }\n  }\n\n  return androidId;\n}\n\nfunction getIpAddress() {\n  return _regenerator.default.async(function getIpAddress$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          if (!(_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'windows')) {\n            _context5.next = 2;\n            break;\n          }\n\n          return _context5.abrupt(\"return\", _nativeInterface.default.getIpAddress());\n\n        case 2:\n          return _context5.abrupt(\"return\", 'unknown');\n\n        case 3:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getIpAddressSync() {\n  if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'windows') {\n    return _nativeInterface.default.getIpAddressSync();\n  }\n\n  return 'unknown';\n}\n\nfunction isCameraPresent() {\n  return _regenerator.default.async(function isCameraPresent$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          if (!(_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'windows' || _reactNative.Platform.OS === 'web')) {\n            _context6.next = 2;\n            break;\n          }\n\n          return _context6.abrupt(\"return\", _nativeInterface.default.isCameraPresent());\n\n        case 2:\n          return _context6.abrupt(\"return\", false);\n\n        case 3:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction isCameraPresentSync() {\n  if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'windows' || _reactNative.Platform.OS === 'web') {\n    return _nativeInterface.default.isCameraPresentSync();\n  }\n\n  return false;\n}\n\nfunction getMacAddress() {\n  return _regenerator.default.async(function getMacAddress$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          if (!(_reactNative.Platform.OS === 'android')) {\n            _context7.next = 4;\n            break;\n          }\n\n          return _context7.abrupt(\"return\", _nativeInterface.default.getMacAddress());\n\n        case 4:\n          if (!(_reactNative.Platform.OS === 'ios')) {\n            _context7.next = 6;\n            break;\n          }\n\n          return _context7.abrupt(\"return\", '02:00:00:00:00:00');\n\n        case 6:\n          return _context7.abrupt(\"return\", 'unknown');\n\n        case 7:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getMacAddressSync() {\n  if (_reactNative.Platform.OS === 'android') {\n    return _nativeInterface.default.getMacAddressSync();\n  } else if (_reactNative.Platform.OS === 'ios') {\n    return '02:00:00:00:00:00';\n  }\n\n  return 'unknown';\n}\n\nvar deviceId;\n\nfunction getDeviceId() {\n  if (!deviceId) {\n    if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'windows') {\n      deviceId = _nativeInterface.default.deviceId;\n    } else {\n      deviceId = 'unknown';\n    }\n  }\n\n  return deviceId;\n}\n\nvar manufacturer;\n\nfunction getManufacturer() {\n  return _regenerator.default.async(function getManufacturer$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          if (manufacturer) {\n            _context8.next = 8;\n            break;\n          }\n\n          if (!(_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'windows')) {\n            _context8.next = 7;\n            break;\n          }\n\n          _context8.next = 4;\n          return _regenerator.default.awrap(_nativeInterface.default.getSystemManufacturer());\n\n        case 4:\n          manufacturer = _context8.sent;\n          _context8.next = 8;\n          break;\n\n        case 7:\n          if (_reactNative.Platform.OS === 'ios') {\n            manufacturer = 'Apple';\n          } else {\n            manufacturer = 'unknown';\n          }\n\n        case 8:\n          return _context8.abrupt(\"return\", manufacturer);\n\n        case 9:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getManufacturerSync() {\n  if (!manufacturer) {\n    if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'windows') {\n      manufacturer = _nativeInterface.default.getSystemManufacturerSync();\n    } else if (_reactNative.Platform.OS === 'ios') {\n      manufacturer = 'Apple';\n    } else {\n      manufacturer = 'unknown';\n    }\n  }\n\n  return manufacturer;\n}\n\nvar model;\n\nfunction getModel() {\n  if (!model) {\n    if (_reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'windows') {\n      model = _nativeInterface.default.model;\n    } else {\n      model = 'unknown';\n    }\n  }\n\n  return model;\n}\n\nvar brand;\n\nfunction getBrand() {\n  if (!brand) {\n    if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'windows') {\n      brand = _nativeInterface.default.brand;\n    } else {\n      brand = 'unknown';\n    }\n  }\n\n  return brand;\n}\n\nvar systemName;\n\nfunction getSystemName() {\n  if (!systemName) {\n    if (_reactNative.Platform.OS === 'ios') {\n      systemName = _nativeInterface.default.systemName;\n    } else if (_reactNative.Platform.OS === 'android') {\n      systemName = 'Android';\n    } else if (_reactNative.Platform.OS === 'windows') {\n      systemName = 'Windows';\n    } else {\n      systemName = 'unknown';\n    }\n  }\n\n  return systemName;\n}\n\nvar systemVersion;\n\nfunction getSystemVersion() {\n  if (!systemVersion) {\n    if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'windows') {\n      systemVersion = _nativeInterface.default.systemVersion;\n    } else {\n      systemVersion = 'unknown';\n    }\n  }\n\n  return systemVersion;\n}\n\nvar buildId;\n\nfunction getBuildId() {\n  return _regenerator.default.async(function getBuildId$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          if (buildId) {\n            _context9.next = 8;\n            break;\n          }\n\n          if (!(_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios')) {\n            _context9.next = 7;\n            break;\n          }\n\n          _context9.next = 4;\n          return _regenerator.default.awrap(_nativeInterface.default.getBuildId());\n\n        case 4:\n          buildId = _context9.sent;\n          _context9.next = 8;\n          break;\n\n        case 7:\n          buildId = 'unknown';\n\n        case 8:\n          return _context9.abrupt(\"return\", buildId);\n\n        case 9:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getBuildIdSync() {\n  if (!buildId) {\n    if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios') {\n      buildId = _nativeInterface.default.getBuildIdSync();\n    } else {\n      buildId = 'unknown';\n    }\n  }\n\n  return buildId;\n}\n\nvar apiLevel;\n\nfunction getApiLevel() {\n  return _regenerator.default.async(function getApiLevel$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          if (apiLevel) {\n            _context10.next = 8;\n            break;\n          }\n\n          if (!(_reactNative.Platform.OS === 'android')) {\n            _context10.next = 7;\n            break;\n          }\n\n          _context10.next = 4;\n          return _regenerator.default.awrap(_nativeInterface.default.getApiLevel());\n\n        case 4:\n          apiLevel = _context10.sent;\n          _context10.next = 8;\n          break;\n\n        case 7:\n          apiLevel = -1;\n\n        case 8:\n          return _context10.abrupt(\"return\", apiLevel);\n\n        case 9:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getApiLevelSync() {\n  if (!apiLevel) {\n    if (_reactNative.Platform.OS === 'android') {\n      apiLevel = _nativeInterface.default.getApiLevelSync();\n    } else {\n      apiLevel = -1;\n    }\n  }\n\n  return apiLevel;\n}\n\nvar bundleId;\n\nfunction getBundleId() {\n  if (!bundleId) {\n    if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'windows') {\n      bundleId = _nativeInterface.default.bundleId;\n    } else {\n      bundleId = 'unknown';\n    }\n  }\n\n  return bundleId;\n}\n\nvar installerPackageName;\n\nfunction getInstallerPackageName() {\n  return _regenerator.default.async(function getInstallerPackageName$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          if (installerPackageName) {\n            _context11.next = 8;\n            break;\n          }\n\n          if (!(_reactNative.Platform.OS === 'android')) {\n            _context11.next = 7;\n            break;\n          }\n\n          _context11.next = 4;\n          return _regenerator.default.awrap(_nativeInterface.default.getInstallerPackageName());\n\n        case 4:\n          installerPackageName = _context11.sent;\n          _context11.next = 8;\n          break;\n\n        case 7:\n          installerPackageName = 'unknown';\n\n        case 8:\n          return _context11.abrupt(\"return\", installerPackageName);\n\n        case 9:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getInstallerPackageNameSync() {\n  if (!installerPackageName) {\n    if (_reactNative.Platform.OS === 'android') {\n      installerPackageName = _nativeInterface.default.getInstallerPackageNameSync();\n    } else {\n      installerPackageName = 'unknown';\n    }\n  }\n\n  return installerPackageName;\n}\n\nvar appName;\n\nfunction getApplicationName() {\n  if (!appName) {\n    if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'windows') {\n      appName = _nativeInterface.default.appName;\n    } else {\n      appName = 'unknown';\n    }\n  }\n\n  return appName;\n}\n\nvar buildNumber;\n\nfunction getBuildNumber() {\n  if (!buildNumber) {\n    if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'windows') {\n      buildNumber = _nativeInterface.default.buildNumber;\n    } else {\n      buildNumber = 'unknown';\n    }\n  }\n\n  return buildNumber;\n}\n\nvar version;\n\nfunction getVersion() {\n  if (!version) {\n    if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'windows') {\n      version = _nativeInterface.default.appVersion;\n    } else {\n      version = 'unknown';\n    }\n  }\n\n  return version;\n}\n\nfunction getReadableVersion() {\n  return getVersion() + '.' + getBuildNumber();\n}\n\nvar deviceName;\n\nfunction getDeviceName() {\n  return _regenerator.default.async(function getDeviceName$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          if (deviceName) {\n            _context12.next = 8;\n            break;\n          }\n\n          if (!(_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'windows')) {\n            _context12.next = 7;\n            break;\n          }\n\n          _context12.next = 4;\n          return _regenerator.default.awrap(_nativeInterface.default.getDeviceName());\n\n        case 4:\n          deviceName = _context12.sent;\n          _context12.next = 8;\n          break;\n\n        case 7:\n          deviceName = 'unknown';\n\n        case 8:\n          return _context12.abrupt(\"return\", deviceName);\n\n        case 9:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getDeviceNameSync() {\n  if (!deviceName) {\n    if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'windows') {\n      deviceName = _nativeInterface.default.getDeviceNameSync();\n    } else {\n      deviceName = 'unknown';\n    }\n  }\n\n  return deviceName;\n}\n\nfunction getUsedMemory() {\n  return _regenerator.default.async(function getUsedMemory$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          if (!(_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'web')) {\n            _context13.next = 2;\n            break;\n          }\n\n          return _context13.abrupt(\"return\", _nativeInterface.default.getUsedMemory());\n\n        case 2:\n          return _context13.abrupt(\"return\", -1);\n\n        case 3:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getUsedMemorySync() {\n  if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'web') {\n    return _nativeInterface.default.getUsedMemorySync();\n  }\n\n  return -1;\n}\n\nvar userAgent;\n\nfunction getUserAgent() {\n  return _regenerator.default.async(function getUserAgent$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          if (userAgent) {\n            _context14.next = 8;\n            break;\n          }\n\n          if (!(_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'web')) {\n            _context14.next = 7;\n            break;\n          }\n\n          _context14.next = 4;\n          return _regenerator.default.awrap(_nativeInterface.default.getUserAgent());\n\n        case 4:\n          userAgent = _context14.sent;\n          _context14.next = 8;\n          break;\n\n        case 7:\n          userAgent = 'unknown';\n\n        case 8:\n          return _context14.abrupt(\"return\", userAgent);\n\n        case 9:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getUserAgentSync() {\n  if (!userAgent) {\n    if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'web') {\n      userAgent = _nativeInterface.default.getUserAgentSync();\n    } else {\n      userAgent = 'unknown';\n    }\n  }\n\n  return userAgent;\n}\n\nfunction getFontScale() {\n  return _regenerator.default.async(function getFontScale$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          if (!(_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios')) {\n            _context15.next = 2;\n            break;\n          }\n\n          return _context15.abrupt(\"return\", _nativeInterface.default.getFontScale());\n\n        case 2:\n          return _context15.abrupt(\"return\", -1);\n\n        case 3:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getFontScaleSync() {\n  if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios') {\n    return _nativeInterface.default.getFontScaleSync();\n  }\n\n  return -1;\n}\n\nvar bootloader;\n\nfunction getBootloader() {\n  return _regenerator.default.async(function getBootloader$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          if (bootloader) {\n            _context16.next = 8;\n            break;\n          }\n\n          if (!(_reactNative.Platform.OS === 'android')) {\n            _context16.next = 7;\n            break;\n          }\n\n          _context16.next = 4;\n          return _regenerator.default.awrap(_nativeInterface.default.getBootloader());\n\n        case 4:\n          bootloader = _context16.sent;\n          _context16.next = 8;\n          break;\n\n        case 7:\n          bootloader = 'unknown';\n\n        case 8:\n          return _context16.abrupt(\"return\", bootloader);\n\n        case 9:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getBootloaderSync() {\n  if (!bootloader) {\n    if (_reactNative.Platform.OS === 'android') {\n      bootloader = _nativeInterface.default.getBootloaderSync();\n    } else {\n      bootloader = 'unknown';\n    }\n  }\n\n  return bootloader;\n}\n\nvar device;\n\nfunction getDevice() {\n  return _regenerator.default.async(function getDevice$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          if (device) {\n            _context17.next = 8;\n            break;\n          }\n\n          if (!(_reactNative.Platform.OS === 'android')) {\n            _context17.next = 7;\n            break;\n          }\n\n          _context17.next = 4;\n          return _regenerator.default.awrap(_nativeInterface.default.getDevice());\n\n        case 4:\n          device = _context17.sent;\n          _context17.next = 8;\n          break;\n\n        case 7:\n          device = 'unknown';\n\n        case 8:\n          return _context17.abrupt(\"return\", device);\n\n        case 9:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getDeviceSync() {\n  if (!device) {\n    if (_reactNative.Platform.OS === 'android') {\n      device = _nativeInterface.default.getDeviceSync();\n    } else {\n      device = 'unknown';\n    }\n  }\n\n  return device;\n}\n\nvar display;\n\nfunction getDisplay() {\n  return _regenerator.default.async(function getDisplay$(_context18) {\n    while (1) {\n      switch (_context18.prev = _context18.next) {\n        case 0:\n          if (display) {\n            _context18.next = 8;\n            break;\n          }\n\n          if (!(_reactNative.Platform.OS === 'android')) {\n            _context18.next = 7;\n            break;\n          }\n\n          _context18.next = 4;\n          return _regenerator.default.awrap(_nativeInterface.default.getDisplay());\n\n        case 4:\n          display = _context18.sent;\n          _context18.next = 8;\n          break;\n\n        case 7:\n          display = 'unknown';\n\n        case 8:\n          return _context18.abrupt(\"return\", display);\n\n        case 9:\n        case \"end\":\n          return _context18.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getDisplaySync() {\n  if (!display) {\n    if (_reactNative.Platform.OS === 'android') {\n      display = _nativeInterface.default.getDisplaySync();\n    } else {\n      display = 'unknown';\n    }\n  }\n\n  return display;\n}\n\nvar fingerprint;\n\nfunction getFingerprint() {\n  return _regenerator.default.async(function getFingerprint$(_context19) {\n    while (1) {\n      switch (_context19.prev = _context19.next) {\n        case 0:\n          if (fingerprint) {\n            _context19.next = 8;\n            break;\n          }\n\n          if (!(_reactNative.Platform.OS === 'android')) {\n            _context19.next = 7;\n            break;\n          }\n\n          _context19.next = 4;\n          return _regenerator.default.awrap(_nativeInterface.default.getFingerprint());\n\n        case 4:\n          fingerprint = _context19.sent;\n          _context19.next = 8;\n          break;\n\n        case 7:\n          fingerprint = 'unknown';\n\n        case 8:\n          return _context19.abrupt(\"return\", fingerprint);\n\n        case 9:\n        case \"end\":\n          return _context19.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getFingerprintSync() {\n  if (!fingerprint) {\n    if (_reactNative.Platform.OS === 'android') {\n      fingerprint = _nativeInterface.default.getFingerprintSync();\n    } else {\n      fingerprint = 'unknown';\n    }\n  }\n\n  return fingerprint;\n}\n\nvar hardware;\n\nfunction getHardware() {\n  return _regenerator.default.async(function getHardware$(_context20) {\n    while (1) {\n      switch (_context20.prev = _context20.next) {\n        case 0:\n          if (hardware) {\n            _context20.next = 8;\n            break;\n          }\n\n          if (!(_reactNative.Platform.OS === 'android')) {\n            _context20.next = 7;\n            break;\n          }\n\n          _context20.next = 4;\n          return _regenerator.default.awrap(_nativeInterface.default.getHardware());\n\n        case 4:\n          hardware = _context20.sent;\n          _context20.next = 8;\n          break;\n\n        case 7:\n          hardware = 'unknown';\n\n        case 8:\n          return _context20.abrupt(\"return\", hardware);\n\n        case 9:\n        case \"end\":\n          return _context20.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getHardwareSync() {\n  if (!hardware) {\n    if (_reactNative.Platform.OS === 'android') {\n      hardware = _nativeInterface.default.getHardwareSync();\n    } else {\n      hardware = 'unknown';\n    }\n  }\n\n  return hardware;\n}\n\nvar host;\n\nfunction getHost() {\n  return _regenerator.default.async(function getHost$(_context21) {\n    while (1) {\n      switch (_context21.prev = _context21.next) {\n        case 0:\n          if (host) {\n            _context21.next = 8;\n            break;\n          }\n\n          if (!(_reactNative.Platform.OS === 'android')) {\n            _context21.next = 7;\n            break;\n          }\n\n          _context21.next = 4;\n          return _regenerator.default.awrap(_nativeInterface.default.getHost());\n\n        case 4:\n          host = _context21.sent;\n          _context21.next = 8;\n          break;\n\n        case 7:\n          host = 'unknown';\n\n        case 8:\n          return _context21.abrupt(\"return\", host);\n\n        case 9:\n        case \"end\":\n          return _context21.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getHostSync() {\n  if (!host) {\n    if (_reactNative.Platform.OS === 'android') {\n      host = _nativeInterface.default.getHostSync();\n    } else {\n      host = 'unknown';\n    }\n  }\n\n  return host;\n}\n\nvar product;\n\nfunction getProduct() {\n  return _regenerator.default.async(function getProduct$(_context22) {\n    while (1) {\n      switch (_context22.prev = _context22.next) {\n        case 0:\n          if (product) {\n            _context22.next = 8;\n            break;\n          }\n\n          if (!(_reactNative.Platform.OS === 'android')) {\n            _context22.next = 7;\n            break;\n          }\n\n          _context22.next = 4;\n          return _regenerator.default.awrap(_nativeInterface.default.getProduct());\n\n        case 4:\n          product = _context22.sent;\n          _context22.next = 8;\n          break;\n\n        case 7:\n          product = 'unknown';\n\n        case 8:\n          return _context22.abrupt(\"return\", product);\n\n        case 9:\n        case \"end\":\n          return _context22.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getProductSync() {\n  if (!product) {\n    if (_reactNative.Platform.OS === 'android') {\n      product = _nativeInterface.default.getProductSync();\n    } else {\n      product = 'unknown';\n    }\n  }\n\n  return product;\n}\n\nvar tags;\n\nfunction getTags() {\n  return _regenerator.default.async(function getTags$(_context23) {\n    while (1) {\n      switch (_context23.prev = _context23.next) {\n        case 0:\n          if (tags) {\n            _context23.next = 8;\n            break;\n          }\n\n          if (!(_reactNative.Platform.OS === 'android')) {\n            _context23.next = 7;\n            break;\n          }\n\n          _context23.next = 4;\n          return _regenerator.default.awrap(_nativeInterface.default.getTags());\n\n        case 4:\n          tags = _context23.sent;\n          _context23.next = 8;\n          break;\n\n        case 7:\n          tags = 'unknown';\n\n        case 8:\n          return _context23.abrupt(\"return\", tags);\n\n        case 9:\n        case \"end\":\n          return _context23.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getTagsSync() {\n  if (!tags) {\n    if (_reactNative.Platform.OS === 'android') {\n      tags = _nativeInterface.default.getTagsSync();\n    } else {\n      tags = 'unknown';\n    }\n  }\n\n  return tags;\n}\n\nvar type;\n\nfunction getType() {\n  return _regenerator.default.async(function getType$(_context24) {\n    while (1) {\n      switch (_context24.prev = _context24.next) {\n        case 0:\n          if (type) {\n            _context24.next = 8;\n            break;\n          }\n\n          if (!(_reactNative.Platform.OS === 'android')) {\n            _context24.next = 7;\n            break;\n          }\n\n          _context24.next = 4;\n          return _regenerator.default.awrap(_nativeInterface.default.getType());\n\n        case 4:\n          type = _context24.sent;\n          _context24.next = 8;\n          break;\n\n        case 7:\n          type = 'unknown';\n\n        case 8:\n          return _context24.abrupt(\"return\", type);\n\n        case 9:\n        case \"end\":\n          return _context24.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getTypeSync() {\n  if (!type) {\n    if (_reactNative.Platform.OS === 'android') {\n      type = _nativeInterface.default.getTypeSync();\n    } else {\n      type = 'unknown';\n    }\n  }\n\n  return type;\n}\n\nvar baseOs;\n\nfunction getBaseOs() {\n  return _regenerator.default.async(function getBaseOs$(_context25) {\n    while (1) {\n      switch (_context25.prev = _context25.next) {\n        case 0:\n          if (baseOs) {\n            _context25.next = 8;\n            break;\n          }\n\n          if (!(_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'web')) {\n            _context25.next = 7;\n            break;\n          }\n\n          _context25.next = 4;\n          return _regenerator.default.awrap(_nativeInterface.default.getBaseOs());\n\n        case 4:\n          baseOs = _context25.sent;\n          _context25.next = 8;\n          break;\n\n        case 7:\n          baseOs = 'unknown';\n\n        case 8:\n          return _context25.abrupt(\"return\", baseOs);\n\n        case 9:\n        case \"end\":\n          return _context25.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getBaseOsSync() {\n  if (!baseOs) {\n    if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'web') {\n      baseOs = _nativeInterface.default.getBaseOsSync();\n    } else {\n      baseOs = 'unknown';\n    }\n  }\n\n  return baseOs;\n}\n\nvar previewSdkInt;\n\nfunction getPreviewSdkInt() {\n  return _regenerator.default.async(function getPreviewSdkInt$(_context26) {\n    while (1) {\n      switch (_context26.prev = _context26.next) {\n        case 0:\n          if (previewSdkInt) {\n            _context26.next = 8;\n            break;\n          }\n\n          if (!(_reactNative.Platform.OS === 'android')) {\n            _context26.next = 7;\n            break;\n          }\n\n          _context26.next = 4;\n          return _regenerator.default.awrap(_nativeInterface.default.getPreviewSdkInt());\n\n        case 4:\n          previewSdkInt = _context26.sent;\n          _context26.next = 8;\n          break;\n\n        case 7:\n          previewSdkInt = -1;\n\n        case 8:\n          return _context26.abrupt(\"return\", previewSdkInt);\n\n        case 9:\n        case \"end\":\n          return _context26.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getPreviewSdkIntSync() {\n  if (!previewSdkInt) {\n    if (_reactNative.Platform.OS === 'android') {\n      previewSdkInt = _nativeInterface.default.getPreviewSdkIntSync();\n    } else {\n      previewSdkInt = -1;\n    }\n  }\n\n  return previewSdkInt;\n}\n\nvar securityPatch;\n\nfunction getSecurityPatch() {\n  return _regenerator.default.async(function getSecurityPatch$(_context27) {\n    while (1) {\n      switch (_context27.prev = _context27.next) {\n        case 0:\n          if (securityPatch) {\n            _context27.next = 8;\n            break;\n          }\n\n          if (!(_reactNative.Platform.OS === 'android')) {\n            _context27.next = 7;\n            break;\n          }\n\n          _context27.next = 4;\n          return _regenerator.default.awrap(_nativeInterface.default.getSecurityPatch());\n\n        case 4:\n          securityPatch = _context27.sent;\n          _context27.next = 8;\n          break;\n\n        case 7:\n          securityPatch = 'unknown';\n\n        case 8:\n          return _context27.abrupt(\"return\", securityPatch);\n\n        case 9:\n        case \"end\":\n          return _context27.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getSecurityPatchSync() {\n  if (!securityPatch) {\n    if (_reactNative.Platform.OS === 'android') {\n      securityPatch = _nativeInterface.default.getSecurityPatchSync();\n    } else {\n      securityPatch = 'unknown';\n    }\n  }\n\n  return securityPatch;\n}\n\nvar codeName;\n\nfunction getCodename() {\n  return _regenerator.default.async(function getCodename$(_context28) {\n    while (1) {\n      switch (_context28.prev = _context28.next) {\n        case 0:\n          if (codeName) {\n            _context28.next = 8;\n            break;\n          }\n\n          if (!(_reactNative.Platform.OS === 'android')) {\n            _context28.next = 7;\n            break;\n          }\n\n          _context28.next = 4;\n          return _regenerator.default.awrap(_nativeInterface.default.getCodename());\n\n        case 4:\n          codeName = _context28.sent;\n          _context28.next = 8;\n          break;\n\n        case 7:\n          codeName = 'unknown';\n\n        case 8:\n          return _context28.abrupt(\"return\", codeName);\n\n        case 9:\n        case \"end\":\n          return _context28.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getCodenameSync() {\n  if (!codeName) {\n    if (_reactNative.Platform.OS === 'android') {\n      codeName = _nativeInterface.default.getCodenameSync();\n    } else {\n      codeName = 'unknown';\n    }\n  }\n\n  return codeName;\n}\n\nvar incremental;\n\nfunction getIncremental() {\n  return _regenerator.default.async(function getIncremental$(_context29) {\n    while (1) {\n      switch (_context29.prev = _context29.next) {\n        case 0:\n          if (incremental) {\n            _context29.next = 8;\n            break;\n          }\n\n          if (!(_reactNative.Platform.OS === 'android')) {\n            _context29.next = 7;\n            break;\n          }\n\n          _context29.next = 4;\n          return _regenerator.default.awrap(_nativeInterface.default.getIncremental());\n\n        case 4:\n          incremental = _context29.sent;\n          _context29.next = 8;\n          break;\n\n        case 7:\n          incremental = 'unknown';\n\n        case 8:\n          return _context29.abrupt(\"return\", incremental);\n\n        case 9:\n        case \"end\":\n          return _context29.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getIncrementalSync() {\n  if (!incremental) {\n    if (_reactNative.Platform.OS === 'android') {\n      incremental = _nativeInterface.default.getIncrementalSync();\n    } else {\n      incremental = 'unknown';\n    }\n  }\n\n  return incremental;\n}\n\nvar emulator;\n\nfunction isEmulator() {\n  return _regenerator.default.async(function isEmulator$(_context30) {\n    while (1) {\n      switch (_context30.prev = _context30.next) {\n        case 0:\n          if (!(emulator === undefined)) {\n            _context30.next = 8;\n            break;\n          }\n\n          if (!(_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'windows')) {\n            _context30.next = 7;\n            break;\n          }\n\n          _context30.next = 4;\n          return _regenerator.default.awrap(_nativeInterface.default.isEmulator());\n\n        case 4:\n          emulator = _context30.sent;\n          _context30.next = 8;\n          break;\n\n        case 7:\n          emulator = false;\n\n        case 8:\n          return _context30.abrupt(\"return\", emulator);\n\n        case 9:\n        case \"end\":\n          return _context30.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction isEmulatorSync() {\n  if (emulator === undefined) {\n    if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'windows') {\n      emulator = _nativeInterface.default.isEmulatorSync();\n    } else {\n      emulator = false;\n    }\n  }\n\n  return emulator;\n}\n\nvar tablet;\n\nfunction isTablet() {\n  if (tablet === undefined) {\n    if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'windows') {\n      tablet = _nativeInterface.default.isTablet;\n    } else {\n      tablet = false;\n    }\n  }\n\n  return tablet;\n}\n\nfunction isPinOrFingerprintSet() {\n  return _regenerator.default.async(function isPinOrFingerprintSet$(_context31) {\n    while (1) {\n      switch (_context31.prev = _context31.next) {\n        case 0:\n          if (!(_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'windows')) {\n            _context31.next = 2;\n            break;\n          }\n\n          return _context31.abrupt(\"return\", _nativeInterface.default.isPinOrFingerprintSet());\n\n        case 2:\n          return _context31.abrupt(\"return\", false);\n\n        case 3:\n        case \"end\":\n          return _context31.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction isPinOrFingerprintSetSync() {\n  if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'windows') {\n    return _nativeInterface.default.isPinOrFingerprintSetSync();\n  }\n\n  return false;\n}\n\nvar notch;\n\nfunction hasNotch() {\n  if (notch === undefined) {\n    var _brand = getBrand();\n\n    var _model = getModel();\n\n    notch = _devicesWithNotch.default.findIndex(function (item) {\n      return item.brand.toLowerCase() === _brand.toLowerCase() && item.model.toLowerCase() === _model.toLowerCase();\n    }) !== -1;\n  }\n\n  return notch;\n}\n\nvar firstInstallTime;\n\nfunction getFirstInstallTime() {\n  return _regenerator.default.async(function getFirstInstallTime$(_context32) {\n    while (1) {\n      switch (_context32.prev = _context32.next) {\n        case 0:\n          if (firstInstallTime) {\n            _context32.next = 8;\n            break;\n          }\n\n          if (!(_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'windows')) {\n            _context32.next = 7;\n            break;\n          }\n\n          _context32.next = 4;\n          return _regenerator.default.awrap(_nativeInterface.default.getFirstInstallTime());\n\n        case 4:\n          firstInstallTime = _context32.sent;\n          _context32.next = 8;\n          break;\n\n        case 7:\n          firstInstallTime = -1;\n\n        case 8:\n          return _context32.abrupt(\"return\", firstInstallTime);\n\n        case 9:\n        case \"end\":\n          return _context32.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getFirstInstallTimeSync() {\n  if (!firstInstallTime) {\n    if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'windows') {\n      firstInstallTime = _nativeInterface.default.getFirstInstallTimeSync();\n    } else {\n      firstInstallTime = -1;\n    }\n  }\n\n  return firstInstallTime;\n}\n\nvar installReferrer;\n\nfunction getInstallReferrer() {\n  return _regenerator.default.async(function getInstallReferrer$(_context33) {\n    while (1) {\n      switch (_context33.prev = _context33.next) {\n        case 0:\n          if (installReferrer) {\n            _context33.next = 8;\n            break;\n          }\n\n          if (!(_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'web')) {\n            _context33.next = 7;\n            break;\n          }\n\n          _context33.next = 4;\n          return _regenerator.default.awrap(_nativeInterface.default.getInstallReferrer());\n\n        case 4:\n          installReferrer = _context33.sent;\n          _context33.next = 8;\n          break;\n\n        case 7:\n          installReferrer = 'unknown';\n\n        case 8:\n          return _context33.abrupt(\"return\", installReferrer);\n\n        case 9:\n        case \"end\":\n          return _context33.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getInstallReferrerSync() {\n  if (!installReferrer) {\n    if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'web') {\n      installReferrer = _nativeInterface.default.getInstallReferrerSync();\n    } else {\n      installReferrer = 'unknown';\n    }\n  }\n\n  return installReferrer;\n}\n\nvar lastUpdateTime;\n\nfunction getLastUpdateTime() {\n  return _regenerator.default.async(function getLastUpdateTime$(_context34) {\n    while (1) {\n      switch (_context34.prev = _context34.next) {\n        case 0:\n          if (lastUpdateTime) {\n            _context34.next = 8;\n            break;\n          }\n\n          if (!(_reactNative.Platform.OS === 'android')) {\n            _context34.next = 7;\n            break;\n          }\n\n          _context34.next = 4;\n          return _regenerator.default.awrap(_nativeInterface.default.getLastUpdateTime());\n\n        case 4:\n          lastUpdateTime = _context34.sent;\n          _context34.next = 8;\n          break;\n\n        case 7:\n          lastUpdateTime = -1;\n\n        case 8:\n          return _context34.abrupt(\"return\", lastUpdateTime);\n\n        case 9:\n        case \"end\":\n          return _context34.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getLastUpdateTimeSync() {\n  if (!lastUpdateTime) {\n    if (_reactNative.Platform.OS === 'android') {\n      lastUpdateTime = _nativeInterface.default.getLastUpdateTimeSync();\n    } else {\n      lastUpdateTime = -1;\n    }\n  }\n\n  return lastUpdateTime;\n}\n\nfunction getPhoneNumber() {\n  return _regenerator.default.async(function getPhoneNumber$(_context35) {\n    while (1) {\n      switch (_context35.prev = _context35.next) {\n        case 0:\n          if (!(_reactNative.Platform.OS === 'android')) {\n            _context35.next = 2;\n            break;\n          }\n\n          return _context35.abrupt(\"return\", _nativeInterface.default.getPhoneNumber());\n\n        case 2:\n          return _context35.abrupt(\"return\", 'unknown');\n\n        case 3:\n        case \"end\":\n          return _context35.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getPhoneNumberSync() {\n  if (_reactNative.Platform.OS === 'android') {\n    return _nativeInterface.default.getPhoneNumberSync();\n  }\n\n  return 'unknown';\n}\n\nfunction getCarrier() {\n  return _regenerator.default.async(function getCarrier$(_context36) {\n    while (1) {\n      switch (_context36.prev = _context36.next) {\n        case 0:\n          if (!(_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios')) {\n            _context36.next = 2;\n            break;\n          }\n\n          return _context36.abrupt(\"return\", _nativeInterface.default.getCarrier());\n\n        case 2:\n          return _context36.abrupt(\"return\", 'unknown');\n\n        case 3:\n        case \"end\":\n          return _context36.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getCarrierSync() {\n  if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios') {\n    return _nativeInterface.default.getCarrierSync();\n  }\n\n  return 'unknown';\n}\n\nvar totalMemory;\n\nfunction getTotalMemory() {\n  return _regenerator.default.async(function getTotalMemory$(_context37) {\n    while (1) {\n      switch (_context37.prev = _context37.next) {\n        case 0:\n          if (totalMemory) {\n            _context37.next = 8;\n            break;\n          }\n\n          if (!(_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'windows' || _reactNative.Platform.OS === 'web')) {\n            _context37.next = 7;\n            break;\n          }\n\n          _context37.next = 4;\n          return _regenerator.default.awrap(_nativeInterface.default.getTotalMemory());\n\n        case 4:\n          totalMemory = _context37.sent;\n          _context37.next = 8;\n          break;\n\n        case 7:\n          totalMemory = -1;\n\n        case 8:\n          return _context37.abrupt(\"return\", totalMemory);\n\n        case 9:\n        case \"end\":\n          return _context37.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getTotalMemorySync() {\n  if (!totalMemory) {\n    if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'windows' || _reactNative.Platform.OS === 'web') {\n      totalMemory = _nativeInterface.default.getTotalMemorySync();\n    } else {\n      totalMemory = -1;\n    }\n  }\n\n  return totalMemory;\n}\n\nvar maxMemory;\n\nfunction getMaxMemory() {\n  return _regenerator.default.async(function getMaxMemory$(_context38) {\n    while (1) {\n      switch (_context38.prev = _context38.next) {\n        case 0:\n          if (maxMemory) {\n            _context38.next = 8;\n            break;\n          }\n\n          if (!(_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'windows' || _reactNative.Platform.OS === 'web')) {\n            _context38.next = 7;\n            break;\n          }\n\n          _context38.next = 4;\n          return _regenerator.default.awrap(_nativeInterface.default.getMaxMemory());\n\n        case 4:\n          maxMemory = _context38.sent;\n          _context38.next = 8;\n          break;\n\n        case 7:\n          maxMemory = -1;\n\n        case 8:\n          return _context38.abrupt(\"return\", maxMemory);\n\n        case 9:\n        case \"end\":\n          return _context38.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getMaxMemorySync() {\n  if (!maxMemory) {\n    if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'windows' || _reactNative.Platform.OS === 'web') {\n      maxMemory = _nativeInterface.default.getMaxMemorySync();\n    } else {\n      maxMemory = -1;\n    }\n  }\n\n  return maxMemory;\n}\n\nfunction getTotalDiskCapacity() {\n  return _regenerator.default.async(function getTotalDiskCapacity$(_context39) {\n    while (1) {\n      switch (_context39.prev = _context39.next) {\n        case 0:\n          if (!(_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'web')) {\n            _context39.next = 2;\n            break;\n          }\n\n          return _context39.abrupt(\"return\", _nativeInterface.default.getTotalDiskCapacity());\n\n        case 2:\n          return _context39.abrupt(\"return\", -1);\n\n        case 3:\n        case \"end\":\n          return _context39.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getTotalDiskCapacitySync() {\n  if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'web') {\n    return _nativeInterface.default.getTotalDiskCapacitySync();\n  }\n\n  return -1;\n}\n\nfunction getFreeDiskStorage() {\n  return _regenerator.default.async(function getFreeDiskStorage$(_context40) {\n    while (1) {\n      switch (_context40.prev = _context40.next) {\n        case 0:\n          if (!(_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'web')) {\n            _context40.next = 2;\n            break;\n          }\n\n          return _context40.abrupt(\"return\", _nativeInterface.default.getFreeDiskStorage());\n\n        case 2:\n          return _context40.abrupt(\"return\", -1);\n\n        case 3:\n        case \"end\":\n          return _context40.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getFreeDiskStorageSync() {\n  if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'web') {\n    return _nativeInterface.default.getFreeDiskStorageSync();\n  }\n\n  return -1;\n}\n\nfunction getBatteryLevel() {\n  return _regenerator.default.async(function getBatteryLevel$(_context41) {\n    while (1) {\n      switch (_context41.prev = _context41.next) {\n        case 0:\n          if (!(_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'windows' || _reactNative.Platform.OS === 'web')) {\n            _context41.next = 2;\n            break;\n          }\n\n          return _context41.abrupt(\"return\", _nativeInterface.default.getBatteryLevel());\n\n        case 2:\n          return _context41.abrupt(\"return\", -1);\n\n        case 3:\n        case \"end\":\n          return _context41.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getBatteryLevelSync() {\n  if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'windows' || _reactNative.Platform.OS === 'web') {\n    return _nativeInterface.default.getBatteryLevelSync();\n  }\n\n  return -1;\n}\n\nfunction getPowerState() {\n  return _regenerator.default.async(function getPowerState$(_context42) {\n    while (1) {\n      switch (_context42.prev = _context42.next) {\n        case 0:\n          if (!(_reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'web')) {\n            _context42.next = 2;\n            break;\n          }\n\n          return _context42.abrupt(\"return\", _nativeInterface.default.getPowerState());\n\n        case 2:\n          return _context42.abrupt(\"return\", {});\n\n        case 3:\n        case \"end\":\n          return _context42.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getPowerStateSync() {\n  if (_reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'web') {\n    return _nativeInterface.default.getPowerStateSync();\n  }\n\n  return {};\n}\n\nfunction isBatteryCharging() {\n  return _regenerator.default.async(function isBatteryCharging$(_context43) {\n    while (1) {\n      switch (_context43.prev = _context43.next) {\n        case 0:\n          if (!(_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'web')) {\n            _context43.next = 2;\n            break;\n          }\n\n          return _context43.abrupt(\"return\", _nativeInterface.default.isBatteryCharging());\n\n        case 2:\n          return _context43.abrupt(\"return\", false);\n\n        case 3:\n        case \"end\":\n          return _context43.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction isBatteryChargingSync() {\n  if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'web') {\n    return _nativeInterface.default.isBatteryChargingSync();\n  }\n\n  return false;\n}\n\nfunction isLandscape() {\n  return _regenerator.default.async(function isLandscape$(_context44) {\n    while (1) {\n      switch (_context44.prev = _context44.next) {\n        case 0:\n          return _context44.abrupt(\"return\", Promise.resolve(isLandscapeSync()));\n\n        case 1:\n        case \"end\":\n          return _context44.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction isLandscapeSync() {\n  var _Dimensions$get = _reactNative.Dimensions.get('window'),\n      height = _Dimensions$get.height,\n      width = _Dimensions$get.width;\n\n  return width >= height;\n}\n\nfunction isAirplaneMode() {\n  return _regenerator.default.async(function isAirplaneMode$(_context45) {\n    while (1) {\n      switch (_context45.prev = _context45.next) {\n        case 0:\n          if (!(_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'web')) {\n            _context45.next = 2;\n            break;\n          }\n\n          return _context45.abrupt(\"return\", _nativeInterface.default.isAirplaneMode());\n\n        case 2:\n          return _context45.abrupt(\"return\", Promise.resolve(false));\n\n        case 3:\n        case \"end\":\n          return _context45.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction isAirplaneModeSync() {\n  if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'web') {\n    return _nativeInterface.default.isAirplaneModeSync();\n  }\n\n  return false;\n}\n\nvar deviceType;\n\nfunction getDeviceType() {\n  if (!deviceType) {\n    if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios') {\n      deviceType = _nativeInterface.default.deviceType;\n    } else {\n      deviceType = 'unknown';\n    }\n  }\n\n  return deviceType;\n}\n\nfunction getDeviceTypeSync() {\n  if (!deviceType) {\n    if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios') {\n      deviceType = _nativeInterface.default.deviceType;\n    } else {\n      deviceType = 'unknown';\n    }\n  }\n\n  return deviceType;\n}\n\nvar _supportedAbis;\n\nfunction supportedAbis() {\n  return _regenerator.default.async(function supportedAbis$(_context46) {\n    while (1) {\n      switch (_context46.prev = _context46.next) {\n        case 0:\n          if (_supportedAbis) {\n            _context46.next = 8;\n            break;\n          }\n\n          if (!(_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios')) {\n            _context46.next = 7;\n            break;\n          }\n\n          _context46.next = 4;\n          return _regenerator.default.awrap(_nativeInterface.default.getSupportedAbis());\n\n        case 4:\n          _supportedAbis = _context46.sent;\n          _context46.next = 8;\n          break;\n\n        case 7:\n          _supportedAbis = [];\n\n        case 8:\n          return _context46.abrupt(\"return\", _supportedAbis);\n\n        case 9:\n        case \"end\":\n          return _context46.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction supportedAbisSync() {\n  if (!_supportedAbis) {\n    if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios') {\n      _supportedAbis = _nativeInterface.default.getSupportedAbisSync();\n    } else {\n      _supportedAbis = [];\n    }\n  }\n\n  return _supportedAbis;\n}\n\nvar _supported32BitAbis;\n\nfunction supported32BitAbis() {\n  return _regenerator.default.async(function supported32BitAbis$(_context47) {\n    while (1) {\n      switch (_context47.prev = _context47.next) {\n        case 0:\n          if (_supported32BitAbis) {\n            _context47.next = 8;\n            break;\n          }\n\n          if (!(_reactNative.Platform.OS === 'android')) {\n            _context47.next = 7;\n            break;\n          }\n\n          _context47.next = 4;\n          return _regenerator.default.awrap(_nativeInterface.default.getSupported32BitAbis());\n\n        case 4:\n          _supported32BitAbis = _context47.sent;\n          _context47.next = 8;\n          break;\n\n        case 7:\n          _supported32BitAbis = [];\n\n        case 8:\n          return _context47.abrupt(\"return\", _supported32BitAbis);\n\n        case 9:\n        case \"end\":\n          return _context47.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction supported32BitAbisSync() {\n  if (!_supported32BitAbis) {\n    if (_reactNative.Platform.OS === 'android') {\n      _supported32BitAbis = _nativeInterface.default.getSupported32BitAbisSync();\n    } else {\n      _supported32BitAbis = [];\n    }\n  }\n\n  return _supported32BitAbis;\n}\n\nvar _supported64BitAbis;\n\nfunction supported64BitAbis() {\n  return _regenerator.default.async(function supported64BitAbis$(_context48) {\n    while (1) {\n      switch (_context48.prev = _context48.next) {\n        case 0:\n          if (_supported64BitAbis) {\n            _context48.next = 8;\n            break;\n          }\n\n          if (!(_reactNative.Platform.OS === 'android')) {\n            _context48.next = 7;\n            break;\n          }\n\n          _context48.next = 4;\n          return _regenerator.default.awrap(_nativeInterface.default.getSupported64BitAbis());\n\n        case 4:\n          _supported64BitAbis = _context48.sent;\n          _context48.next = 8;\n          break;\n\n        case 7:\n          _supported64BitAbis = [];\n\n        case 8:\n          return _context48.abrupt(\"return\", _supported64BitAbis);\n\n        case 9:\n        case \"end\":\n          return _context48.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction supported64BitAbisSync() {\n  if (!_supported64BitAbis) {\n    if (_reactNative.Platform.OS === 'android') {\n      _supported64BitAbis = _nativeInterface.default.getSupported64BitAbisSync();\n    } else {\n      _supported64BitAbis = [];\n    }\n  }\n\n  return _supported64BitAbis;\n}\n\nfunction hasSystemFeature(feature) {\n  return _regenerator.default.async(function hasSystemFeature$(_context49) {\n    while (1) {\n      switch (_context49.prev = _context49.next) {\n        case 0:\n          if (!(_reactNative.Platform.OS === 'android')) {\n            _context49.next = 2;\n            break;\n          }\n\n          return _context49.abrupt(\"return\", _nativeInterface.default.hasSystemFeature(feature));\n\n        case 2:\n          return _context49.abrupt(\"return\", false);\n\n        case 3:\n        case \"end\":\n          return _context49.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction hasSystemFeatureSync(feature) {\n  if (_reactNative.Platform.OS === 'android') {\n    return _nativeInterface.default.hasSystemFeatureSync(feature);\n  }\n\n  return false;\n}\n\nfunction getSystemAvailableFeatures() {\n  return _regenerator.default.async(function getSystemAvailableFeatures$(_context50) {\n    while (1) {\n      switch (_context50.prev = _context50.next) {\n        case 0:\n          if (!(_reactNative.Platform.OS === 'android')) {\n            _context50.next = 2;\n            break;\n          }\n\n          return _context50.abrupt(\"return\", _nativeInterface.default.getSystemAvailableFeatures());\n\n        case 2:\n          return _context50.abrupt(\"return\", []);\n\n        case 3:\n        case \"end\":\n          return _context50.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getSystemAvailableFeaturesSync() {\n  if (_reactNative.Platform.OS === 'android') {\n    return _nativeInterface.default.getSystemAvailableFeaturesSync();\n  }\n\n  return [];\n}\n\nfunction isLocationEnabled() {\n  return _regenerator.default.async(function isLocationEnabled$(_context51) {\n    while (1) {\n      switch (_context51.prev = _context51.next) {\n        case 0:\n          if (!(_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'web')) {\n            _context51.next = 2;\n            break;\n          }\n\n          return _context51.abrupt(\"return\", _nativeInterface.default.isLocationEnabled());\n\n        case 2:\n          return _context51.abrupt(\"return\", false);\n\n        case 3:\n        case \"end\":\n          return _context51.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction isLocationEnabledSync() {\n  if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'web') {\n    return _nativeInterface.default.isLocationEnabledSync();\n  }\n\n  return false;\n}\n\nfunction isHeadphonesConnected() {\n  return _regenerator.default.async(function isHeadphonesConnected$(_context52) {\n    while (1) {\n      switch (_context52.prev = _context52.next) {\n        case 0:\n          if (!(_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios')) {\n            _context52.next = 2;\n            break;\n          }\n\n          return _context52.abrupt(\"return\", _nativeInterface.default.isHeadphonesConnected());\n\n        case 2:\n          return _context52.abrupt(\"return\", false);\n\n        case 3:\n        case \"end\":\n          return _context52.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction isHeadphonesConnectedSync() {\n  if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios') {\n    return _nativeInterface.default.isHeadphonesConnectedSync();\n  }\n\n  return false;\n}\n\nfunction getAvailableLocationProviders() {\n  return _regenerator.default.async(function getAvailableLocationProviders$(_context53) {\n    while (1) {\n      switch (_context53.prev = _context53.next) {\n        case 0:\n          if (!(_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios')) {\n            _context53.next = 2;\n            break;\n          }\n\n          return _context53.abrupt(\"return\", _nativeInterface.default.getAvailableLocationProviders());\n\n        case 2:\n          return _context53.abrupt(\"return\", {});\n\n        case 3:\n        case \"end\":\n          return _context53.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getAvailableLocationProvidersSync() {\n  if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios') {\n    return _nativeInterface.default.getAvailableLocationProvidersSync();\n  }\n\n  return {};\n}\n\nfunction getDeviceToken() {\n  return _regenerator.default.async(function getDeviceToken$(_context54) {\n    while (1) {\n      switch (_context54.prev = _context54.next) {\n        case 0:\n          if (!(_reactNative.Platform.OS === 'ios')) {\n            _context54.next = 2;\n            break;\n          }\n\n          return _context54.abrupt(\"return\", _nativeInterface.default.getDeviceToken());\n\n        case 2:\n          return _context54.abrupt(\"return\", 'unknown');\n\n        case 3:\n        case \"end\":\n          return _context54.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar deviceInfoEmitter = new _reactNative.NativeEventEmitter(_reactNative.NativeModules.RNDeviceInfo);\n\nfunction useBatteryLevel() {\n  var _useState = (0, _react.useState)(null),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      batteryLevel = _useState2[0],\n      setBatteryLevel = _useState2[1];\n\n  (0, _react.useEffect)(function () {\n    var setInitialValue = function setInitialValue() {\n      var initialValue;\n      return _regenerator.default.async(function setInitialValue$(_context55) {\n        while (1) {\n          switch (_context55.prev = _context55.next) {\n            case 0:\n              _context55.next = 2;\n              return _regenerator.default.awrap(getBatteryLevel());\n\n            case 2:\n              initialValue = _context55.sent;\n              setBatteryLevel(initialValue);\n\n            case 4:\n            case \"end\":\n              return _context55.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    var onChange = function onChange(level) {\n      setBatteryLevel(level);\n    };\n\n    setInitialValue();\n    var subscription = deviceInfoEmitter.addListener('RNDeviceInfo_batteryLevelDidChange', onChange);\n    return function () {\n      return subscription.remove();\n    };\n  }, []);\n  return batteryLevel;\n}\n\nfunction useBatteryLevelIsLow() {\n  var _useState3 = (0, _react.useState)(null),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      batteryLevelIsLow = _useState4[0],\n      setBatteryLevelIsLow = _useState4[1];\n\n  (0, _react.useEffect)(function () {\n    var setInitialValue = function setInitialValue() {\n      var initialValue;\n      return _regenerator.default.async(function setInitialValue$(_context56) {\n        while (1) {\n          switch (_context56.prev = _context56.next) {\n            case 0:\n              _context56.next = 2;\n              return _regenerator.default.awrap(getBatteryLevel());\n\n            case 2:\n              initialValue = _context56.sent;\n              setBatteryLevelIsLow(initialValue);\n\n            case 4:\n            case \"end\":\n              return _context56.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    var onChange = function onChange(level) {\n      setBatteryLevelIsLow(level);\n    };\n\n    setInitialValue();\n    var subscription = deviceInfoEmitter.addListener('RNDeviceInfo_batteryLevelIsLow', onChange);\n    return function () {\n      return subscription.remove();\n    };\n  }, []);\n  return batteryLevelIsLow;\n}\n\nfunction usePowerState() {\n  var _useState5 = (0, _react.useState)({}),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      powerState = _useState6[0],\n      setPowerState = _useState6[1];\n\n  (0, _react.useEffect)(function () {\n    var setInitialValue = function setInitialValue() {\n      var initialValue;\n      return _regenerator.default.async(function setInitialValue$(_context57) {\n        while (1) {\n          switch (_context57.prev = _context57.next) {\n            case 0:\n              _context57.next = 2;\n              return _regenerator.default.awrap(getPowerState());\n\n            case 2:\n              initialValue = _context57.sent;\n              setPowerState(initialValue);\n\n            case 4:\n            case \"end\":\n              return _context57.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    var onChange = function onChange(state) {\n      setPowerState(state);\n    };\n\n    setInitialValue();\n    var subscription = deviceInfoEmitter.addListener('RNDeviceInfo_powerStateDidChange', onChange);\n    return function () {\n      return subscription.remove();\n    };\n  }, []);\n  return powerState;\n}\n\nfunction useFirstInstallTime() {\n  return (0, _asyncHookWrappers.useOnMount)(getFirstInstallTime, -1);\n}\n\nfunction useDeviceName() {\n  return (0, _asyncHookWrappers.useOnMount)(getDeviceName, 'unknown');\n}\n\nfunction useHasSystemFeature(feature) {\n  var asyncGetter = (0, _react.useCallback)(function () {\n    return hasSystemFeature(feature);\n  }, [feature]);\n  return (0, _asyncHookWrappers.useOnMount)(asyncGetter, false);\n}\n\nfunction useIsEmulator() {\n  return (0, _asyncHookWrappers.useOnMount)(isEmulator, false);\n}\n\nvar deviceInfoModule = {\n  getAndroidId: getAndroidId,\n  getAndroidIdSync: getAndroidIdSync,\n  getApiLevel: getApiLevel,\n  getApiLevelSync: getApiLevelSync,\n  getApplicationName: getApplicationName,\n  getAvailableLocationProviders: getAvailableLocationProviders,\n  getAvailableLocationProvidersSync: getAvailableLocationProvidersSync,\n  getBaseOs: getBaseOs,\n  getBaseOsSync: getBaseOsSync,\n  getBatteryLevel: getBatteryLevel,\n  getBatteryLevelSync: getBatteryLevelSync,\n  getBootloader: getBootloader,\n  getBootloaderSync: getBootloaderSync,\n  getBrand: getBrand,\n  getBuildId: getBuildId,\n  getBuildIdSync: getBuildIdSync,\n  getBuildNumber: getBuildNumber,\n  getBundleId: getBundleId,\n  getCarrier: getCarrier,\n  getCarrierSync: getCarrierSync,\n  getCodename: getCodename,\n  getCodenameSync: getCodenameSync,\n  getDevice: getDevice,\n  getDeviceId: getDeviceId,\n  getDeviceName: getDeviceName,\n  getDeviceNameSync: getDeviceNameSync,\n  getDeviceSync: getDeviceSync,\n  getDeviceToken: getDeviceToken,\n  getDeviceType: getDeviceType,\n  getDisplay: getDisplay,\n  getDisplaySync: getDisplaySync,\n  getFingerprint: getFingerprint,\n  getFingerprintSync: getFingerprintSync,\n  getFirstInstallTime: getFirstInstallTime,\n  getFirstInstallTimeSync: getFirstInstallTimeSync,\n  getFontScale: getFontScale,\n  getFontScaleSync: getFontScaleSync,\n  getFreeDiskStorage: getFreeDiskStorage,\n  getFreeDiskStorageSync: getFreeDiskStorageSync,\n  getHardware: getHardware,\n  getHardwareSync: getHardwareSync,\n  getHost: getHost,\n  getHostSync: getHostSync,\n  getIncremental: getIncremental,\n  getIncrementalSync: getIncrementalSync,\n  getInstallerPackageName: getInstallerPackageName,\n  getInstallerPackageNameSync: getInstallerPackageNameSync,\n  getInstallReferrer: getInstallReferrer,\n  getInstallReferrerSync: getInstallReferrerSync,\n  getInstanceId: getInstanceId,\n  getInstanceIdSync: getInstanceIdSync,\n  getIpAddress: getIpAddress,\n  getIpAddressSync: getIpAddressSync,\n  getLastUpdateTime: getLastUpdateTime,\n  getLastUpdateTimeSync: getLastUpdateTimeSync,\n  getMacAddress: getMacAddress,\n  getMacAddressSync: getMacAddressSync,\n  getManufacturer: getManufacturer,\n  getManufacturerSync: getManufacturerSync,\n  getMaxMemory: getMaxMemory,\n  getMaxMemorySync: getMaxMemorySync,\n  getModel: getModel,\n  getPhoneNumber: getPhoneNumber,\n  getPhoneNumberSync: getPhoneNumberSync,\n  getPowerState: getPowerState,\n  getPowerStateSync: getPowerStateSync,\n  getPreviewSdkInt: getPreviewSdkInt,\n  getPreviewSdkIntSync: getPreviewSdkIntSync,\n  getProduct: getProduct,\n  getProductSync: getProductSync,\n  getReadableVersion: getReadableVersion,\n  getSecurityPatch: getSecurityPatch,\n  getSecurityPatchSync: getSecurityPatchSync,\n  getSerialNumber: getSerialNumber,\n  getSerialNumberSync: getSerialNumberSync,\n  getSystemAvailableFeatures: getSystemAvailableFeatures,\n  getSystemAvailableFeaturesSync: getSystemAvailableFeaturesSync,\n  getSystemName: getSystemName,\n  getSystemVersion: getSystemVersion,\n  getTags: getTags,\n  getTagsSync: getTagsSync,\n  getTotalDiskCapacity: getTotalDiskCapacity,\n  getTotalDiskCapacitySync: getTotalDiskCapacitySync,\n  getTotalMemory: getTotalMemory,\n  getTotalMemorySync: getTotalMemorySync,\n  getType: getType,\n  getTypeSync: getTypeSync,\n  getUniqueId: getUniqueId,\n  getUsedMemory: getUsedMemory,\n  getUsedMemorySync: getUsedMemorySync,\n  getUserAgent: getUserAgent,\n  getUserAgentSync: getUserAgentSync,\n  getVersion: getVersion,\n  hasNotch: hasNotch,\n  hasSystemFeature: hasSystemFeature,\n  hasSystemFeatureSync: hasSystemFeatureSync,\n  isAirplaneMode: isAirplaneMode,\n  isAirplaneModeSync: isAirplaneModeSync,\n  isBatteryCharging: isBatteryCharging,\n  isBatteryChargingSync: isBatteryChargingSync,\n  isCameraPresent: isCameraPresent,\n  isCameraPresentSync: isCameraPresentSync,\n  isEmulator: isEmulator,\n  isEmulatorSync: isEmulatorSync,\n  isHeadphonesConnected: isHeadphonesConnected,\n  isHeadphonesConnectedSync: isHeadphonesConnectedSync,\n  isLandscape: isLandscape,\n  isLandscapeSync: isLandscapeSync,\n  isLocationEnabled: isLocationEnabled,\n  isLocationEnabledSync: isLocationEnabledSync,\n  isPinOrFingerprintSet: isPinOrFingerprintSet,\n  isPinOrFingerprintSetSync: isPinOrFingerprintSetSync,\n  isTablet: isTablet,\n  supported32BitAbis: supported32BitAbis,\n  supported32BitAbisSync: supported32BitAbisSync,\n  supported64BitAbis: supported64BitAbis,\n  supported64BitAbisSync: supported64BitAbisSync,\n  supportedAbis: supportedAbis,\n  supportedAbisSync: supportedAbisSync,\n  syncUniqueId: syncUniqueId,\n  useBatteryLevel: useBatteryLevel,\n  useBatteryLevelIsLow: useBatteryLevelIsLow,\n  useDeviceName: useDeviceName,\n  useFirstInstallTime: useFirstInstallTime,\n  useHasSystemFeature: useHasSystemFeature,\n  useIsEmulator: useIsEmulator,\n  usePowerState: usePowerState\n};\nvar _default = deviceInfoModule;\nexports.default = _default;","map":{"version":3,"sources":["index.ts"],"names":["Platform","uniqueId","RNDeviceInfo","getUniqueId","instanceId","serialNumber","androidId","deviceId","manufacturer","model","brand","systemName","systemVersion","buildId","apiLevel","bundleId","installerPackageName","appName","buildNumber","version","getVersion","getBuildNumber","deviceName","userAgent","bootloader","device","display","fingerprint","hardware","host","product","tags","type","baseOs","previewSdkInt","securityPatch","codeName","incremental","emulator","tablet","notch","_brand","getBrand","_model","getModel","devicesWithNotch","item","firstInstallTime","installReferrer","lastUpdateTime","totalMemory","maxMemory","Promise","isLandscapeSync","width","Dimensions","deviceType","_supportedAbis","_supported32BitAbis","_supported64BitAbis","deviceInfoEmitter","NativeModules","useState","useEffect","setInitialValue","initialValue","getBatteryLevel","setBatteryLevel","onChange","level","subscription","setBatteryLevelIsLow","getPowerState","setPowerState","state","useOnMount","asyncGetter","useCallback","hasSystemFeature","deviceInfoModule","getAndroidId","getAndroidIdSync","getApiLevel","getApiLevelSync","getApplicationName","getAvailableLocationProviders","getAvailableLocationProvidersSync","getBaseOs","getBaseOsSync","getBatteryLevelSync","getBootloader","getBootloaderSync","getBuildId","getBuildIdSync","getBundleId","getCarrier","getCarrierSync","getCodename","getCodenameSync","getDevice","getDeviceId","getDeviceName","getDeviceNameSync","getDeviceSync","getDeviceToken","getDeviceType","getDisplay","getDisplaySync","getFingerprint","getFingerprintSync","getFirstInstallTime","getFirstInstallTimeSync","getFontScale","getFontScaleSync","getFreeDiskStorage","getFreeDiskStorageSync","getHardware","getHardwareSync","getHost","getHostSync","getIncremental","getIncrementalSync","getInstallerPackageName","getInstallerPackageNameSync","getInstallReferrer","getInstallReferrerSync","getInstanceId","getInstanceIdSync","getIpAddress","getIpAddressSync","getLastUpdateTime","getLastUpdateTimeSync","getMacAddress","getMacAddressSync","getManufacturer","getManufacturerSync","getMaxMemory","getMaxMemorySync","getPhoneNumber","getPhoneNumberSync","getPowerStateSync","getPreviewSdkInt","getPreviewSdkIntSync","getProduct","getProductSync","getReadableVersion","getSecurityPatch","getSecurityPatchSync","getSerialNumber","getSerialNumberSync","getSystemAvailableFeatures","getSystemAvailableFeaturesSync","getSystemName","getSystemVersion","getTags","getTagsSync","getTotalDiskCapacity","getTotalDiskCapacitySync","getTotalMemory","getTotalMemorySync","getType","getTypeSync","getUsedMemory","getUsedMemorySync","getUserAgent","getUserAgentSync","hasNotch","hasSystemFeatureSync","isAirplaneMode","isAirplaneModeSync","isBatteryCharging","isBatteryChargingSync","isCameraPresent","isCameraPresentSync","isEmulator","isEmulatorSync","isHeadphonesConnected","isHeadphonesConnectedSync","isLandscape","isLocationEnabled","isLocationEnabledSync","isPinOrFingerprintSet","isPinOrFingerprintSetSync","isTablet","supported32BitAbis","supported32BitAbisSync","supported64BitAbis","supported64BitAbisSync","supportedAbis","supportedAbisSync","syncUniqueId","useBatteryLevel","useBatteryLevelIsLow","useDeviceName","useFirstInstallTime","useHasSystemFeature","useIsEmulator","usePowerState"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { Dimensions, NativeEventEmitter, NativeModules, Platform } from 'react-native';\nimport { useOnMount } from './internal/asyncHookWrappers';\nimport devicesWithNotch from './internal/devicesWithNotch';\nimport RNDeviceInfo from './internal/nativeInterface';\nimport { DeviceInfoModule } from './internal/privateTypes';\nimport { AsyncHookResult, DeviceType, LocationProviderInfo, PowerState } from './internal/types';\n\nlet uniqueId: string;\nexport function getUniqueId() {\n  if (!uniqueId) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      uniqueId = RNDeviceInfo.uniqueId;\n    } else {\n      uniqueId = 'unknown';\n    }\n  }\n  return uniqueId;\n}\n\nexport async function syncUniqueId() {\n  if (Platform.OS === 'ios') {\n    uniqueId = await RNDeviceInfo.syncUniqueId();\n  } else {\n    uniqueId = getUniqueId();\n  }\n  return uniqueId;\n}\n\nlet instanceId: string;\nexport async function getInstanceId() {\n  if (!instanceId) {\n    if (Platform.OS === 'android') {\n      instanceId = await RNDeviceInfo.getInstanceId();\n    } else {\n      instanceId = 'unknown';\n    }\n  }\n  return instanceId;\n}\n\nexport function getInstanceIdSync() {\n  if (!instanceId) {\n    if (Platform.OS === 'android') {\n      instanceId = RNDeviceInfo.getInstanceIdSync();\n    } else {\n      instanceId = 'unknown';\n    }\n  }\n  return instanceId;\n}\n\nlet serialNumber: string;\nexport async function getSerialNumber() {\n  if (!serialNumber) {\n    if (Platform.OS === 'android') {\n      serialNumber = await RNDeviceInfo.getSerialNumber();\n    } else {\n      serialNumber = 'unknown';\n    }\n  }\n  return serialNumber;\n}\n\nexport function getSerialNumberSync() {\n  if (!serialNumber) {\n    if (Platform.OS === 'android') {\n      serialNumber = RNDeviceInfo.getSerialNumberSync();\n    } else {\n      serialNumber = 'unknown';\n    }\n  }\n  return serialNumber;\n}\n\nlet androidId: string;\nexport async function getAndroidId() {\n  if (!androidId) {\n    if (Platform.OS === 'android') {\n      androidId = await RNDeviceInfo.getAndroidId();\n    } else {\n      androidId = 'unknown';\n    }\n  }\n  return androidId;\n}\n\nexport function getAndroidIdSync() {\n  if (!androidId) {\n    if (Platform.OS === 'android') {\n      androidId = RNDeviceInfo.getAndroidIdSync();\n    } else {\n      androidId = 'unknown';\n    }\n  }\n  return androidId;\n}\n\nexport async function getIpAddress() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n    return RNDeviceInfo.getIpAddress();\n  }\n  return 'unknown';\n}\n\nexport function getIpAddressSync() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n    return RNDeviceInfo.getIpAddressSync();\n  }\n  return 'unknown';\n}\n\nexport async function isCameraPresent() {\n  if (Platform.OS === 'android' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return RNDeviceInfo.isCameraPresent();\n  }\n  return false;\n}\n\nexport function isCameraPresentSync() {\n  if (Platform.OS === 'android' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return RNDeviceInfo.isCameraPresentSync();\n  }\n  return false;\n}\n\nexport async function getMacAddress() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getMacAddress();\n  } else if (Platform.OS === 'ios') {\n    return '02:00:00:00:00:00';\n  }\n  return 'unknown';\n}\n\nexport function getMacAddressSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getMacAddressSync();\n  } else if (Platform.OS === 'ios') {\n    return '02:00:00:00:00:00';\n  }\n  return 'unknown';\n}\n\nlet deviceId: string;\nexport function getDeviceId() {\n  if (!deviceId) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      deviceId = RNDeviceInfo.deviceId;\n    } else {\n      deviceId = 'unknown';\n    }\n  }\n  return deviceId;\n}\n\nlet manufacturer: string;\nexport async function getManufacturer() {\n  if (!manufacturer) {\n    if (Platform.OS === 'android' || Platform.OS === 'windows') {\n      manufacturer = await RNDeviceInfo.getSystemManufacturer();\n    } else if (Platform.OS === 'ios') {\n      manufacturer = 'Apple';\n    } else {\n      manufacturer = 'unknown';\n    }\n  }\n  return manufacturer;\n}\n\nexport function getManufacturerSync() {\n  if (!manufacturer) {\n    if (Platform.OS === 'android' || Platform.OS === 'windows') {\n      manufacturer = RNDeviceInfo.getSystemManufacturerSync();\n    } else if (Platform.OS === 'ios') {\n      manufacturer = 'Apple';\n    } else {\n      manufacturer = 'unknown';\n    }\n  }\n  return manufacturer;\n}\n\nlet model: string;\nexport function getModel() {\n  if (!model) {\n    if (Platform.OS === 'ios' || Platform.OS === 'android' || Platform.OS === 'windows') {\n      model = RNDeviceInfo.model;\n    } else {\n      model = 'unknown';\n    }\n  }\n  return model;\n}\n\nlet brand: string;\nexport function getBrand() {\n  if (!brand) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      brand = RNDeviceInfo.brand;\n    } else {\n      brand = 'unknown';\n    }\n  }\n  return brand;\n}\n\nlet systemName: string;\nexport function getSystemName() {\n  if (!systemName) {\n    if (Platform.OS === 'ios') {\n      systemName = RNDeviceInfo.systemName;\n    } else if (Platform.OS === 'android') {\n      systemName = 'Android';\n    } else if (Platform.OS === 'windows') {\n      systemName = 'Windows';\n    } else {\n      systemName = 'unknown';\n    }\n  }\n  return systemName;\n}\n\nlet systemVersion: string;\nexport function getSystemVersion() {\n  if (!systemVersion) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      systemVersion = RNDeviceInfo.systemVersion;\n    } else {\n      systemVersion = 'unknown';\n    }\n  }\n  return systemVersion;\n}\n\nlet buildId: string;\nexport async function getBuildId() {\n  if (!buildId) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios') {\n      buildId = await RNDeviceInfo.getBuildId();\n    } else {\n      buildId = 'unknown';\n    }\n  }\n  return buildId;\n}\n\nexport function getBuildIdSync() {\n  if (!buildId) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios') {\n      buildId = RNDeviceInfo.getBuildIdSync();\n    } else {\n      buildId = 'unknown';\n    }\n  }\n  return buildId;\n}\n\nlet apiLevel: number;\nexport async function getApiLevel() {\n  if (!apiLevel) {\n    if (Platform.OS === 'android') {\n      apiLevel = await RNDeviceInfo.getApiLevel();\n    } else {\n      apiLevel = -1;\n    }\n  }\n  return apiLevel;\n}\n\nexport function getApiLevelSync() {\n  if (!apiLevel) {\n    if (Platform.OS === 'android') {\n      apiLevel = RNDeviceInfo.getApiLevelSync();\n    } else {\n      apiLevel = -1;\n    }\n  }\n  return apiLevel;\n}\n\nlet bundleId: string;\nexport function getBundleId() {\n  if (!bundleId) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      bundleId = RNDeviceInfo.bundleId;\n    } else {\n      bundleId = 'unknown';\n    }\n  }\n  return bundleId;\n}\n\nlet installerPackageName: string;\nexport async function getInstallerPackageName() {\n  if (!installerPackageName) {\n    if (Platform.OS === 'android') {\n      installerPackageName = await RNDeviceInfo.getInstallerPackageName();\n    } else {\n      installerPackageName = 'unknown';\n    }\n  }\n\n  return installerPackageName;\n}\n\nexport function getInstallerPackageNameSync() {\n  if (!installerPackageName) {\n    if (Platform.OS === 'android') {\n      installerPackageName = RNDeviceInfo.getInstallerPackageNameSync();\n    } else {\n      installerPackageName = 'unknown';\n    }\n  }\n\n  return installerPackageName;\n}\n\nlet appName: string;\nexport function getApplicationName() {\n  if (!appName) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      appName = RNDeviceInfo.appName;\n    } else {\n      appName = 'unknown';\n    }\n  }\n  return appName;\n}\n\nlet buildNumber: string;\nexport function getBuildNumber() {\n  if (!buildNumber) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      buildNumber = RNDeviceInfo.buildNumber;\n    } else {\n      buildNumber = 'unknown';\n    }\n  }\n  return buildNumber;\n}\n\nlet version: string;\nexport function getVersion() {\n  if (!version) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      version = RNDeviceInfo.appVersion;\n    } else {\n      version = 'unknown';\n    }\n  }\n  return version;\n}\n\nexport function getReadableVersion() {\n  return getVersion() + '.' + getBuildNumber();\n}\n\nlet deviceName: string;\nexport async function getDeviceName() {\n  if (!deviceName) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      deviceName = await RNDeviceInfo.getDeviceName();\n    } else {\n      deviceName = 'unknown';\n    }\n  }\n  return deviceName;\n}\n\nexport function getDeviceNameSync() {\n  if (!deviceName) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      deviceName = RNDeviceInfo.getDeviceNameSync();\n    } else {\n      deviceName = 'unknown';\n    }\n  }\n  return deviceName;\n}\n\nexport async function getUsedMemory() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'web') {\n    return RNDeviceInfo.getUsedMemory();\n  }\n  return -1;\n}\n\nexport function getUsedMemorySync() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'web') {\n    return RNDeviceInfo.getUsedMemorySync();\n  }\n  return -1;\n}\n\nlet userAgent: string;\nexport async function getUserAgent() {\n  if (!userAgent) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'web') {\n      userAgent = await RNDeviceInfo.getUserAgent();\n    } else {\n      userAgent = 'unknown';\n    }\n  }\n  return userAgent;\n}\n\nexport function getUserAgentSync() {\n  if (!userAgent) {\n    // getUserAgentSync is not available on iOS since it rely on an completion operation\n    if (Platform.OS === 'android' || Platform.OS === 'web') {\n      userAgent = RNDeviceInfo.getUserAgentSync();\n    } else {\n      userAgent = 'unknown';\n    }\n  }\n  return userAgent;\n}\n\nexport async function getFontScale() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios') {\n    return RNDeviceInfo.getFontScale();\n  }\n  return -1;\n}\n\nexport function getFontScaleSync() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios') {\n    return RNDeviceInfo.getFontScaleSync();\n  }\n  return -1;\n}\n\nlet bootloader: string;\nexport async function getBootloader() {\n  if (!bootloader) {\n    if (Platform.OS === 'android') {\n      bootloader = await RNDeviceInfo.getBootloader();\n    } else {\n      bootloader = 'unknown';\n    }\n  }\n  return bootloader;\n}\n\nexport function getBootloaderSync() {\n  if (!bootloader) {\n    if (Platform.OS === 'android') {\n      bootloader = RNDeviceInfo.getBootloaderSync();\n    } else {\n      bootloader = 'unknown';\n    }\n  }\n  return bootloader;\n}\n\nlet device: string;\nexport async function getDevice() {\n  if (!device) {\n    if (Platform.OS === 'android') {\n      device = await RNDeviceInfo.getDevice();\n    } else {\n      device = 'unknown';\n    }\n  }\n  return device;\n}\n\nexport function getDeviceSync() {\n  if (!device) {\n    if (Platform.OS === 'android') {\n      device = RNDeviceInfo.getDeviceSync();\n    } else {\n      device = 'unknown';\n    }\n  }\n  return device;\n}\n\nlet display: string;\nexport async function getDisplay() {\n  if (!display) {\n    if (Platform.OS === 'android') {\n      display = await RNDeviceInfo.getDisplay();\n    } else {\n      display = 'unknown';\n    }\n  }\n  return display;\n}\n\nexport function getDisplaySync() {\n  if (!display) {\n    if (Platform.OS === 'android') {\n      display = RNDeviceInfo.getDisplaySync();\n    } else {\n      display = 'unknown';\n    }\n  }\n  return display;\n}\n\nlet fingerprint: string;\nexport async function getFingerprint() {\n  if (!fingerprint) {\n    if (Platform.OS === 'android') {\n      fingerprint = await RNDeviceInfo.getFingerprint();\n    } else {\n      fingerprint = 'unknown';\n    }\n  }\n  return fingerprint;\n}\n\nexport function getFingerprintSync() {\n  if (!fingerprint) {\n    if (Platform.OS === 'android') {\n      fingerprint = RNDeviceInfo.getFingerprintSync();\n    } else {\n      fingerprint = 'unknown';\n    }\n  }\n  return fingerprint;\n}\n\nlet hardware: string;\nexport async function getHardware() {\n  if (!hardware) {\n    if (Platform.OS === 'android') {\n      hardware = await RNDeviceInfo.getHardware();\n    } else {\n      hardware = 'unknown';\n    }\n  }\n  return hardware;\n}\n\nexport function getHardwareSync() {\n  if (!hardware) {\n    if (Platform.OS === 'android') {\n      hardware = RNDeviceInfo.getHardwareSync();\n    } else {\n      hardware = 'unknown';\n    }\n  }\n  return hardware;\n}\n\nlet host: string;\nexport async function getHost() {\n  if (!host) {\n    if (Platform.OS === 'android') {\n      host = await RNDeviceInfo.getHost();\n    } else {\n      host = 'unknown';\n    }\n  }\n  return host;\n}\n\nexport function getHostSync() {\n  if (!host) {\n    if (Platform.OS === 'android') {\n      host = RNDeviceInfo.getHostSync();\n    } else {\n      host = 'unknown';\n    }\n  }\n  return host;\n}\n\nlet product: string;\nexport async function getProduct() {\n  if (!product) {\n    if (Platform.OS === 'android') {\n      product = await RNDeviceInfo.getProduct();\n    } else {\n      product = 'unknown';\n    }\n  }\n  return product;\n}\n\nexport function getProductSync() {\n  if (!product) {\n    if (Platform.OS === 'android') {\n      product = RNDeviceInfo.getProductSync();\n    } else {\n      product = 'unknown';\n    }\n  }\n  return product;\n}\n\nlet tags: string;\nexport async function getTags() {\n  if (!tags) {\n    if (Platform.OS === 'android') {\n      tags = await RNDeviceInfo.getTags();\n    } else {\n      tags = 'unknown';\n    }\n  }\n  return tags;\n}\n\nexport function getTagsSync() {\n  if (!tags) {\n    if (Platform.OS === 'android') {\n      tags = RNDeviceInfo.getTagsSync();\n    } else {\n      tags = 'unknown';\n    }\n  }\n  return tags;\n}\n\nlet type: string;\nexport async function getType() {\n  if (!type) {\n    if (Platform.OS === 'android') {\n      type = await RNDeviceInfo.getType();\n    } else {\n      type = 'unknown';\n    }\n  }\n  return type;\n}\n\nexport function getTypeSync() {\n  if (!type) {\n    if (Platform.OS === 'android') {\n      type = RNDeviceInfo.getTypeSync();\n    } else {\n      type = 'unknown';\n    }\n  }\n  return type;\n}\n\nlet baseOs: string;\nexport async function getBaseOs() {\n  if (!baseOs) {\n    if (Platform.OS === 'android' || Platform.OS === 'web') {\n      baseOs = await RNDeviceInfo.getBaseOs();\n    } else {\n      baseOs = 'unknown';\n    }\n  }\n  return baseOs;\n}\n\nexport function getBaseOsSync() {\n  if (!baseOs) {\n    if (Platform.OS === 'android' || Platform.OS === 'web') {\n      baseOs = RNDeviceInfo.getBaseOsSync();\n    } else {\n      baseOs = 'unknown';\n    }\n  }\n  return baseOs;\n}\n\nlet previewSdkInt: number;\nexport async function getPreviewSdkInt() {\n  if (!previewSdkInt) {\n    if (Platform.OS === 'android') {\n      previewSdkInt = await RNDeviceInfo.getPreviewSdkInt();\n    } else {\n      previewSdkInt = -1;\n    }\n  }\n  return previewSdkInt;\n}\n\nexport function getPreviewSdkIntSync() {\n  if (!previewSdkInt) {\n    if (Platform.OS === 'android') {\n      previewSdkInt = RNDeviceInfo.getPreviewSdkIntSync();\n    } else {\n      previewSdkInt = -1;\n    }\n  }\n  return previewSdkInt;\n}\n\nlet securityPatch: string;\nexport async function getSecurityPatch() {\n  if (!securityPatch) {\n    if (Platform.OS === 'android') {\n      securityPatch = await RNDeviceInfo.getSecurityPatch();\n    } else {\n      securityPatch = 'unknown';\n    }\n  }\n  return securityPatch;\n}\n\nexport function getSecurityPatchSync() {\n  if (!securityPatch) {\n    if (Platform.OS === 'android') {\n      securityPatch = RNDeviceInfo.getSecurityPatchSync();\n    } else {\n      securityPatch = 'unknown';\n    }\n  }\n  return securityPatch;\n}\n\nlet codeName: string;\nexport async function getCodename() {\n  if (!codeName) {\n    if (Platform.OS === 'android') {\n      codeName = await RNDeviceInfo.getCodename();\n    } else {\n      codeName = 'unknown';\n    }\n  }\n  return codeName;\n}\n\nexport function getCodenameSync() {\n  if (!codeName) {\n    if (Platform.OS === 'android') {\n      codeName = RNDeviceInfo.getCodenameSync();\n    } else {\n      codeName = 'unknown';\n    }\n  }\n  return codeName;\n}\n\nlet incremental: string;\nexport async function getIncremental() {\n  if (!incremental) {\n    if (Platform.OS === 'android') {\n      incremental = await RNDeviceInfo.getIncremental();\n    } else {\n      incremental = 'unknown';\n    }\n  }\n  return incremental;\n}\n\nexport function getIncrementalSync() {\n  if (!incremental) {\n    if (Platform.OS === 'android') {\n      incremental = RNDeviceInfo.getIncrementalSync();\n    } else {\n      incremental = 'unknown';\n    }\n  }\n  return incremental;\n}\n\nlet emulator: boolean;\nexport async function isEmulator() {\n  if (emulator === undefined) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      emulator = await RNDeviceInfo.isEmulator();\n    } else {\n      emulator = false;\n    }\n  }\n  return emulator;\n}\n\nexport function isEmulatorSync() {\n  if (emulator === undefined) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      emulator = RNDeviceInfo.isEmulatorSync();\n    } else {\n      emulator = false;\n    }\n  }\n  return emulator;\n}\n\nlet tablet: boolean;\nexport function isTablet() {\n  if (tablet === undefined) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n      tablet = RNDeviceInfo.isTablet;\n    } else {\n      tablet = false;\n    }\n  }\n  return tablet;\n}\n\nexport async function isPinOrFingerprintSet() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n    return RNDeviceInfo.isPinOrFingerprintSet();\n  }\n  return false;\n}\n\nexport function isPinOrFingerprintSetSync() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'windows') {\n    return RNDeviceInfo.isPinOrFingerprintSetSync();\n  }\n  return false;\n}\n\nlet notch: boolean;\nexport function hasNotch() {\n  if (notch === undefined) {\n    let _brand = getBrand();\n    let _model = getModel();\n    notch =\n      devicesWithNotch.findIndex(\n        (item) =>\n          item.brand.toLowerCase() === _brand.toLowerCase() &&\n          item.model.toLowerCase() === _model.toLowerCase()\n      ) !== -1;\n  }\n  return notch;\n}\n\nlet firstInstallTime: number;\nexport async function getFirstInstallTime() {\n  if (!firstInstallTime) {\n    if (Platform.OS === 'android' || Platform.OS === 'windows') {\n      firstInstallTime = await RNDeviceInfo.getFirstInstallTime();\n    } else {\n      firstInstallTime = -1;\n    }\n  }\n  return firstInstallTime;\n}\n\nexport function getFirstInstallTimeSync() {\n  if (!firstInstallTime) {\n    if (Platform.OS === 'android' || Platform.OS === 'windows') {\n      firstInstallTime = RNDeviceInfo.getFirstInstallTimeSync();\n    } else {\n      firstInstallTime = -1;\n    }\n  }\n  return firstInstallTime;\n}\n\nlet installReferrer: string;\nexport async function getInstallReferrer() {\n  if (!installReferrer) {\n    if (Platform.OS === 'android' || Platform.OS === 'web') {\n      installReferrer = await RNDeviceInfo.getInstallReferrer();\n    } else {\n      installReferrer = 'unknown';\n    }\n  }\n  return installReferrer;\n}\n\nexport function getInstallReferrerSync() {\n  if (!installReferrer) {\n    if (Platform.OS === 'android' || Platform.OS === 'web') {\n      installReferrer = RNDeviceInfo.getInstallReferrerSync();\n    } else {\n      installReferrer = 'unknown';\n    }\n  }\n  return installReferrer;\n}\n\nlet lastUpdateTime: number;\nexport async function getLastUpdateTime() {\n  if (!lastUpdateTime) {\n    if (Platform.OS === 'android') {\n      lastUpdateTime = await RNDeviceInfo.getLastUpdateTime();\n    } else {\n      lastUpdateTime = -1;\n    }\n  }\n  return lastUpdateTime;\n}\n\nexport function getLastUpdateTimeSync() {\n  if (!lastUpdateTime) {\n    if (Platform.OS === 'android') {\n      lastUpdateTime = RNDeviceInfo.getLastUpdateTimeSync();\n    } else {\n      lastUpdateTime = -1;\n    }\n  }\n  return lastUpdateTime;\n}\n\nexport async function getPhoneNumber() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getPhoneNumber();\n  }\n  return 'unknown';\n}\n\nexport function getPhoneNumberSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getPhoneNumberSync();\n  }\n  return 'unknown';\n}\n\nexport async function getCarrier() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios') {\n    return RNDeviceInfo.getCarrier();\n  }\n  return 'unknown';\n}\n\nexport function getCarrierSync() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios') {\n    return RNDeviceInfo.getCarrierSync();\n  }\n  return 'unknown';\n}\n\nlet totalMemory: number;\nexport async function getTotalMemory() {\n  if (!totalMemory) {\n    if (\n      Platform.OS === 'android' ||\n      Platform.OS === 'ios' ||\n      Platform.OS === 'windows' ||\n      Platform.OS === 'web'\n    ) {\n      totalMemory = await RNDeviceInfo.getTotalMemory();\n    } else {\n      totalMemory = -1;\n    }\n  }\n  return totalMemory;\n}\n\nexport function getTotalMemorySync() {\n  if (!totalMemory) {\n    if (\n      Platform.OS === 'android' ||\n      Platform.OS === 'ios' ||\n      Platform.OS === 'windows' ||\n      Platform.OS === 'web'\n    ) {\n      totalMemory = RNDeviceInfo.getTotalMemorySync();\n    } else {\n      totalMemory = -1;\n    }\n  }\n  return totalMemory;\n}\n\nlet maxMemory: number;\nexport async function getMaxMemory() {\n  if (!maxMemory) {\n    if (Platform.OS === 'android' || Platform.OS === 'windows' || Platform.OS === 'web') {\n      maxMemory = await RNDeviceInfo.getMaxMemory();\n    } else {\n      maxMemory = -1;\n    }\n  }\n  return maxMemory;\n}\n\nexport function getMaxMemorySync() {\n  if (!maxMemory) {\n    if (Platform.OS === 'android' || Platform.OS === 'windows' || Platform.OS === 'web') {\n      maxMemory = RNDeviceInfo.getMaxMemorySync();\n    } else {\n      maxMemory = -1;\n    }\n  }\n  return maxMemory;\n}\n\nexport async function getTotalDiskCapacity() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'web') {\n    return RNDeviceInfo.getTotalDiskCapacity();\n  }\n  return -1;\n}\n\nexport function getTotalDiskCapacitySync() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'web') {\n    return RNDeviceInfo.getTotalDiskCapacitySync();\n  }\n  return -1;\n}\n\nexport async function getFreeDiskStorage() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'web') {\n    return RNDeviceInfo.getFreeDiskStorage();\n  }\n  return -1;\n}\n\nexport function getFreeDiskStorageSync() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'web') {\n    return RNDeviceInfo.getFreeDiskStorageSync();\n  }\n  return -1;\n}\n\nexport async function getBatteryLevel() {\n  if (\n    Platform.OS === 'android' ||\n    Platform.OS === 'ios' ||\n    Platform.OS === 'windows' ||\n    Platform.OS === 'web'\n  ) {\n    return RNDeviceInfo.getBatteryLevel();\n  }\n  return -1;\n}\n\nexport function getBatteryLevelSync() {\n  if (\n    Platform.OS === 'android' ||\n    Platform.OS === 'ios' ||\n    Platform.OS === 'windows' ||\n    Platform.OS === 'web'\n  ) {\n    return RNDeviceInfo.getBatteryLevelSync();\n  }\n  return -1;\n}\n\nexport async function getPowerState() {\n  if (Platform.OS === 'ios' || Platform.OS === 'android' || Platform.OS === 'web') {\n    return RNDeviceInfo.getPowerState();\n  }\n  return {};\n}\n\nexport function getPowerStateSync() {\n  if (Platform.OS === 'ios' || Platform.OS === 'android' || Platform.OS === 'web') {\n    return RNDeviceInfo.getPowerStateSync();\n  }\n  return {};\n}\n\nexport async function isBatteryCharging() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'web') {\n    return RNDeviceInfo.isBatteryCharging();\n  }\n  return false;\n}\n\nexport function isBatteryChargingSync() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'web') {\n    return RNDeviceInfo.isBatteryChargingSync();\n  }\n  return false;\n}\n\nexport async function isLandscape() {\n  return Promise.resolve(isLandscapeSync());\n}\n\nexport function isLandscapeSync() {\n  const { height, width } = Dimensions.get('window');\n  return width >= height;\n}\n\nexport async function isAirplaneMode() {\n  if (Platform.OS === 'android' || Platform.OS === 'web') {\n    return RNDeviceInfo.isAirplaneMode();\n  }\n  return Promise.resolve(false);\n}\n\nexport function isAirplaneModeSync() {\n  if (Platform.OS === 'android' || Platform.OS === 'web') {\n    return RNDeviceInfo.isAirplaneModeSync();\n  }\n  return false;\n}\n\nlet deviceType: DeviceType;\nexport function getDeviceType() {\n  if (!deviceType) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios') {\n      deviceType = RNDeviceInfo.deviceType;\n    } else {\n      deviceType = 'unknown';\n    }\n  }\n  return deviceType;\n}\n\nexport function getDeviceTypeSync() {\n  if (!deviceType) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios') {\n      deviceType = RNDeviceInfo.deviceType;\n    } else {\n      deviceType = 'unknown';\n    }\n  }\n  return deviceType;\n}\n\nlet _supportedAbis: string[];\nexport async function supportedAbis() {\n  if (!_supportedAbis) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios') {\n      _supportedAbis = await RNDeviceInfo.getSupportedAbis();\n    } else {\n      _supportedAbis = [];\n    }\n  }\n  return _supportedAbis;\n}\n\nexport function supportedAbisSync() {\n  if (!_supportedAbis) {\n    if (Platform.OS === 'android' || Platform.OS === 'ios') {\n      _supportedAbis = RNDeviceInfo.getSupportedAbisSync();\n    } else {\n      _supportedAbis = [];\n    }\n  }\n  return _supportedAbis;\n}\n\nlet _supported32BitAbis: string[];\nexport async function supported32BitAbis() {\n  if (!_supported32BitAbis) {\n    if (Platform.OS === 'android') {\n      _supported32BitAbis = await RNDeviceInfo.getSupported32BitAbis();\n    } else {\n      _supported32BitAbis = [];\n    }\n  }\n  return _supported32BitAbis;\n}\n\nexport function supported32BitAbisSync() {\n  if (!_supported32BitAbis) {\n    if (Platform.OS === 'android') {\n      _supported32BitAbis = RNDeviceInfo.getSupported32BitAbisSync();\n    } else {\n      _supported32BitAbis = [];\n    }\n  }\n  return _supported32BitAbis;\n}\n\nlet _supported64BitAbis: string[];\nexport async function supported64BitAbis() {\n  if (!_supported64BitAbis) {\n    if (Platform.OS === 'android') {\n      _supported64BitAbis = await RNDeviceInfo.getSupported64BitAbis();\n    } else {\n      _supported64BitAbis = [];\n    }\n  }\n  return _supported64BitAbis;\n}\n\nexport function supported64BitAbisSync() {\n  if (!_supported64BitAbis) {\n    if (Platform.OS === 'android') {\n      _supported64BitAbis = RNDeviceInfo.getSupported64BitAbisSync();\n    } else {\n      _supported64BitAbis = [];\n    }\n  }\n  return _supported64BitAbis;\n}\n\nexport async function hasSystemFeature(feature: string) {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.hasSystemFeature(feature);\n  }\n  return false;\n}\n\nexport function hasSystemFeatureSync(feature: string) {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.hasSystemFeatureSync(feature);\n  }\n  return false;\n}\n\nexport async function getSystemAvailableFeatures() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getSystemAvailableFeatures();\n  }\n  return [];\n}\n\nexport function getSystemAvailableFeaturesSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getSystemAvailableFeaturesSync();\n  }\n  return [];\n}\n\nexport async function isLocationEnabled() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'web') {\n    return RNDeviceInfo.isLocationEnabled();\n  }\n  return false;\n}\n\nexport function isLocationEnabledSync() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios' || Platform.OS === 'web') {\n    return RNDeviceInfo.isLocationEnabledSync();\n  }\n  return false;\n}\n\nexport async function isHeadphonesConnected() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios') {\n    return RNDeviceInfo.isHeadphonesConnected();\n  }\n  return false;\n}\n\nexport function isHeadphonesConnectedSync() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios') {\n    return RNDeviceInfo.isHeadphonesConnectedSync();\n  }\n  return false;\n}\n\nexport async function getAvailableLocationProviders() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios') {\n    return RNDeviceInfo.getAvailableLocationProviders();\n  }\n  return {};\n}\n\nexport function getAvailableLocationProvidersSync() {\n  if (Platform.OS === 'android' || Platform.OS === 'ios') {\n    return RNDeviceInfo.getAvailableLocationProvidersSync();\n  }\n  return {};\n}\n\nexport async function getDeviceToken() {\n  if (Platform.OS === 'ios') {\n    return RNDeviceInfo.getDeviceToken();\n  }\n  return 'unknown';\n}\n\nconst deviceInfoEmitter = new NativeEventEmitter(NativeModules.RNDeviceInfo);\nexport function useBatteryLevel(): number | null {\n  const [batteryLevel, setBatteryLevel] = useState<number | null>(null);\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: number = await getBatteryLevel();\n      setBatteryLevel(initialValue);\n    };\n\n    const onChange = (level: number) => {\n      setBatteryLevel(level);\n    };\n\n    setInitialValue();\n\n    const subscription = deviceInfoEmitter.addListener(\n      'RNDeviceInfo_batteryLevelDidChange',\n      onChange\n    );\n\n    return () => subscription.remove();\n  }, []);\n\n  return batteryLevel;\n}\n\nexport function useBatteryLevelIsLow(): number | null {\n  const [batteryLevelIsLow, setBatteryLevelIsLow] = useState<number | null>(null);\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: number = await getBatteryLevel();\n      setBatteryLevelIsLow(initialValue);\n    };\n\n    const onChange = (level: number) => {\n      setBatteryLevelIsLow(level);\n    };\n\n    setInitialValue();\n\n    const subscription = deviceInfoEmitter.addListener('RNDeviceInfo_batteryLevelIsLow', onChange);\n\n    return () => subscription.remove();\n  }, []);\n\n  return batteryLevelIsLow;\n}\n\nexport function usePowerState(): PowerState | {} {\n  const [powerState, setPowerState] = useState<PowerState | {}>({});\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: PowerState | {} = await getPowerState();\n      setPowerState(initialValue);\n    };\n\n    const onChange = (state: PowerState) => {\n      setPowerState(state);\n    };\n\n    setInitialValue();\n\n    const subscription = deviceInfoEmitter.addListener(\n      'RNDeviceInfo_powerStateDidChange',\n      onChange\n    );\n\n    return () => subscription.remove();\n  }, []);\n\n  return powerState;\n}\n\nexport function useFirstInstallTime(): AsyncHookResult<number> {\n  return useOnMount(getFirstInstallTime, -1);\n}\n\nexport function useDeviceName(): AsyncHookResult<string> {\n  return useOnMount(getDeviceName, 'unknown');\n}\n\nexport function useHasSystemFeature(feature: string): AsyncHookResult<boolean> {\n  const asyncGetter = useCallback(() => hasSystemFeature(feature), [feature]);\n  return useOnMount(asyncGetter, false);\n}\n\nexport function useIsEmulator(): AsyncHookResult<boolean> {\n  return useOnMount(isEmulator, false);\n}\n\nexport { AsyncHookResult, DeviceType, LocationProviderInfo, PowerState };\n\nconst deviceInfoModule: DeviceInfoModule = {\n  getAndroidId,\n  getAndroidIdSync,\n  getApiLevel,\n  getApiLevelSync,\n  getApplicationName,\n  getAvailableLocationProviders,\n  getAvailableLocationProvidersSync,\n  getBaseOs,\n  getBaseOsSync,\n  getBatteryLevel,\n  getBatteryLevelSync,\n  getBootloader,\n  getBootloaderSync,\n  getBrand,\n  getBuildId,\n  getBuildIdSync,\n  getBuildNumber,\n  getBundleId,\n  getCarrier,\n  getCarrierSync,\n  getCodename,\n  getCodenameSync,\n  getDevice,\n  getDeviceId,\n  getDeviceName,\n  getDeviceNameSync,\n  getDeviceSync,\n  getDeviceToken,\n  getDeviceType,\n  getDisplay,\n  getDisplaySync,\n  getFingerprint,\n  getFingerprintSync,\n  getFirstInstallTime,\n  getFirstInstallTimeSync,\n  getFontScale,\n  getFontScaleSync,\n  getFreeDiskStorage,\n  getFreeDiskStorageSync,\n  getHardware,\n  getHardwareSync,\n  getHost,\n  getHostSync,\n  getIncremental,\n  getIncrementalSync,\n  getInstallerPackageName,\n  getInstallerPackageNameSync,\n  getInstallReferrer,\n  getInstallReferrerSync,\n  getInstanceId,\n  getInstanceIdSync,\n  getIpAddress,\n  getIpAddressSync,\n  getLastUpdateTime,\n  getLastUpdateTimeSync,\n  getMacAddress,\n  getMacAddressSync,\n  getManufacturer,\n  getManufacturerSync,\n  getMaxMemory,\n  getMaxMemorySync,\n  getModel,\n  getPhoneNumber,\n  getPhoneNumberSync,\n  getPowerState,\n  getPowerStateSync,\n  getPreviewSdkInt,\n  getPreviewSdkIntSync,\n  getProduct,\n  getProductSync,\n  getReadableVersion,\n  getSecurityPatch,\n  getSecurityPatchSync,\n  getSerialNumber,\n  getSerialNumberSync,\n  getSystemAvailableFeatures,\n  getSystemAvailableFeaturesSync,\n  getSystemName,\n  getSystemVersion,\n  getTags,\n  getTagsSync,\n  getTotalDiskCapacity,\n  getTotalDiskCapacitySync,\n  getTotalMemory,\n  getTotalMemorySync,\n  getType,\n  getTypeSync,\n  getUniqueId,\n  getUsedMemory,\n  getUsedMemorySync,\n  getUserAgent,\n  getUserAgentSync,\n  getVersion,\n  hasNotch,\n  hasSystemFeature,\n  hasSystemFeatureSync,\n  isAirplaneMode,\n  isAirplaneModeSync,\n  isBatteryCharging,\n  isBatteryChargingSync,\n  isCameraPresent,\n  isCameraPresentSync,\n  isEmulator,\n  isEmulatorSync,\n  isHeadphonesConnected,\n  isHeadphonesConnectedSync,\n  isLandscape,\n  isLandscapeSync,\n  isLocationEnabled,\n  isLocationEnabledSync,\n  isPinOrFingerprintSet,\n  isPinOrFingerprintSetSync,\n  isTablet,\n  supported32BitAbis,\n  supported32BitAbisSync,\n  supported64BitAbis,\n  supported64BitAbisSync,\n  supportedAbis,\n  supportedAbisSync,\n  syncUniqueId,\n  useBatteryLevel,\n  useBatteryLevelIsLow,\n  useDeviceName,\n  useFirstInstallTime,\n  useHasSystemFeature,\n  useIsEmulator,\n  usePowerState,\n};\n\nexport default deviceInfoModule;\n"]},"metadata":{},"sourceType":"script"}