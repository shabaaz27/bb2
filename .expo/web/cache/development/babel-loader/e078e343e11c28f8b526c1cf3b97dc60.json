{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeIndicators = require(\"react-native-indicators\");\n\nvar _WooComFetch = require(\"../common/WooComFetch\");\n\nvar _nativeBase = require(\"native-base\");\n\nvar _reactNavigationStack = require(\"react-navigation-stack\");\n\nvar _syncStorage = _interopRequireDefault(require(\"sync-storage\"));\n\nvar _reactNativeRestart = _interopRequireDefault(require(\"react-native-restart\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _Theme = _interopRequireDefault(require(\"../common/Theme.style\"));\n\nvar _ShoppingCartIcon = _interopRequireDefault(require(\"../common/ShoppingCartIcon\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\mysiew\\\\Documents\\\\eCommerce\\\\codecanyon-xPJMYS8x-react-native-delivery-solution-with-advance-website-and-cms\\\\SourceCode\\\\vesend-consumer-app-master\\\\src\\\\screens\\\\CurrencyScreen.js\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar currencyScreen = function (_PureComponent) {\n  (0, _inherits2.default)(currencyScreen, _PureComponent);\n\n  var _super = _createSuper(currencyScreen);\n\n  (0, _createClass2.default)(currencyScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getListOfCurrency();\n      this.props.navigation.setParams({\n        headerTitle: this.props.isLoading.Config.languageJson2['Select Currency']\n      });\n    }\n  }]);\n\n  function currencyScreen(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, currencyScreen);\n    _this = _super.call(this, props);\n\n    _this.getListOfCurrency = function _callee() {\n      var responseJson, _iterator, _step, val;\n\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regenerator.default.awrap((0, _WooComFetch.getHttp)((0, _WooComFetch.getUrl)() + '/api/' + 'getcurrencies', {}));\n\n            case 2:\n              responseJson = _context.sent;\n\n              for (_iterator = _createForOfIteratorHelperLoose(responseJson.data.data); !(_step = _iterator()).done;) {\n                val = _step.value;\n\n                if (val.code === _syncStorage.default.get('currencyCode')) {\n                  _this.state.tick[val.id] = true;\n                }\n              }\n\n              _this.state.currencyList = responseJson.data.data;\n\n              _this.setState({\n                isLoading: false\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      currency: {},\n      currencyList: [],\n      currentCurrencySymbol: _syncStorage.default.get('currencyCode'),\n      temp: 0,\n      tick: [],\n      isLoading: true\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(currencyScreen, [{\n    key: \"updateCurrency\",\n    value: function updateCurrency(item) {\n      if (this.state.currentCurrencySymbol !== item.code) {\n        _syncStorage.default.set('currencyObject', item);\n\n        if (item.symbol_left !== '') {\n          _syncStorage.default.set('currencyPos', 'left');\n\n          _syncStorage.default.set('currency', item.symbol_left);\n        } else {\n          _syncStorage.default.set('currencyPos', 'right');\n\n          _syncStorage.default.set('currency', item.symbol_right);\n        }\n\n        _syncStorage.default.set('currencyCode', item.code);\n\n        _syncStorage.default.set('wishListProducts', []);\n\n        _syncStorage.default.set('recentViewedProducts', []);\n\n        _syncStorage.default.set('cartProducts', []);\n\n        this.state.tick = [];\n        this.state.tick[item.id] = true;\n        this.setState({\n          temp: 0\n        });\n        setTimeout(function () {\n          _reactNativeRestart.default.Restart();\n        }, 200);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return this.state.isLoading ? _react.default.createElement(_reactNative.View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          backgroundColor: _Theme.default.backgroundColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNativeIndicators.UIActivityIndicator, {\n        size: 27,\n        color: _Theme.default.loadingIndicatorColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      })) : _react.default.createElement(_nativeBase.Container, {\n        style: {\n          backgroundColor: _Theme.default.backgroundColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.FlatList, {\n        data: this.state.currencyList,\n        horizontal: false,\n        extraData: this.state,\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        renderItem: function renderItem(item) {\n          return _react.default.createElement(_reactNative.View, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }\n          }, _react.default.createElement(_nativeBase.ListItem, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }\n          }, _react.default.createElement(_reactNative.TouchableOpacity, {\n            onPress: function onPress() {\n              return _this2.updateCurrency(item.item);\n            },\n            style: {\n              flexDirection: 'row',\n              alignItems: 'center'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }\n          }, _react.default.createElement(_nativeBase.Body, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 21\n            }\n          }, item.item.symbol_left != '' && item.item.symbol_left != null && item.item.symbol_left != undefined ? _react.default.createElement(_nativeBase.Text, {\n            style: {\n              fontSize: _Theme.default.mediumSize,\n              color: _Theme.default.textColor\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 27\n            }\n          }, item.item.title + '(' + item.item.symbol_left + ')') : _react.default.createElement(_nativeBase.Text, {\n            style: {\n              fontSize: _Theme.default.mediumSize,\n              color: _Theme.default.textColor\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 27\n            }\n          }, item.item.title + '(' + item.item.symbol_right + ')')), _react.default.createElement(_nativeBase.CheckBox, {\n            onPress: function onPress() {\n              return _this2.updateCurrency(item.item);\n            },\n            checked: !!(_this2.state.tick[item.item.id] || _syncStorage.default.get('currency') === item.item.symbol),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 21\n            }\n          }))));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n  return currencyScreen;\n}(_react.PureComponent);\n\ncurrencyScreen.navigationOptions = function (_ref) {\n  var navigation = _ref.navigation;\n  var headerStyle = navigation.getParam('headerTitle');\n  return {\n    headerTitle: headerStyle,\n    headerRight: function headerRight() {\n      return _react.default.createElement(_ShoppingCartIcon.default, {\n        navigation: navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 26\n        }\n      });\n    },\n    headerTitleAlign: 'center',\n    headerTintColor: _Theme.default.headerTintColor,\n    headerStyle: {\n      backgroundColor: _Theme.default.primary\n    },\n    headerTitleStyle: {\n      fontWeight: _reactNative.Platform.OS === 'android' ? 'bold' : 'normal'\n    },\n    headerForceInset: {\n      top: 'never',\n      vertical: 'never'\n    },\n    gestureEnabled: true,\n    cardStyleInterpolator: _reactNavigationStack.CardStyleInterpolators.forHorizontalIOS\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoading: state\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, null)(currencyScreen);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/mysiew/Documents/eCommerce/codecanyon-xPJMYS8x-react-native-delivery-solution-with-advance-website-and-cms/SourceCode/vesend-consumer-app-master/src/screens/CurrencyScreen.js"],"names":["currencyScreen","getListOfCurrency","props","navigation","setParams","headerTitle","isLoading","Config","languageJson2","responseJson","data","val","code","SyncStorage","get","state","tick","id","currencyList","setState","currency","currentCurrencySymbol","temp","item","set","symbol_left","symbol_right","setTimeout","RNRestart","Restart","flex","justifyContent","backgroundColor","themeStyle","loadingIndicatorColor","index","toString","updateCurrency","flexDirection","alignItems","undefined","fontSize","mediumSize","color","textColor","title","symbol","PureComponent","navigationOptions","headerStyle","getParam","headerRight","headerTitleAlign","headerTintColor","primary","headerTitleStyle","fontWeight","Platform","OS","headerForceInset","top","vertical","gestureEnabled","cardStyleInterpolator","CardStyleInterpolators","forHorizontalIOS","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport { View, FlatList, TouchableOpacity, Platform } from 'react-native'\nimport { UIActivityIndicator } from 'react-native-indicators'\nimport { getHttp, getUrl } from '../common/WooComFetch'\nimport { Container, ListItem, CheckBox, Text, Body } from 'native-base'\nimport { CardStyleInterpolators } from 'react-navigation-stack'\nimport SyncStorage from 'sync-storage'\nimport RNRestart from 'react-native-restart'\nimport { connect } from 'react-redux'\nimport themeStyle from '../common/Theme.style'\nimport ShoppingCartIcon from '../common/ShoppingCartIcon'\n\nclass currencyScreen extends PureComponent {\n  static navigationOptions = ({ navigation }) => {\n    const headerStyle = navigation.getParam('headerTitle')\n    return {\n      headerTitle: headerStyle,\n      headerRight: () => <ShoppingCartIcon navigation={navigation} />,\n      headerTitleAlign: 'center',\n      headerTintColor: themeStyle.headerTintColor,\n      headerStyle: {\n        backgroundColor: themeStyle.primary\n      },\n      headerTitleStyle: {\n        fontWeight: Platform.OS === 'android' ? 'bold' : 'normal'\n      },\n      headerForceInset: { top: 'never', vertical: 'never' },\n      gestureEnabled: true,\n      cardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS\n    }\n  }\n\n  componentDidMount () {\n    this.getListOfCurrency()\n    this.props.navigation.setParams({\n      headerTitle: this.props.isLoading.Config.languageJson2['Select Currency']\n    })\n  }\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      currency: {},\n      currencyList: [],\n      currentCurrencySymbol: SyncStorage.get('currencyCode'),\n      temp: 0,\n      tick: [],\n      isLoading: true\n    }\n  }\n\n  getListOfCurrency = async () => {\n    const responseJson = await getHttp(getUrl() + '/api/' + 'getcurrencies', {})\n    for (const val of responseJson.data.data) {\n      if (val.code === SyncStorage.get('currencyCode')) {\n        this.state.tick[val.id] = true\n      }\n    }\n    this.state.currencyList = responseJson.data.data\n    this.setState({ isLoading: false })\n  }\n\n  /// //////////////////////////////////////////\n  updateCurrency (item) {\n    if (this.state.currentCurrencySymbol !== item.code) {\n      SyncStorage.set('currencyObject', item)\n      if (item.symbol_left !== '') {\n        SyncStorage.set('currencyPos', 'left')\n        SyncStorage.set('currency', item.symbol_left)\n      } else {\n        SyncStorage.set('currencyPos', 'right')\n        SyncStorage.set('currency', item.symbol_right)\n      }\n      SyncStorage.set('currencyCode', item.code)\n      SyncStorage.set('wishListProducts', [])\n      SyncStorage.set('recentViewedProducts', [])\n      SyncStorage.set('cartProducts', [])\n      this.state.tick = []\n      this.state.tick[item.id] = true\n      this.setState({ temp: 0 })\n      setTimeout(() => {\n        RNRestart.Restart()\n      }, 200)\n    }\n  }\n\n  render () {\n    return this.state.isLoading ? (\n      <View\n        style={{\n          flex: 1,\n          justifyContent: 'center',\n          backgroundColor: themeStyle.backgroundColor\n        }}>\n        <UIActivityIndicator\n          size={27}\n          color={themeStyle.loadingIndicatorColor}\n        />\n      </View>\n    ) : (\n      <Container style={{ backgroundColor: themeStyle.backgroundColor }}>\n        <View style={{ flex: 1 }}>\n          <FlatList\n            data={this.state.currencyList}\n            horizontal={false}\n            extraData={this.state}\n            keyExtractor={(item, index) => index.toString()}\n            renderItem={item => (\n              <View>\n                <ListItem>\n                  <TouchableOpacity\n                    onPress={() => this.updateCurrency(item.item)}\n                    style={{ flexDirection: 'row', alignItems: 'center' }}>\n                    <Body>\n                      {item.item.symbol_left != '' &&\n                      item.item.symbol_left != null &&\n                      item.item.symbol_left != undefined\n                        ? <Text style={{\n                          fontSize: themeStyle.mediumSize,\n                          color: themeStyle.textColor\n                        }}>\n                          {item.item.title + '(' + item.item.symbol_left + ')'}\n                        </Text>\n                        : <Text style={{\n                          fontSize: themeStyle.mediumSize,\n                          color: themeStyle.textColor\n                        }}>\n                          {item.item.title + '(' + item.item.symbol_right + ')'}\n                        </Text>\n                      }\n                    </Body>\n                    <CheckBox\n                      onPress={() => this.updateCurrency(item.item)}\n                      checked={\n                        !!(\n                          this.state.tick[item.item.id] ||\n                          SyncStorage.get('currency') === item.item.symbol\n                        )\n                      }\n                    />\n                  </TouchableOpacity>\n                </ListItem>\n              </View>\n            )}\n          />\n        </View>\n      </Container>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  isLoading: state\n})\n\nexport default connect(mapStateToProps, null)(currencyScreen)\n"]},"metadata":{},"sourceType":"script"}