{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _HTMLStyles = require(\"./HTMLStyles\");\n\nvar _HTMLUtils = require(\"./HTMLUtils\");\n\nvar _HTMLDefaultStyles = require(\"./HTMLDefaultStyles\");\n\nvar _htmlparser = require(\"htmlparser2\");\n\nvar HTMLRenderers = _interopRequireWildcard(require(\"./HTMLRenderers\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\mysiew\\\\Documents\\\\eCommerce\\\\codecanyon-xPJMYS8x-react-native-delivery-solution-with-advance-website-and-cms\\\\SourceCode\\\\vesend-consumer-app-master\\\\node_modules\\\\react-native-render-html\\\\src\\\\HTML.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar HTML = function (_PureComponent) {\n  (0, _inherits2.default)(HTML, _PureComponent);\n\n  var _super = _createSuper(HTML);\n\n  function HTML(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, HTML);\n    _this = _super.call(this, props);\n    _this.state = {};\n    _this.renderers = _objectSpread(_objectSpread({}, HTMLRenderers), _this.props.renderers || {});\n    _this.mounted = false;\n\n    _this.generateDefaultStyles(props.baseFontStyle);\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(HTML, [{\n    key: \"setStateSafe\",\n    value: function setStateSafe() {\n      this.mounted && this.setState.apply(this, arguments);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.mounted = true;\n      this.registerDOM();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.mounted = false;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var html = prevProps.html,\n          uri = prevProps.uri,\n          renderers = prevProps.renderers,\n          tagsStyles = prevProps.tagsStyles,\n          classesStyles = prevProps.classesStyles,\n          baseFontStyle = prevProps.baseFontStyle;\n      var doParseDOM = false;\n      this.generateDefaultStyles(this.props.baseFontStyle);\n\n      if (renderers !== this.props.renderers) {\n        this.renderers = _objectSpread(_objectSpread({}, HTMLRenderers), this.props.renderers || {});\n      }\n\n      if (html !== this.props.html || uri !== this.props.uri) {\n        this.registerDOM(this.props);\n      }\n\n      if (tagsStyles !== this.props.tagsStyles || classesStyles !== this.props.classesStyles || baseFontStyle !== this.props.baseFontStyle) {\n        this.parseDOM(this.state.dom, this.props);\n      }\n\n      if (this.state.dom !== prevState.dom) {\n        this.parseDOM(this.state.dom, this.props);\n      }\n    }\n  }, {\n    key: \"registerDOM\",\n    value: function registerDOM() {\n      var props,\n          cb,\n          html,\n          uri,\n          response,\n          dom,\n          _args = arguments;\n      return _regenerator.default.async(function registerDOM$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              props = _args.length > 0 && _args[0] !== undefined ? _args[0] : this.props;\n              cb = _args.length > 1 ? _args[1] : undefined;\n              html = props.html, uri = props.uri;\n\n              if (!html) {\n                _context.next = 7;\n                break;\n              }\n\n              this.setStateSafe({\n                dom: html,\n                loadingRemoteURL: false,\n                errorLoadingRemoteURL: false\n              });\n              _context.next = 33;\n              break;\n\n            case 7:\n              if (!props.uri) {\n                _context.next = 32;\n                break;\n              }\n\n              _context.prev = 8;\n              _context.prev = 9;\n              this.setStateSafe({\n                loadingRemoteURL: true,\n                errorLoadingRemoteURL: false\n              });\n              _context.next = 13;\n              return _regenerator.default.awrap(fetch(uri));\n\n            case 13:\n              response = _context.sent;\n              _context.next = 16;\n              return _regenerator.default.awrap(response.text());\n\n            case 16:\n              dom = _context.sent;\n              this.setStateSafe({\n                dom: dom,\n                loadingRemoteURL: false\n              });\n              _context.next = 24;\n              break;\n\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](9);\n              console.warn(_context.t0);\n              this.setStateSafe({\n                errorLoadingRemoteURL: true,\n                loadingRemoteURL: false\n              });\n\n            case 24:\n              _context.next = 30;\n              break;\n\n            case 26:\n              _context.prev = 26;\n              _context.t1 = _context[\"catch\"](8);\n              console.warn('react-native-render-html', \"Couldn't fetch remote HTML from uri : \" + uri);\n              return _context.abrupt(\"return\", false);\n\n            case 30:\n              _context.next = 33;\n              break;\n\n            case 32:\n              console.warn('react-native-render-html', 'Please provide the html or uri prop.');\n\n            case 33:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[8, 26], [9, 20]], Promise);\n    }\n  }, {\n    key: \"parseDOM\",\n    value: function parseDOM(dom) {\n      var _this2 = this;\n\n      var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.props;\n      var _this$props = this.props,\n          decodeEntities = _this$props.decodeEntities,\n          debug = _this$props.debug,\n          onParsed = _this$props.onParsed;\n      var parser = new _htmlparser.Parser(new _htmlparser.DomHandler(function (_err, dom) {\n        var RNElements = _this2.mapDOMNodesTORNElements(dom, false, props);\n\n        if (onParsed) {\n          var alteredRNElements = onParsed(dom, RNElements);\n\n          if (alteredRNElements) {\n            RNElements = alteredRNElements;\n          }\n        }\n\n        _this2.setStateSafe({\n          RNNodes: _this2.renderRNElements(RNElements, 'root', 0, props)\n        });\n\n        if (debug) {\n          console.log('DOMNodes from htmlparser2', dom);\n          console.log('RNElements from render-html', RNElements);\n        }\n      }), {\n        decodeEntities: decodeEntities\n      });\n      parser.write(dom);\n      parser.done();\n    }\n  }, {\n    key: \"generateDefaultStyles\",\n    value: function generateDefaultStyles() {\n      var baseFontStyle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.baseFontStyle;\n      this.defaultBlockStyles = (0, _HTMLDefaultStyles.generateDefaultBlockStyles)(baseFontStyle.fontSize || 14);\n      this.defaultTextStyles = (0, _HTMLDefaultStyles.generateDefaultTextStyles)(baseFontStyle.fontSize || 14);\n    }\n  }, {\n    key: \"childrenNeedAView\",\n    value: function childrenNeedAView(children) {\n      for (var i = 0; i < children.length; i++) {\n        if (children[i].wrapper === 'View') {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"wrapperHasTextChild\",\n    value: function wrapperHasTextChild(children) {\n      for (var i = 0; i < children.length; i++) {\n        if (children[i].wrapper === 'Text') {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"associateRawTexts\",\n    value: function associateRawTexts(children) {\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i];\n\n        if (child.wrapper === 'Text' && _HTMLUtils.TEXT_TAGS_IGNORING_ASSOCIATION.indexOf(child.tagName) === -1 && children.length > 1 && (!child.parent || _HTMLUtils.TEXT_TAGS_IGNORING_ASSOCIATION.indexOf(child.parent.name) === -1)) {\n          var wrappedTexts = [];\n\n          for (var j = i; j < children.length; j++) {\n            var nextSibling = children[j];\n\n            if (nextSibling.wrapper !== 'Text' || _HTMLUtils.TEXT_TAGS_IGNORING_ASSOCIATION.indexOf(nextSibling.tagName) !== -1) {\n              break;\n            }\n\n            wrappedTexts.push(nextSibling);\n            children[j] = false;\n          }\n\n          if (wrappedTexts.length) {\n            children[i] = {\n              attribs: {},\n              children: wrappedTexts,\n              nodeIndex: i,\n              parent: child.parent,\n              parentTag: child.parentTag,\n              tagName: 'textwrapper',\n              wrapper: 'Text'\n            };\n          }\n        }\n      }\n\n      return children.filter(function (parsedNode) {\n        return parsedNode !== false && parsedNode !== undefined;\n      });\n    }\n  }, {\n    key: \"mapDOMNodesTORNElements\",\n    value: function mapDOMNodesTORNElements(DOMNodes) {\n      var _this3 = this;\n\n      var parentTag = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var props = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.props;\n      var ignoreNodesFunction = props.ignoreNodesFunction,\n          ignoredTags = props.ignoredTags,\n          alterNode = props.alterNode,\n          alterData = props.alterData,\n          alterChildren = props.alterChildren,\n          tagsStyles = props.tagsStyles,\n          classesStyles = props.classesStyles;\n      var RNElements = DOMNodes.map(function (node, nodeIndex) {\n        var _node = node,\n            children = _node.children,\n            data = _node.data;\n\n        if (ignoreNodesFunction && ignoreNodesFunction(node, parentTag) === true) {\n          return false;\n        }\n\n        if (ignoredTags.map(function (tag) {\n          return tag.toLowerCase();\n        }).indexOf(node.name && node.name.toLowerCase()) !== -1) {\n          return false;\n        }\n\n        if (alterNode) {\n          var alteredNode = alterNode(node);\n          node = alteredNode || node;\n        }\n\n        var _node2 = node,\n            type = _node2.type,\n            attribs = _node2.attribs,\n            name = _node2.name,\n            parent = _node2.parent;\n\n        if (alterData && data) {\n          var alteredData = alterData(node);\n          data = alteredData || data;\n        }\n\n        if (alterChildren && children) {\n          var alteredChildren = alterChildren(node);\n          children = alteredChildren || children;\n        }\n\n        var strippedData = data && data.replace(/\\s/g, '');\n\n        if (type === 'text') {\n          if (!strippedData || !strippedData.length) {\n            return false;\n          }\n\n          if (node.parent && node.parent.name && _HTMLUtils.PREFORMATTED_TAGS.indexOf(node.parent.name) === -1) {\n            data = data.replace(/(\\r\\n|\\n|\\r)/gm, '');\n          }\n\n          return {\n            wrapper: 'Text',\n            data: data,\n            attribs: attribs || {},\n            parent: parent,\n            parentTag: parent && parent.name,\n            tagName: name || 'rawtext'\n          };\n        }\n\n        if (type === 'tag') {\n          if (children) {\n            children = _this3.associateRawTexts(_this3.mapDOMNodesTORNElements(children, name));\n          }\n\n          var wrapper = \"View\";\n\n          if (_this3.childrenNeedAView(children)) {\n            wrapper = \"View\";\n          } else if (_this3.renderers[name] && _this3.renderers[name].wrapper) {\n            wrapper = _this3.renderers[name].wrapper;\n          } else if (_HTMLUtils.BLOCK_TAGS.indexOf(name.toLowerCase()) !== -1) {\n            wrapper = \"View\";\n          } else if (_HTMLUtils.TEXT_TAGS.indexOf(name.toLowerCase()) !== -1 || _HTMLUtils.MIXED_TAGS.indexOf(name.toLowerCase()) !== -1) {\n            wrapper = \"Text\";\n          }\n\n          return {\n            wrapper: wrapper,\n            children: children,\n            attribs: attribs,\n            parent: parent,\n            tagName: name,\n            parentTag: parentTag\n          };\n        }\n      }).filter(function (parsedNode) {\n        return parsedNode !== false && parsedNode !== undefined;\n      }).map(function (parsedNode, nodeIndex) {\n        var wrapper = parsedNode.wrapper,\n            children = parsedNode.children,\n            attribs = parsedNode.attribs,\n            tagName = parsedNode.tagName;\n        var firstChild = children && children[0];\n\n        if (firstChild && children.length === 1) {\n          if ((attribs === firstChild.attribs || !firstChild.attribs) && firstChild.wrapper === wrapper && (tagName === firstChild.tagName || firstChild.tagName === 'rawtext')) {\n            return _objectSpread(_objectSpread({}, parsedNode), {}, {\n              attribs: _objectSpread(_objectSpread({}, attribs), firstChild.attribs),\n              data: firstChild.data,\n              children: [],\n              tagName: tagName,\n              nodeIndex: nodeIndex\n            });\n          }\n        }\n\n        return _objectSpread(_objectSpread({}, parsedNode), {}, {\n          nodeIndex: nodeIndex\n        });\n      }).map(function (parsedNode, nodeIndex) {\n        var wrapper = parsedNode.wrapper,\n            attribs = parsedNode.attribs,\n            tagName = parsedNode.tagName,\n            children = parsedNode.children;\n\n        if (wrapper === 'View' && attribs && _this3.wrapperHasTextChild(children)) {\n          var wrapperStyles = _objectSpread(_objectSpread(_objectSpread({}, tagsStyles[tagName] || {}), (0, _HTMLStyles._getElementClassStyles)(attribs, classesStyles)), (0, _HTMLStyles.cssStringToObject)(attribs.style || ''));\n\n          var textChildrenInheritedStyles = {};\n          Object.keys(wrapperStyles).forEach(function (styleKey) {\n            if (_HTMLUtils.TextOnlyPropTypes.indexOf(styleKey) !== -1) {\n              textChildrenInheritedStyles[styleKey] = wrapperStyles[styleKey];\n              delete wrapperStyles[styleKey];\n            }\n          });\n\n          if (Object.keys(textChildrenInheritedStyles).length === 0) {\n            return parsedNode;\n          }\n\n          parsedNode.attribs.style = (0, _HTMLStyles.cssObjectToString)(wrapperStyles);\n\n          for (var i = 0; i < children.length; i++) {\n            var child = children[i];\n            var _wrapper = child.wrapper,\n                _attribs = child.attribs;\n\n            if (_wrapper === 'Text') {\n              if (!_attribs.style) {\n                child.attribs.style = (0, _HTMLStyles.cssObjectToString)(textChildrenInheritedStyles);\n              } else {\n                child.attribs.style = (0, _HTMLStyles.cssObjectToString)(_objectSpread(_objectSpread({}, textChildrenInheritedStyles), (0, _HTMLStyles.cssStringToObject)(child.attribs.style)));\n              }\n            }\n          }\n        }\n\n        return parsedNode;\n      });\n      return this.associateRawTexts(RNElements);\n    }\n  }, {\n    key: \"renderRNElements\",\n    value: function renderRNElements(RNElements) {\n      var _this4 = this;\n\n      var parentWrapper = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'root';\n      var parentIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var props = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : this.props;\n      var allowFontScaling = props.allowFontScaling,\n          allowedStyles = props.allowedStyles,\n          baseFontStyle = props.baseFontStyle,\n          classesStyles = props.classesStyles,\n          emSize = props.emSize,\n          ignoredStyles = props.ignoredStyles,\n          ptSize = props.ptSize,\n          tagsStyles = props.tagsStyles,\n          textSelectable = props.textSelectable;\n      return RNElements && RNElements.length ? RNElements.map(function (element, index) {\n        var attribs = element.attribs,\n            data = element.data,\n            tagName = element.tagName,\n            parentTag = element.parentTag,\n            children = element.children,\n            nodeIndex = element.nodeIndex,\n            wrapper = element.wrapper;\n        var Wrapper = wrapper === 'Text' ? _reactNative.Text : _reactNative.View;\n        var key = wrapper + \"-\" + parentIndex + \"-\" + nodeIndex + \"-\" + tagName + \"-\" + index + \"-\" + parentTag;\n        var convertedCSSStyles = attribs && attribs.style ? (0, _HTMLStyles.cssStringToRNStyle)(attribs.style, Wrapper === _reactNative.Text ? _HTMLUtils.STYLESETS.TEXT : _HTMLUtils.STYLESETS.VIEW, {\n          parentTag: tagName,\n          emSize: emSize,\n          ptSize: ptSize,\n          ignoredStyles: ignoredStyles,\n          allowedStyles: allowedStyles\n        }) : {};\n        var childElements = children && children.length ? children.map(function (child, childIndex) {\n          return _this4.renderRNElements([child], wrapper, index, props);\n        }) : false;\n        var renderersProps = {};\n\n        if (Wrapper === _reactNative.Text) {\n          renderersProps.allowFontScaling = allowFontScaling;\n          renderersProps.selectable = _this4.props.textSelectable;\n        }\n\n        if (_this4.renderers[tagName]) {\n          var customRenderer = typeof _this4.renderers[tagName] === 'function' ? _this4.renderers[tagName] : _this4.renderers[tagName].renderer;\n\n          if (!customRenderer || typeof customRenderer !== 'function') {\n            console.warn(\"Custom renderer for \" + tagName + \" supplied incorrectly. Please check out the docs.\");\n            return undefined;\n          }\n\n          return customRenderer(attribs, childElements, convertedCSSStyles, _objectSpread(_objectSpread({}, props), {}, {\n            parentWrapper: wrapper,\n            parentTag: parentTag,\n            nodeIndex: nodeIndex,\n            parentIndex: parentIndex,\n            key: key,\n            data: data,\n            rawChildren: children\n          }, renderersProps));\n        }\n\n        var classStyles = (0, _HTMLStyles._getElementClassStyles)(attribs, classesStyles);\n        var textElement = data ? _react.default.createElement(_reactNative.Text, {\n          allowFontScaling: allowFontScaling,\n          style: (0, _HTMLStyles.computeTextStyles)(element, {\n            defaultTextStyles: _this4.defaultTextStyles,\n            tagsStyles: tagsStyles,\n            classesStyles: classesStyles,\n            baseFontStyle: baseFontStyle,\n            emSize: emSize,\n            ptSize: ptSize,\n            ignoredStyles: ignoredStyles,\n            allowedStyles: allowedStyles\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 17\n          }\n        }, data) : false;\n        var style = [!tagsStyles || !tagsStyles[tagName] ? (Wrapper === _reactNative.Text ? _this4.defaultTextStyles : _this4.defaultBlockStyles)[tagName] : undefined, tagsStyles ? tagsStyles[tagName] : undefined, classStyles, convertedCSSStyles].filter(function (s) {\n          return s !== undefined;\n        });\n        return _react.default.createElement(Wrapper, (0, _extends2.default)({\n          key: key,\n          style: style\n        }, renderersProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 17\n          }\n        }), textElement, childElements);\n      }) : false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          allowFontScaling = _this$props2.allowFontScaling,\n          customWrapper = _this$props2.customWrapper,\n          remoteLoadingView = _this$props2.remoteLoadingView,\n          remoteErrorView = _this$props2.remoteErrorView;\n      var _this$state = this.state,\n          RNNodes = _this$state.RNNodes,\n          loadingRemoteURL = _this$state.loadingRemoteURL,\n          errorLoadingRemoteURL = _this$state.errorLoadingRemoteURL;\n\n      if (!RNNodes && !loadingRemoteURL && !errorLoadingRemoteURL) {\n        return null;\n      } else if (loadingRemoteURL) {\n        return remoteLoadingView ? remoteLoadingView(this.props, this.state) : _react.default.createElement(_reactNative.View, {\n          style: {\n            flex: 1,\n            alignItems: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 21\n          }\n        }, _react.default.createElement(_reactNative.ActivityIndicator, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 25\n          }\n        }));\n      } else if (errorLoadingRemoteURL) {\n        return remoteErrorView ? remoteErrorView(this.props, this.state) : _react.default.createElement(_reactNative.View, {\n          style: {\n            flex: 1,\n            alignItems: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 21\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          allowFontScaling: allowFontScaling,\n          style: {\n            fontStyle: 'italic',\n            fontSize: 16\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 25\n          }\n        }, \"Could not load \", this.props.uri));\n      }\n\n      return customWrapper ? customWrapper(RNNodes) : _react.default.createElement(_reactNative.View, {\n        style: this.props.containerStyle || {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 13\n        }\n      }, RNNodes);\n    }\n  }]);\n  return HTML;\n}(_react.PureComponent);\n\nexports.default = HTML;\nHTML.propTypes = {\n  renderers: _propTypes.default.object.isRequired,\n  ignoredTags: _propTypes.default.array.isRequired,\n  ignoredStyles: _propTypes.default.array.isRequired,\n  allowedStyles: _propTypes.default.array,\n  decodeEntities: _propTypes.default.bool.isRequired,\n  debug: _propTypes.default.bool.isRequired,\n  listsPrefixesRenderers: _propTypes.default.object,\n  ignoreNodesFunction: _propTypes.default.func,\n  alterData: _propTypes.default.func,\n  alterChildren: _propTypes.default.func,\n  alterNode: _propTypes.default.func,\n  html: _propTypes.default.string,\n  uri: _propTypes.default.string,\n  tagsStyles: _propTypes.default.object,\n  classesStyles: _propTypes.default.object,\n  containerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  customWrapper: _propTypes.default.func,\n  onLinkPress: _propTypes.default.func,\n  onParsed: _propTypes.default.func,\n  imagesMaxWidth: _propTypes.default.number,\n  staticContentMaxWidth: _propTypes.default.number,\n  imagesInitialDimensions: _propTypes.default.shape({\n    width: _propTypes.default.number,\n    height: _propTypes.default.number\n  }),\n  emSize: _propTypes.default.number.isRequired,\n  ptSize: _propTypes.default.number.isRequired,\n  baseFontStyle: _propTypes.default.object.isRequired,\n  textSelectable: _propTypes.default.bool,\n  renderersProps: _propTypes.default.object,\n  allowFontScaling: _propTypes.default.bool\n};\nHTML.defaultProps = {\n  renderers: HTMLRenderers,\n  debug: false,\n  decodeEntities: true,\n  emSize: 14,\n  ptSize: 1.3,\n  staticContentMaxWidth: _reactNative.Dimensions.get('window').width,\n  imagesMaxWidth: _reactNative.Dimensions.get('window').width,\n  ignoredTags: _HTMLUtils.IGNORED_TAGS,\n  ignoredStyles: [],\n  baseFontStyle: {\n    fontSize: 14\n  },\n  tagsStyles: {},\n  classesStyles: {},\n  textSelectable: false,\n  allowFontScaling: true\n};","map":{"version":3,"sources":["C:/Users/mysiew/Documents/eCommerce/codecanyon-xPJMYS8x-react-native-delivery-solution-with-advance-website-and-cms/SourceCode/vesend-consumer-app-master/node_modules/react-native-render-html/src/HTML.js"],"names":["HTML","props","state","renderers","HTMLRenderers","mounted","generateDefaultStyles","baseFontStyle","setState","registerDOM","prevProps","prevState","html","uri","tagsStyles","classesStyles","doParseDOM","parseDOM","dom","cb","setStateSafe","loadingRemoteURL","errorLoadingRemoteURL","fetch","response","text","console","warn","decodeEntities","debug","onParsed","parser","Parser","DomHandler","_err","RNElements","mapDOMNodesTORNElements","alteredRNElements","RNNodes","renderRNElements","log","write","done","defaultBlockStyles","fontSize","defaultTextStyles","children","i","length","wrapper","child","TEXT_TAGS_IGNORING_ASSOCIATION","indexOf","tagName","parent","name","wrappedTexts","j","nextSibling","push","attribs","nodeIndex","parentTag","filter","parsedNode","undefined","DOMNodes","ignoreNodesFunction","ignoredTags","alterNode","alterData","alterChildren","map","node","data","tag","toLowerCase","alteredNode","type","alteredData","alteredChildren","strippedData","replace","PREFORMATTED_TAGS","associateRawTexts","childrenNeedAView","BLOCK_TAGS","TEXT_TAGS","MIXED_TAGS","firstChild","wrapperHasTextChild","wrapperStyles","style","textChildrenInheritedStyles","Object","keys","forEach","styleKey","TextOnlyPropTypes","parentWrapper","parentIndex","allowFontScaling","allowedStyles","emSize","ignoredStyles","ptSize","textSelectable","element","index","Wrapper","Text","View","key","convertedCSSStyles","STYLESETS","TEXT","VIEW","childElements","childIndex","renderersProps","selectable","customRenderer","renderer","rawChildren","classStyles","textElement","s","customWrapper","remoteLoadingView","remoteErrorView","flex","alignItems","fontStyle","containerStyle","PureComponent","propTypes","PropTypes","object","isRequired","array","bool","listsPrefixesRenderers","func","string","oneOfType","onLinkPress","imagesMaxWidth","number","staticContentMaxWidth","imagesInitialDimensions","shape","width","height","defaultProps","Dimensions","get","IGNORED_TAGS"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { View, Text, ActivityIndicator, Dimensions } from 'react-native';\nimport { cssStringToRNStyle, _getElementClassStyles, cssStringToObject, cssObjectToString, computeTextStyles } from './HTMLStyles';\nimport {\n    BLOCK_TAGS,\n    TEXT_TAGS,\n    MIXED_TAGS,\n    IGNORED_TAGS,\n    TEXT_TAGS_IGNORING_ASSOCIATION,\n    STYLESETS,\n    TextOnlyPropTypes,\n    PREFORMATTED_TAGS\n} from './HTMLUtils';\nimport { generateDefaultBlockStyles, generateDefaultTextStyles } from './HTMLDefaultStyles';\nimport { DomHandler, Parser } from 'htmlparser2';\nimport * as HTMLRenderers from './HTMLRenderers';\n\nexport default class HTML extends PureComponent {\n    static propTypes = {\n        renderers: PropTypes.object.isRequired,\n        ignoredTags: PropTypes.array.isRequired,\n        ignoredStyles: PropTypes.array.isRequired,\n        allowedStyles: PropTypes.array,\n        decodeEntities: PropTypes.bool.isRequired,\n        debug: PropTypes.bool.isRequired,\n        listsPrefixesRenderers: PropTypes.object,\n        ignoreNodesFunction: PropTypes.func,\n        alterData: PropTypes.func,\n        alterChildren: PropTypes.func,\n        alterNode: PropTypes.func,\n        html: PropTypes.string,\n        uri: PropTypes.string,\n        tagsStyles: PropTypes.object,\n        classesStyles: PropTypes.object,\n        containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n        customWrapper: PropTypes.func,\n        onLinkPress: PropTypes.func,\n        onParsed: PropTypes.func,\n        imagesMaxWidth: PropTypes.number,\n        staticContentMaxWidth: PropTypes.number,\n        imagesInitialDimensions: PropTypes.shape({\n            width: PropTypes.number,\n            height: PropTypes.number\n        }),\n        emSize: PropTypes.number.isRequired,\n        ptSize: PropTypes.number.isRequired,\n        baseFontStyle: PropTypes.object.isRequired,\n        textSelectable: PropTypes.bool,\n        renderersProps: PropTypes.object,\n        allowFontScaling: PropTypes.bool\n    }\n\n    static defaultProps = {\n        renderers: HTMLRenderers,\n        debug: false,\n        decodeEntities: true,\n        emSize: 14,\n        ptSize: 1.3,\n        staticContentMaxWidth: Dimensions.get('window').width,\n        imagesMaxWidth: Dimensions.get('window').width,\n        ignoredTags: IGNORED_TAGS,\n        ignoredStyles: [],\n        baseFontStyle: { fontSize: 14 },\n        tagsStyles: {},\n        classesStyles: {},\n        textSelectable: false,\n        allowFontScaling: true\n    }\n\n    constructor (props) {\n        super(props);\n        this.state = {};\n        this.renderers = {\n            ...HTMLRenderers,\n            ...(this.props.renderers || {})\n        };\n        this.mounted = false;\n        this.generateDefaultStyles(props.baseFontStyle);\n    }\n\n    setStateSafe(...args) {\n        this.mounted && this.setState(...args);\n    }\n\n    componentDidMount () {\n        this.mounted = true;\n        this.registerDOM();\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { html, uri, renderers, tagsStyles, classesStyles, baseFontStyle } = prevProps;\n        let doParseDOM = false;\n\n        this.generateDefaultStyles(this.props.baseFontStyle);\n        if (renderers !== this.props.renderers) {\n            this.renderers = { ...HTMLRenderers, ...(this.props.renderers || {}) };\n        }\n        if (html !== this.props.html || uri !== this.props.uri) {\n            // If the source changed, register the new HTML and parse it\n            this.registerDOM(this.props);\n        }\n        if (tagsStyles !== this.props.tagsStyles || classesStyles !== this.props.classesStyles || baseFontStyle !== this.props.baseFontStyle) {\n            // If the tagsStyles changed, render again\n            this.parseDOM(this.state.dom, this.props);\n        }\n        if (this.state.dom !== prevState.dom) {\n            this.parseDOM(this.state.dom, this.props);\n        }\n    }\n\n    async registerDOM (props = this.props, cb) {\n        const { html, uri } = props;\n        if (html) {\n            this.setStateSafe({ dom: html, loadingRemoteURL: false, errorLoadingRemoteURL: false });\n        } else if (props.uri) {\n            try {\n                // WIP : This should render a loader and html prop should not be set in state\n                // Error handling would be nice, too.\n                try {\n                    this.setStateSafe({ loadingRemoteURL: true, errorLoadingRemoteURL: false });\n                    const response = await fetch(uri);\n                    const dom = await response.text();\n                    this.setStateSafe({ dom, loadingRemoteURL: false });\n                } catch (err) {\n                    console.warn(err);\n                    this.setStateSafe({ errorLoadingRemoteURL: true, loadingRemoteURL: false });\n                }\n            } catch (err) {\n                console.warn('react-native-render-html', `Couldn't fetch remote HTML from uri : ${uri}`);\n                return false;\n            }\n        } else {\n            console.warn('react-native-render-html', 'Please provide the html or uri prop.');\n        }\n    }\n\n    parseDOM (dom, props = this.props) {\n        const { decodeEntities, debug, onParsed } = this.props;\n        const parser = new Parser(\n            new DomHandler((_err, dom) => {\n                let RNElements = this.mapDOMNodesTORNElements(dom, false, props);\n                if (onParsed) {\n                    const alteredRNElements = onParsed(dom, RNElements);\n                    if (alteredRNElements) {\n                        RNElements = alteredRNElements;\n                    }\n                }\n                this.setStateSafe({ RNNodes: this.renderRNElements(RNElements, 'root', 0, props) });\n                if (debug) {\n                    console.log('DOMNodes from htmlparser2', dom);\n                    console.log('RNElements from render-html', RNElements);\n                }\n            }),\n            { decodeEntities: decodeEntities }\n        );\n        parser.write(dom);\n        parser.done();\n    }\n\n    generateDefaultStyles (baseFontStyle = this.props.baseFontStyle) {\n        this.defaultBlockStyles = generateDefaultBlockStyles(baseFontStyle.fontSize || 14);\n        this.defaultTextStyles = generateDefaultTextStyles(baseFontStyle.fontSize || 14);\n    }\n\n    /**\n     * Loop on children and return whether if their parent needs to be a <View>\n     * @param {any} children\n     * @returns {boolean}\n     * @memberof HTML\n     */\n    childrenNeedAView (children) {\n        for (let i = 0; i < children.length; i++) {\n            if (children[i].wrapper === 'View') {\n                // If we find at least one View, it has to be nested in one\n                return true;\n            }\n        }\n        // We didn't find a single view, it can be wrapped in a Text\n        return false;\n    }\n\n    wrapperHasTextChild (children) {\n        for (let i = 0; i < children.length; i++) {\n            if (children[i].wrapper === 'Text') {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Loops on children an find texts that need to be wrapped so we don't render line breaks\n     * The wrapper can either be a <p> when it should be a paragraph, or a custom tag named\n     * \"textwrapper\", which renders a plain <Text> component.\n     * @param {any} children\n     * @returns {array}\n     * @memberof HTML\n     */\n    associateRawTexts (children) {\n        for (let i = 0; i < children.length; i++) {\n            const child = children[i];\n            if (\n                (child.wrapper === 'Text' && TEXT_TAGS_IGNORING_ASSOCIATION.indexOf(child.tagName) === -1) &&\n                children.length > 1 &&\n                (!child.parent || TEXT_TAGS_IGNORING_ASSOCIATION.indexOf(child.parent.name) === -1)\n            ) {\n                // Texts outside <p> or not <p> themselves (with siblings)\n                let wrappedTexts = [];\n                for (let j = i; j < children.length; j++) {\n                    // Loop on its next siblings and store them in an array\n                    // until we encounter a block or a <p>\n                    let nextSibling = children[j];\n                    if (nextSibling.wrapper !== 'Text' || TEXT_TAGS_IGNORING_ASSOCIATION.indexOf(nextSibling.tagName) !== -1) {\n                        break;\n                    }\n                    wrappedTexts.push(nextSibling);\n                    // Remove the child that has been nested\n                    children[j] = false;\n                }\n                // Replace the raw text with a <p> that has wrappedTexts as its children\n                if (wrappedTexts.length) {\n                    children[i] = {\n                        attribs: {},\n                        children: wrappedTexts,\n                        nodeIndex: i,\n                        parent: child.parent,\n                        parentTag: child.parentTag,\n                        tagName: 'textwrapper',\n                        wrapper: 'Text'\n                    };\n                }\n            }\n        }\n        return children.filter((parsedNode) => parsedNode !== false && parsedNode !== undefined);\n    }\n\n    /**\n     * Maps the DOM nodes parsed by htmlparser2 into a simple structure that will be easy to render with\n     * native components. It removes ignored tags, chooses the right wrapper for each set of children\n     * to ensure we're not wrapping views inside texts and improves the structure recursively\n     * to prevent erratic rendering.\n     * @param {array} DOMNodes\n     * @param {boolean} [parentTag=false]\n     * @returns\n     * @memberof HTML\n     */\n    mapDOMNodesTORNElements (DOMNodes, parentTag = false, props = this.props) {\n        const { ignoreNodesFunction, ignoredTags, alterNode, alterData, alterChildren, tagsStyles, classesStyles } = props;\n        let RNElements = DOMNodes.map((node, nodeIndex) => {\n            let { children, data } = node;\n            if (ignoreNodesFunction && ignoreNodesFunction(node, parentTag) === true) {\n                return false;\n            }\n            if (ignoredTags.map((tag) => tag.toLowerCase()).indexOf(node.name && node.name.toLowerCase()) !== -1) {\n                return false;\n            }\n\n            if (alterNode) {\n                const alteredNode = alterNode(node);\n                node = alteredNode || node;\n            }\n            const { type, attribs, name, parent } = node;\n\n            if (alterData && data) {\n                const alteredData = alterData(node);\n                data = alteredData || data;\n            }\n            if (alterChildren && children) {\n                const alteredChildren = alterChildren(node);\n                children = alteredChildren || children;\n            }\n            // Remove whitespaces to check if it's just a blank text\n            const strippedData = data && data.replace(/\\s/g, '');\n            if (type === 'text') {\n                if (!strippedData || !strippedData.length) {\n                    // This is blank, don't render an useless additional component\n                    return false;\n                }\n\n                if (\n                    node.parent &&\n                    node.parent.name &&\n                    PREFORMATTED_TAGS.indexOf(node.parent.name) === -1\n                ) {\n                    // Remove line breaks in non-pre-formatted tags\n                    data = data.replace(/(\\r\\n|\\n|\\r)/gm, '');\n                }\n\n                // Text without tags, these can be mapped to the Text wrapper\n                return {\n                    wrapper: 'Text',\n                    data: data,\n                    attribs: attribs || {},\n                    parent,\n                    parentTag: parent && parent.name,\n                    tagName: name || 'rawtext'\n                };\n            }\n            if (type === 'tag') {\n                if (children) {\n                    // Recursively map all children with this method\n                    children = this.associateRawTexts(this.mapDOMNodesTORNElements(children, name));\n                }\n                let wrapper = \"View\";\n                if (this.childrenNeedAView(children)) {\n                    wrapper = \"View\";\n                } else if (this.renderers[name] && this.renderers[name].wrapper) {\n                    wrapper = this.renderers[name].wrapper;\n                } else if (BLOCK_TAGS.indexOf(name.toLowerCase()) !== -1) {\n                    wrapper = \"View\";\n                } else if (TEXT_TAGS.indexOf(name.toLowerCase()) !== -1 || MIXED_TAGS.indexOf(name.toLowerCase()) !== -1) {\n                    wrapper = \"Text\";\n                }\n                return { wrapper, children, attribs, parent, tagName: name, parentTag };\n            }\n        })\n        .filter((parsedNode) => parsedNode !== false && parsedNode !== undefined) // remove useless nodes\n        .map((parsedNode, nodeIndex) => {\n            const { wrapper, children, attribs, tagName } = parsedNode;\n            const firstChild = children && children[0];\n            if (firstChild && children.length === 1) {\n                // Specific tweaks for wrappers with a single child\n                if ((attribs === firstChild.attribs || !firstChild.attribs) &&\n                    firstChild.wrapper === wrapper &&\n                    (tagName === firstChild.tagName || firstChild.tagName === 'rawtext')) {\n                    // If the only child of a node is using the same wrapper, merge them into one\n                    return {\n                        ...parsedNode,\n                        attribs: { ...attribs, ...firstChild.attribs },\n                        data: firstChild.data,\n                        children: [],\n                        tagName,\n                        nodeIndex\n                    };\n                }\n            }\n            return { ...parsedNode, nodeIndex };\n        })\n        .map((parsedNode, nodeIndex) => {\n            const { wrapper, attribs, tagName, children } = parsedNode;\n            if (wrapper === 'View' && attribs && this.wrapperHasTextChild(children)) {\n                // When encountering a View wrapper that has some styles and also Text children,\n                // let's filter out text-only styles and apply those to *all* Text children and\n                // remove them from the wrapper, mimicking browsers' behaviour better.\n                const wrapperStyles = {\n                    ...(tagsStyles[tagName] || {}),\n                    ...(_getElementClassStyles(attribs, classesStyles)),\n                    ...cssStringToObject(attribs.style || '')\n                };\n\n                let textChildrenInheritedStyles = {};\n                Object.keys(wrapperStyles).forEach((styleKey) => {\n                    // Extract text-only styles\n                    if (TextOnlyPropTypes.indexOf(styleKey) !== -1) {\n                        textChildrenInheritedStyles[styleKey] = wrapperStyles[styleKey];\n                        delete wrapperStyles[styleKey];\n                    }\n                });\n                if (Object.keys(textChildrenInheritedStyles).length === 0) {\n                    // No style to apply to text children, avoid unecessary loops\n                    return parsedNode;\n                }\n                // Re-write wrapper's styles as a string\n                parsedNode.attribs.style = cssObjectToString(wrapperStyles);\n                for (let i = 0; i < children.length; i++) {\n                    const child = children[i];\n                    const { wrapper, attribs } = child;\n\n                    if (wrapper === 'Text') {\n                        // Set (or merge) the inherited text styles extracted from the wrapper for\n                        // each Text child\n                        if (!attribs.style) {\n                            child.attribs.style = cssObjectToString(textChildrenInheritedStyles);\n                        } else {\n                            child.attribs.style = cssObjectToString({\n                                ...textChildrenInheritedStyles,\n                                ...cssStringToObject(child.attribs.style)\n                            });\n                        }\n                    }\n                }\n            }\n            return parsedNode;\n        });\n        return this.associateRawTexts(RNElements);\n    }\n\n    /**\n     * Takes the parsed nodes from mapDOMNodesTORNElements and actually renders native components.\n     * Calls the utils that convert the CSS into react-native compatible styles and renders custom\n     * components when needed.\n     * @param {boolean} RNElements\n     * @param {string} [parentWrapper='root']\n     * @param {number} [parentIndex=0]\n     * @returns {array}\n     * @memberof HTML\n     */\n    renderRNElements (RNElements, parentWrapper = 'root', parentIndex = 0, props = this.props) {\n        const {\n            allowFontScaling,\n            allowedStyles,\n            baseFontStyle,\n            classesStyles,\n            emSize,\n            ignoredStyles,\n            ptSize,\n            tagsStyles,\n            textSelectable\n        } = props;\n\n        return RNElements && RNElements.length ? RNElements.map((element, index) => {\n            const { attribs, data, tagName, parentTag, children, nodeIndex, wrapper } = element;\n            const Wrapper = wrapper === 'Text' ? Text : View;\n            const key = `${wrapper}-${parentIndex}-${nodeIndex}-${tagName}-${index}-${parentTag}`;\n            const convertedCSSStyles =\n                attribs && attribs.style ?\n                    cssStringToRNStyle(\n                        attribs.style,\n                        Wrapper === Text ? STYLESETS.TEXT : STYLESETS.VIEW, // proper prop-types validation\n                        { parentTag: tagName, emSize, ptSize, ignoredStyles, allowedStyles }\n                    ) :\n                    {};\n\n            const childElements = children && children.length ?\n                children.map((child, childIndex) => this.renderRNElements([child], wrapper, index, props)) :\n                false;\n\n            const renderersProps = {};\n            if (Wrapper === Text) {\n                renderersProps.allowFontScaling = allowFontScaling;\n                renderersProps.selectable = this.props.textSelectable;\n            }\n\n            if (this.renderers[tagName]) {\n                const customRenderer =\n                    typeof this.renderers[tagName] === 'function' ?\n                        this.renderers[tagName] :\n                        this.renderers[tagName].renderer;\n\n                if (!customRenderer || typeof customRenderer !== 'function') {\n                    console.warn(`Custom renderer for ${tagName} supplied incorrectly. Please check out the docs.`);\n                    return undefined;\n                }\n                // If a custom renderer is available for this tag\n                return customRenderer(\n                    attribs,\n                    childElements,\n                    convertedCSSStyles,\n                    {\n                        ...props,\n                        parentWrapper: wrapper,\n                        parentTag,\n                        nodeIndex,\n                        parentIndex,\n                        key,\n                        data,\n                        rawChildren: children,\n                        ...renderersProps\n                    });\n            }\n\n            const classStyles = _getElementClassStyles(attribs, classesStyles);\n            const textElement = data ?\n                <Text\n                  allowFontScaling={allowFontScaling}\n                  style={computeTextStyles(\n                      element,\n                      {\n                          defaultTextStyles: this.defaultTextStyles,\n                          tagsStyles,\n                          classesStyles,\n                          baseFontStyle,\n                          emSize,\n                          ptSize,\n                          ignoredStyles,\n                          allowedStyles\n                      })}\n                >\n                    { data }\n                </Text> :\n                false;\n\n            const style = [\n                (!tagsStyles || !tagsStyles[tagName]) ? (Wrapper === Text ? this.defaultTextStyles : this.defaultBlockStyles)[tagName] : undefined,\n                tagsStyles ? tagsStyles[tagName] : undefined,\n                classStyles,\n                convertedCSSStyles\n            ]\n            .filter((s) => s !== undefined);\n\n            return (\n                <Wrapper key={key} style={style} {...renderersProps}>\n                    { textElement }\n                    { childElements }\n                </Wrapper>\n            );\n        }) : false;\n    }\n\n    render () {\n        const { allowFontScaling, customWrapper, remoteLoadingView, remoteErrorView } = this.props;\n        const { RNNodes, loadingRemoteURL, errorLoadingRemoteURL } = this.state;\n        if (!RNNodes && !loadingRemoteURL && !errorLoadingRemoteURL) {\n            return null;\n        } else if (loadingRemoteURL) {\n            return remoteLoadingView ?\n                remoteLoadingView(this.props, this.state) :\n                (\n                    <View style={{ flex: 1, alignItems: 'center' }}>\n                        <ActivityIndicator />\n                    </View>\n                );\n        } else if (errorLoadingRemoteURL) {\n            return remoteErrorView ?\n                remoteErrorView(this.props, this.state) :\n                (\n                    <View style={{ flex: 1, alignItems: 'center' }}>\n                        <Text allowFontScaling={allowFontScaling} style={{ fontStyle: 'italic', fontSize: 16 }}>Could not load { this.props.uri }</Text>\n                    </View>\n                );\n        }\n\n        return customWrapper ? customWrapper(RNNodes) : (\n            <View style={this.props.containerStyle || {}}>\n                { RNNodes }\n            </View>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"script"}