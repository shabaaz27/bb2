{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeIndicators = require(\"react-native-indicators\");\n\nvar _reactNavigation = require(\"react-navigation\");\n\nvar _reactNativeLoadingSpinnerOverlay = _interopRequireDefault(require(\"react-native-loading-spinner-overlay\"));\n\nvar _nativeBase = require(\"native-base\");\n\nvar _reactNavigationStack = require(\"react-navigation-stack\");\n\nvar _WooComFetch = _interopRequireWildcard(require(\"../common/WooComFetch\"));\n\nvar _FontAwesome = _interopRequireDefault(require(\"react-native-vector-icons/FontAwesome\"));\n\nvar global = _interopRequireWildcard(require(\"../common/LocationData\"));\n\nvar _syncStorage = _interopRequireDefault(require(\"sync-storage\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _Theme = _interopRequireDefault(require(\"../common/Theme.style\"));\n\nvar _ShoppingCartIcon = _interopRequireDefault(require(\"../common/ShoppingCartIcon\"));\n\nvar _reactNativeResponsiveScreen = require(\"react-native-responsive-screen\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\mysiew\\\\Documents\\\\eCommerce\\\\codecanyon-xPJMYS8x-react-native-delivery-solution-with-advance-website-and-cms\\\\SourceCode\\\\vesend-consumer-app-master\\\\src\\\\screens\\\\AdressesScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WIDTH = _reactNative.Dimensions.get('window').width;\n\nvar ShippingAddress = function (_PureComponent) {\n  (0, _inherits2.default)(ShippingAddress, _PureComponent);\n\n  var _super = _createSuper(ShippingAddress);\n\n  (0, _createClass2.default)(ShippingAddress, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.navigation.setParams({\n        headerTitle: this.props.isLoading.Config.languageJson2.Address\n      });\n      this.getAllAddress();\n    }\n  }]);\n\n  function ShippingAddress(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, ShippingAddress);\n    _this = _super.call(this, props);\n\n    _this.getAllAddress = function _callee() {\n      var dat, data;\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dat = {\n                customers_id: _syncStorage.default.get('customerData').customers_id\n              };\n              _context.next = 3;\n              return _regenerator.default.awrap(_WooComFetch.default.postHttp((0, _WooComFetch.getUrl)() + '/api/' + 'getalladdress', dat));\n\n            case 3:\n              data = _context.sent;\n\n              if (data.success == 1) {\n                _this.setState({\n                  allShippingAddress: data.data.data,\n                  isLoading: false,\n                  spinnerTemp: false\n                });\n              } else {\n                _this.setState({\n                  allShippingAddress: [],\n                  isLoading: false,\n                  spinnerTemp: false\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.defaultAddress = function _callee2(id) {\n      var dat, data;\n      return _regenerator.default.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dat = {\n                customers_id: _syncStorage.default.get('customerData').customers_id,\n                address_book_id: id\n              };\n              _context2.next = 3;\n              return _regenerator.default.awrap(_WooComFetch.default.postHttp((0, _WooComFetch.getUrl)() + '/api/' + 'updatedefaultaddress', dat));\n\n            case 3:\n              data = _context2.sent;\n\n              if (data.success == 1) {\n                _this.getAllAddress();\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.refresh = function (name, selectedValue) {\n      var tempC = _syncStorage.default.get('customerData');\n\n      if (selectedValue === 'shipping') {\n        _this.state.shippingArray[5] = name;\n        _this.state.shippingArray[6] = '';\n        _this.state.shippingArray[7] = '';\n        _this.state.shippingArray[8] = '';\n        tempC.shipping.Country = name;\n\n        _syncStorage.default.set('customerData', tempC);\n\n        _this.setState({\n          shippingCountry: name,\n          shippingArray: _this.state.shippingArray\n        });\n      } else if (selectedValue === 'billing') {\n        _this.state.billingArray[5] = name;\n        _this.state.billingArray[6] = '';\n        _this.state.billingArray[7] = '';\n        _this.state.billingArray[8] = '';\n        tempC.billing.Country = name;\n\n        _syncStorage.default.set('customerData', tempC);\n\n        _this.setState({\n          billingCountry: name,\n          billingArray: _this.state.billingArray\n        });\n      }\n\n      if (selectedValue === 'shippingState') {\n        _this.state.shippingArray[6] = name;\n        tempC.shipping.State = name;\n\n        _syncStorage.default.set('customerData', tempC);\n\n        _this.setState({\n          shippingState: name,\n          shippingArray: _this.state.shippingArray\n        });\n      } else if (selectedValue === 'billingState') {\n        _this.state.billingArray[6] = name;\n        tempC.billing.State = name;\n\n        _syncStorage.default.set('customerData', tempC);\n\n        _this.setState({\n          billingState: name,\n          billingArray: _this.state.billingArray\n        });\n      }\n\n      _this.setState({});\n    };\n\n    _this.openEditShippingPage = function (data, temp) {\n      _this.props.navigation.navigate('AddressEdit', {\n        data: data,\n        type: temp,\n        updateCart: function updateCart() {\n          return _this.setState({});\n        }\n      });\n    };\n\n    _this.state = {\n      isLoading: true,\n      allShippingAddress: [],\n      spinnerTemp: false,\n      visible: false,\n      shippingArray: [],\n      placeholderArray: [_this.props.isLoading.Config.languageJson2['First Name'], _this.props.isLoading.Config.languageJson2['Last Name'], _this.props.isLoading.Config.languageJson2.Compnay, _this.props.isLoading.Config.languageJson2.Address + \" 1\", _this.props.isLoading.Config.languageJson2.Address + \" 2\", _this.props.isLoading.Config.languageJson2.Country, _this.props.isLoading.Config.languageJson2.Zone, _this.props.isLoading.Config.languageJson2.City, _this.props.isLoading.Config.languageJson2['Post code']],\n      otherArray: [{\n        value: 'other',\n        name: 'other'\n      }]\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(ShippingAddress, [{\n    key: \"searchFilterFun\",\n    value: function searchFilterFun(text, name, selection) {\n      var _this2 = this;\n\n      return _react.default.createElement(_reactNative.TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('SearchFilterClass', {\n            data: text,\n            onSelectionBase: selection,\n            onGoBack: function onGoBack(name, selectedValue) {\n              return _this2.refresh(name, selectedValue);\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: {\n          marginRight: 20,\n          marginLeft: 20,\n          marginTop: 20,\n          paddingTop: 10,\n          paddingBottom: 10,\n          paddingLeft: 4,\n          width: (0, _reactNativeResponsiveScreen.widthPercentageToDP)('90%'),\n          borderRadius: 1,\n          borderWidth: 1,\n          borderColor: '#c0c0c0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_nativeBase.Text, {\n        style: {\n          color: name === 'Country' || name === 'State' ? '#c0c0c0' : _Theme.default.textColor,\n          fontSize: _Theme.default.mediumSize,\n          paddingRight: 6,\n          writingDirection: _reactNative.I18nManager.isRTL ? 'rtl' : 'ltr',\n          textAlign: 'justify'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }\n      }, name)));\n    }\n  }, {\n    key: \"customTextView\",\n    value: function customTextView(placeholderText, index) {\n      var _this3 = this;\n\n      return placeholderText === this.props.isLoading.Config.languageJson2.Country ? _react.default.createElement(_reactNative.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 9\n        }\n      }, this.searchFilterFun(global.data.countries, this.state.shippingCountry === '' ? placeholderText : this.state.shippingCountry, 'shipping')) : placeholderText === this.props.isLoading.Config.languageJson2.Zone ? _react.default.createElement(_reactNative.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }\n      }) : _react.default.createElement(_reactNative.TouchableOpacity, {\n        activeOpacity: 1,\n        onPress: function onPress() {\n          return _this3.shippingInput[index].focus();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.TextInput, {\n        style: {\n          marginTop: 20,\n          height: 38,\n          width: (0, _reactNativeResponsiveScreen.widthPercentageToDP)('90%'),\n          borderColor: '#c1c1c1',\n          borderWidth: 1,\n          marginLeft: 20,\n          fontSize: _Theme.default.mediumSize,\n          textAlign: _reactNative.I18nManager.isRTL ? 'right' : 'left',\n          paddingLeft: 6,\n          paddingRight: 6,\n          color: _Theme.default.textColor\n        },\n        selectionColor: \"#51688F\",\n        placeholderTextColor: '#c1c1c1',\n        placeholder: \" \" + placeholderText,\n        onChangeText: function onChangeText(text) {\n          _this3.state.shippingArray[index] = text;\n\n          _this3.setState({\n            shippingArray: _this3.state.shippingArray\n          });\n        },\n        value: this.state.shippingArray[index],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return this.state.isLoading ? _react.default.createElement(_reactNative.View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          backgroundColor: _Theme.default.backgroundColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNativeIndicators.UIActivityIndicator, {\n        size: 27,\n        color: _Theme.default.loadingIndicatorColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 9\n        }\n      })) : _react.default.createElement(_nativeBase.Container, {\n        style: {\n          backgroundColor: _Theme.default.backgroundColor,\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNativeLoadingSpinnerOverlay.default, {\n        visible: this.state.spinnerTemp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }\n      }), _react.default.createElement(_reactNavigation.NavigationEvents, {\n        onDidFocus: function onDidFocus() {\n          _this4.setState({\n            spinnerTemp: true\n          }, function () {\n            _this4.getAllAddress();\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }\n      }), this.state.allShippingAddress.length === 0 && this.state.spinnerTemp === false ? _react.default.createElement(_nativeBase.Text, {\n        style: {\n          padding: 19,\n          justifyContent: 'center',\n          alignItems: 'center',\n          paddingBottom: 2,\n          color: _Theme.default.textColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 15\n        }\n      }, this.props.isLoading.Config.languageJson2['Please add your new shipping address for the futher processing of the your order']) : null, _react.default.createElement(_reactNative.FlatList, {\n        data: this.state.allShippingAddress,\n        horizontal: false,\n        extraData: this.state,\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        renderItem: function renderItem(item) {\n          return _react.default.createElement(_reactNative.View, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }\n          }, _react.default.createElement(_nativeBase.ListItem, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }\n          }, _react.default.createElement(_reactNative.TouchableOpacity, {\n            style: {\n              flexDirection: 'row',\n              alignItems: 'center'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 19\n            }\n          }, _react.default.createElement(_reactNative.TouchableOpacity, {\n            onPress: function onPress() {\n              return _this4.openEditShippingPage(item.item, 'update');\n            },\n            style: {\n              padding: 5\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 21\n            }\n          }, _react.default.createElement(_FontAwesome.default, {\n            name: 'pencil',\n            style: {\n              color: '#4d4d4d',\n              fontSize: 20\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 23\n            }\n          })), _react.default.createElement(_nativeBase.Body, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 21\n            }\n          }, _react.default.createElement(_nativeBase.Text, {\n            style: {\n              fontSize: _Theme.default.mediumSize + 1,\n              width: WIDTH * 0.7,\n              paddingLeft: 20,\n              color: _Theme.default.textColor\n            },\n            numberOfLines: 1,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 23\n            }\n          }, item.item.street + ', ' + item.item.city + ' ' + item.item.postcode + ', ' + item.item.country_name)), _react.default.createElement(_nativeBase.CheckBox, {\n            onPress: function onPress() {\n              return _this4.setState({\n                spinnerTemp: true\n              }, function () {\n                return _this4.defaultAddress(item.item.address_id);\n              });\n            },\n            checked: item.item.default_address === 1,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 21\n            }\n          }))));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }\n      }), _react.default.createElement(_reactNative.TouchableOpacity, {\n        onPress: function onPress() {\n          _this4.openEditShippingPage([], 'add');\n        },\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: {\n          marginBottom: 20,\n          marginTop: 18,\n          borderColor: _Theme.default.primary,\n          alignItems: 'center',\n          height: 38,\n          width: (0, _reactNativeResponsiveScreen.widthPercentageToDP)('90%'),\n          backgroundColor: _Theme.default.primary,\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_nativeBase.Text, {\n        style: {\n          textAlign: 'center',\n          color: _Theme.default.primaryContrast,\n          fontSize: _Theme.default.mediumSize + 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 15\n        }\n      }, this.props.isLoading.Config.languageJson2['Add New Address'])))));\n    }\n  }]);\n  return ShippingAddress;\n}(_react.PureComponent);\n\nShippingAddress.navigationOptions = function (_ref) {\n  var navigation = _ref.navigation;\n  var headerStyle = navigation.getParam('headerTitle');\n  return {\n    headerTitle: headerStyle,\n    headerRight: function headerRight() {\n      return _react.default.createElement(_ShoppingCartIcon.default, {\n        navigation: navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 26\n        }\n      });\n    },\n    headerTitleAlign: 'center',\n    headerTintColor: _Theme.default.headerTintColor,\n    headerStyle: {\n      backgroundColor: _Theme.default.primary\n    },\n    headerTitleStyle: {\n      fontWeight: _reactNative.Platform.OS === 'android' ? 'bold' : 'normal'\n    },\n    headerForceInset: {\n      top: 'never',\n      vertical: 'never'\n    },\n    gestureEnabled: true,\n    cardStyleInterpolator: _reactNavigationStack.CardStyleInterpolators.forHorizontalIOS\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoading: state\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, null)(ShippingAddress);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/mysiew/Documents/eCommerce/codecanyon-xPJMYS8x-react-native-delivery-solution-with-advance-website-and-cms/SourceCode/vesend-consumer-app-master/src/screens/AdressesScreen.js"],"names":["WIDTH","Dimensions","get","width","ShippingAddress","props","navigation","setParams","headerTitle","isLoading","Config","languageJson2","Address","getAllAddress","dat","customers_id","SyncStorage","WooComFetch","postHttp","data","success","setState","allShippingAddress","spinnerTemp","defaultAddress","id","address_book_id","refresh","name","selectedValue","tempC","state","shippingArray","shipping","Country","set","shippingCountry","billingArray","billing","billingCountry","State","shippingState","billingState","openEditShippingPage","temp","navigate","type","updateCart","visible","placeholderArray","Compnay","Zone","City","otherArray","value","text","selection","onSelectionBase","onGoBack","marginRight","marginLeft","marginTop","paddingTop","paddingBottom","paddingLeft","borderRadius","borderWidth","borderColor","color","themeStyle","textColor","fontSize","mediumSize","paddingRight","writingDirection","I18nManager","isRTL","textAlign","placeholderText","index","searchFilterFun","global","countries","shippingInput","focus","height","flex","justifyContent","backgroundColor","loadingIndicatorColor","length","padding","alignItems","item","toString","flexDirection","street","city","postcode","country_name","address_id","default_address","marginBottom","primary","primaryContrast","PureComponent","navigationOptions","headerStyle","getParam","headerRight","headerTitleAlign","headerTintColor","headerTitleStyle","fontWeight","Platform","OS","headerForceInset","top","vertical","gestureEnabled","cardStyleInterpolator","CardStyleInterpolators","forHorizontalIOS","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport {\n  View,\n  FlatList,\n  TouchableOpacity,\n  Dimensions,\n  TextInput,\n  I18nManager,\n  Platform\n} from 'react-native'\nimport { UIActivityIndicator } from 'react-native-indicators'\nimport { NavigationEvents } from 'react-navigation'\nimport Spinner from 'react-native-loading-spinner-overlay'\nimport { Container, ListItem, CheckBox, Text, Body } from 'native-base'\nimport { CardStyleInterpolators } from 'react-navigation-stack'\nimport WooComFetch, { getUrl } from '../common/WooComFetch'\nimport Icon from 'react-native-vector-icons/FontAwesome'\nimport * as global from '../common/LocationData'\nimport SyncStorage from 'sync-storage'\nimport { connect } from 'react-redux'\nimport themeStyle from '../common/Theme.style'\nimport ShoppingCartIcon from '../common/ShoppingCartIcon'\nimport { widthPercentageToDP as wp } from 'react-native-responsive-screen'\nconst WIDTH = Dimensions.get('window').width\nclass ShippingAddress extends PureComponent {\n  static navigationOptions = ({ navigation }) => {\n    const headerStyle = navigation.getParam('headerTitle')\n    return {\n      headerTitle: headerStyle,\n      headerRight: () => <ShoppingCartIcon navigation={navigation} />,\n      headerTitleAlign: 'center',\n      headerTintColor: themeStyle.headerTintColor,\n      headerStyle: {\n        backgroundColor: themeStyle.primary\n      },\n      headerTitleStyle: {\n        fontWeight: Platform.OS === 'android' ? 'bold' : 'normal'\n      },\n      headerForceInset: { top: 'never', vertical: 'never' },\n      gestureEnabled: true,\n      cardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS\n    }\n  }\n\n  componentDidMount () {\n    this.props.navigation.setParams({\n      headerTitle: this.props.isLoading.Config.languageJson2.Address\n    })\n    this.getAllAddress()\n  }\n\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      isLoading: true,\n      allShippingAddress: [],\n      spinnerTemp: false,\n      visible: false,\n      shippingArray: [],\n      placeholderArray: [\n        this.props.isLoading.Config.languageJson2['First Name'],\n        this.props.isLoading.Config.languageJson2['Last Name'],\n        this.props.isLoading.Config.languageJson2.Compnay,\n        `${this.props.isLoading.Config.languageJson2.Address} 1`,\n        `${this.props.isLoading.Config.languageJson2.Address} 2`,\n        this.props.isLoading.Config.languageJson2.Country,\n        this.props.isLoading.Config.languageJson2.Zone,\n        this.props.isLoading.Config.languageJson2.City,\n        this.props.isLoading.Config.languageJson2['Post code']\n      ],\n\n      otherArray: [{ value: 'other', name: 'other' }]\n    }\n  }\n\n  getAllAddress = async () => {\n    var dat = { customers_id: SyncStorage.get('customerData').customers_id }\n    const data = await WooComFetch.postHttp(\n      getUrl() + '/api/' + 'getalladdress',\n      dat\n    )\n    if (data.success == 1) {\n      this.setState({\n        allShippingAddress: data.data.data,\n        isLoading: false,\n        spinnerTemp: false\n      })\n    } else {\n      this.setState({\n        allShippingAddress: [],\n        isLoading: false,\n        spinnerTemp: false\n      })\n    }\n  }\n\n  /// /////\n  defaultAddress = async id => {\n    var dat = {\n      customers_id: SyncStorage.get('customerData').customers_id,\n      address_book_id: id\n    }\n    const data = await WooComFetch.postHttp(\n      getUrl() + '/api/' + 'updatedefaultaddress',\n      dat\n    )\n    if (data.success == 1) {\n      this.getAllAddress()\n    }\n  }\n\n  /// ///////////////////////////////////////\n  searchFilterFun (text, name, selection) {\n    return (\n      <TouchableOpacity\n        onPress={() =>\n          this.props.navigation.navigate('SearchFilterClass', {\n            data: text,\n            onSelectionBase: selection,\n            onGoBack: (name, selectedValue) =>\n              this.refresh(name, selectedValue)\n          })\n        }>\n        <View\n          style={{\n            marginRight: 20,\n            marginLeft: 20,\n            marginTop: 20,\n            paddingTop: 10,\n            paddingBottom: 10,\n            paddingLeft: 4,\n            width: wp('90%'),\n            borderRadius: 1,\n            borderWidth: 1,\n            borderColor: '#c0c0c0'\n          }}>\n          <Text\n            style={{\n              color:\n                name === 'Country' || name === 'State' ? '#c0c0c0' : themeStyle.textColor,\n              fontSize: themeStyle.mediumSize,\n              paddingRight: 6,\n              writingDirection: I18nManager.isRTL ? 'rtl' : 'ltr',\n              textAlign: 'justify'\n            }}>\n            {name}\n          </Text>\n        </View>\n      </TouchableOpacity>\n    )\n  }\n\n  /// ////////////////////////////////////////\n  customTextView (placeholderText, index) {\n    return placeholderText ===\n      this.props.isLoading.Config.languageJson2.Country ? (\n        <View>\n          {this.searchFilterFun(\n            global.data.countries,\n            this.state.shippingCountry === ''\n              ? placeholderText\n              : this.state.shippingCountry,\n            'shipping'\n          )}\n        </View>\n      ) : placeholderText === this.props.isLoading.Config.languageJson2.Zone ? (\n        <View></View>\n      ) : (\n        <TouchableOpacity\n          activeOpacity={1}\n          onPress={() => this.shippingInput[index].focus()}>\n          <TextInput\n            style={{\n              marginTop: 20,\n              height: 38,\n              width: wp('90%'),\n              borderColor: '#c1c1c1',\n              borderWidth: 1,\n              marginLeft: 20,\n              fontSize: themeStyle.mediumSize,\n              textAlign: I18nManager.isRTL ? 'right' : 'left',\n              paddingLeft: 6,\n              paddingRight: 6,\n              color: themeStyle.textColor\n            }}\n            selectionColor='#51688F'\n            placeholderTextColor={'#c1c1c1'}\n            placeholder={` ${placeholderText}`}\n            onChangeText={text => {\n              this.state.shippingArray[index] = text\n              this.setState({ shippingArray: this.state.shippingArray })\n            }}\n            value={this.state.shippingArray[index]}\n          />\n        </TouchableOpacity>\n      )\n  }\n\n  /// //////////////////\n  refresh = (name, selectedValue) => {\n    const tempC = SyncStorage.get('customerData')\n\n    if (selectedValue === 'shipping') {\n      this.state.shippingArray[5] = name\n      this.state.shippingArray[6] = ''\n      this.state.shippingArray[7] = ''\n      this.state.shippingArray[8] = ''\n      tempC.shipping.Country = name\n\n      SyncStorage.set('customerData', tempC)\n      this.setState({\n        shippingCountry: name,\n        shippingArray: this.state.shippingArray\n      })\n    } else if (selectedValue === 'billing') {\n      this.state.billingArray[5] = name\n      this.state.billingArray[6] = ''\n      this.state.billingArray[7] = ''\n      this.state.billingArray[8] = ''\n      tempC.billing.Country = name\n      SyncStorage.set('customerData', tempC)\n      this.setState({\n        billingCountry: name,\n        billingArray: this.state.billingArray\n      })\n    }\n    if (selectedValue === 'shippingState') {\n      this.state.shippingArray[6] = name\n      tempC.shipping.State = name\n      SyncStorage.set('customerData', tempC)\n      this.setState({\n        shippingState: name,\n        shippingArray: this.state.shippingArray\n      })\n    } else if (selectedValue === 'billingState') {\n      this.state.billingArray[6] = name\n      tempC.billing.State = name\n      SyncStorage.set('customerData', tempC)\n      this.setState({\n        billingState: name,\n        billingArray: this.state.billingArray\n      })\n    }\n    this.setState({})\n  }\n\n  /// //////////////////\n  openEditShippingPage = (data, temp) => {\n    this.props.navigation.navigate('AddressEdit', {\n      data: data,\n      type: temp,\n      updateCart: () => this.setState({})\n    })\n  }\n\n  render () {\n    return this.state.isLoading ? (\n      <View\n        style={{\n          flex: 1,\n          justifyContent: 'center',\n          backgroundColor: themeStyle.backgroundColor\n        }}>\n        <UIActivityIndicator\n          size={27}\n          color={themeStyle.loadingIndicatorColor}\n        />\n      </View>\n    ) : (\n      <Container style={{\n        backgroundColor: themeStyle.backgroundColor,\n        flex: 1\n      }}>\n        <View style={{ flex: 1 }}>\n          <Spinner visible={this.state.spinnerTemp} />\n          <NavigationEvents\n            onDidFocus={() => {\n              this.setState({ spinnerTemp: true }, () => {\n                this.getAllAddress()\n              })\n            }}\n          />\n          {this.state.allShippingAddress.length === 0 &&\n          this.state.spinnerTemp === false ? (\n              <Text\n                style={{\n                  padding: 19,\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  paddingBottom: 2,\n                  color: themeStyle.textColor\n                }}>\n                {\n                  this.props.isLoading.Config.languageJson2[\n                    'Please add your new shipping address for the futher processing of the your order'\n                  ]\n                }\n              </Text>\n            ) : null}\n\n          <FlatList\n            data={this.state.allShippingAddress}\n            horizontal={false}\n            extraData={this.state}\n            keyExtractor={(item, index) => index.toString()}\n            renderItem={item => (\n              <View>\n                <ListItem>\n                  <TouchableOpacity\n                    style={{ flexDirection: 'row', alignItems: 'center' }}>\n                    <TouchableOpacity\n                      onPress={() =>\n                        this.openEditShippingPage(item.item, 'update')\n                      }\n                      style={{ padding: 5 }}>\n                      <Icon\n                        name={'pencil'}\n                        style={{ color: '#4d4d4d', fontSize: 20 }}\n                      />\n                    </TouchableOpacity>\n                    <Body>\n                      <Text\n                        style={{\n                          fontSize: themeStyle.mediumSize + 1,\n                          width: WIDTH * 0.7,\n                          paddingLeft: 20,\n                          color: themeStyle.textColor\n                        }}\n                        numberOfLines={1}>\n                        {item.item.street +\n                          ', ' +\n                          item.item.city +\n                          ' ' +\n                          item.item.postcode +\n                          ', ' +\n                          item.item.country_name}\n                      </Text>\n                    </Body>\n                    <CheckBox\n                      onPress={() =>\n                        this.setState({ spinnerTemp: true }, () =>\n                          this.defaultAddress(item.item.address_id)\n                        )\n                      }\n                      checked={item.item.default_address === 1}\n                    />\n                  </TouchableOpacity>\n                </ListItem>\n              </View>\n            )}\n          />\n          <TouchableOpacity\n            onPress={() => {\n              this.openEditShippingPage([], 'add')\n            }}\n            style={{ justifyContent: 'center', alignItems: 'center' }}>\n            <View\n              style={{\n                marginBottom: 20,\n                marginTop: 18,\n                borderColor: themeStyle.primary,\n                alignItems: 'center',\n                height: 38,\n                width: wp('90%'),\n                backgroundColor: themeStyle.primary,\n                justifyContent: 'center'\n              }}>\n              <Text\n                style={{\n                  textAlign: 'center',\n                  color: themeStyle.primaryContrast,\n                  fontSize: themeStyle.mediumSize + 1\n                }}>\n                {this.props.isLoading.Config.languageJson2['Add New Address']}\n              </Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n      </Container>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  isLoading: state\n})\n\nexport default connect(mapStateToProps, null)(ShippingAddress)\n"]},"metadata":{},"sourceType":"script"}