{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _database = _interopRequireDefault(require(\"@react-native-firebase/database\"));\n\nvar _reactNavigationStack = require(\"react-navigation-stack\");\n\nvar _Theme = _interopRequireDefault(require(\"../common/Theme.style\"));\n\nvar _reactNativeMaps = _interopRequireWildcard(require(\"react-native-maps\"));\n\nvar _reactNativeLoadingSpinnerOverlay = _interopRequireDefault(require(\"react-native-loading-spinner-overlay\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\mysiew\\\\Documents\\\\eCommerce\\\\codecanyon-xPJMYS8x-react-native-delivery-solution-with-advance-website-and-cms\\\\SourceCode\\\\vesend-consumer-app-master\\\\src\\\\screens\\\\TrackLocationScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar RewardPoints = function (_Component) {\n  (0, _inherits2.default)(RewardPoints, _Component);\n\n  var _super = _createSuper(RewardPoints);\n\n  function RewardPoints(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, RewardPoints);\n    _this = _super.call(this, props);\n\n    _this.requestLocationPermission = function _callee() {\n      var granted;\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regenerator.default.awrap(_reactNative.PermissionsAndroid.request(_reactNative.PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION, _reactNative.PermissionsAndroid.PERMISSIONS.ACCESS_COARSE_LOCATION, {\n                title: _Theme.default.title,\n                message: _Theme.default.title + 'App access to your location ',\n                buttonNegative: 'Cancel',\n                buttonPositive: 'OK'\n              }));\n\n            case 3:\n              granted = _context.sent;\n\n              if (granted === _reactNative.PermissionsAndroid.RESULTS.GRANTED) {\n                (0, _database.default)().ref('location/' + _this.props.navigation.state.params.data.deliveryboy_info[0].deliveryboy_id).on('value', function (snapshot) {\n                  var newCoords = {};\n                  newCoords.latitude = parseFloat(snapshot.val().latitude);\n                  newCoords.longitude = parseFloat(snapshot.val().longitude);\n                  newCoords.latitudeDelta = 0.09;\n                  newCoords.longitudeDelta = 0.09;\n\n                  _this.setState({\n                    deliveryBoyLatLong: newCoords\n                  }, function () {});\n                });\n              } else {\n                _reactNative.Alert.alert('Please Turn On Device Location');\n              }\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n\n              _reactNative.Alert.alert(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    _this.onLayout = function () {\n      setTimeout(function () {\n        if (_this.state.deliveryBoyLatLong !== null && _this.state.deliveryBoyLatLong !== undefined && _this.state.x !== null && _this.state.x !== undefined) {\n          _this.mapRef.fitToCoordinates([_this.state.deliveryBoyLatLong, _this.state.x], {\n            edgePadding: {\n              top: 200,\n              right: 200,\n              bottom: 200,\n              left: 200\n            },\n            animated: false,\n            useNativeDriver: true\n          });\n        }\n      }, 3000);\n    };\n\n    _this.state = {\n      x: {\n        latitude: _this.props.navigation.state.params.data.delivery_latitude !== null && _this.props.navigation.state.params.data.delivery_latitude !== undefined ? parseFloat(_this.props.navigation.state.params.data.delivery_latitude) : 32.100847,\n        longitude: _this.props.navigation.state.params.data.delivery_longitude !== null && _this.props.navigation.state.params.data.delivery_longitude !== undefined ? parseFloat(_this.props.navigation.state.params.data.delivery_longitude) : 72.688091,\n        latitudeDelta: 0.009,\n        longitudeDelta: 0.009\n      },\n      deliveryBoyLatLong: {\n        latitude: _this.props.navigation.state.params.data.delivery_latitude !== null && _this.props.navigation.state.params.data.delivery_latitude !== undefined ? parseFloat(_this.props.navigation.state.params.data.delivery_latitude) : 32.100847,\n        longitude: _this.props.navigation.state.params.data.delivery_longitude !== null && _this.props.navigation.state.params.data.delivery_longitude !== undefined ? parseFloat(_this.props.navigation.state.params.data.delivery_longitude) : 72.688091,\n        latitudeDelta: 0.009,\n        longitudeDelta: 0.009\n      },\n      SpinnerTemp: false\n    };\n    _this.mapRef = null;\n    return _this;\n  }\n\n  (0, _createClass2.default)(RewardPoints, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      return _regenerator.default.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this.props.navigation.setParams({\n                headerTitle: this.props.isLoading.Config.languageJson2['Map Screen']\n              });\n\n              if (!(_reactNative.Platform.OS === 'android')) {\n                _context2.next = 6;\n                break;\n              }\n\n              _context2.next = 4;\n              return _regenerator.default.awrap(this.requestLocationPermission());\n\n            case 4:\n              _context2.next = 7;\n              break;\n\n            case 6:\n              (0, _database.default)().ref('location/' + this.props.navigation.state.params.data.deliveryboy_info[0].deliveryboy_id).on('value', function (snapshot) {\n                var newCoords = {};\n                newCoords.latitude = parseFloat(snapshot.val().latitude);\n                newCoords.longitude = parseFloat(snapshot.val().longitude);\n                newCoords.latitudeDelta = 0.09;\n                newCoords.longitudeDelta = 0.09;\n\n                _this2.setState({\n                  deliveryBoyLatLong: newCoords\n                }, function () {});\n              });\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return _react.default.createElement(_reactNative.View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNativeLoadingSpinnerOverlay.default, {\n        visible: this.state.SpinnerTemp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }\n      }), _react.default.createElement(_reactNativeMaps.default, {\n        showsUserLocation: true,\n        ref: function ref(_ref) {\n          _this3.mapRef = _ref;\n        },\n        style: {\n          flex: 1\n        },\n        showsMyLocationButton: true,\n        onMapReady: this.onLayout,\n        initialRegion: this.state.deliveryBoyLatLong,\n        region: this.state.deliveryBoyLatLong,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 9\n        }\n      }, this.props.navigation.state.params.data.delivery_latitude !== null && this.props.navigation.state.params.data.delivery_latitude !== undefined && this.props.navigation.state.params.data.delivery_longitude !== null && this.props.navigation.state.params.data.delivery_longitude !== undefined ? _react.default.createElement(_reactNativeMaps.Marker, {\n        coordinate: {\n          latitude: parseFloat(this.props.navigation.state.params.data.delivery_latitude),\n          longitude: parseFloat(this.props.navigation.state.params.data.delivery_longitude)\n        },\n        title: this.props.isLoading.Config.languageJson2.Address,\n        description: this.props.isLoading.Config.languageJson2['My Location'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 15\n        }\n      }) : null, _react.default.createElement(_reactNativeMaps.Marker, {\n        coordinate: this.state.deliveryBoyLatLong,\n        title: this.props.isLoading.Config.languageJson2.Address,\n        description: this.props.isLoading.Config.languageJson2['Delivery Boy'],\n        pinColor: _Theme.default.primaryDark,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n  return RewardPoints;\n}(_react.Component);\n\nRewardPoints.navigationOptions = function (_ref2) {\n  var navigation = _ref2.navigation;\n  var headerStyle = navigation.getParam('headerTitle');\n  return {\n    headerTitle: headerStyle,\n    cardStyleInterpolator: _reactNavigationStack.CardStyleInterpolators.forHorizontalIOS,\n    headerTitleAlign: 'center',\n    headerTintColor: _Theme.default.headerTintColor,\n    headerStyle: {\n      backgroundColor: _Theme.default.primary\n    },\n    headerTitleStyle: {\n      fontWeight: _reactNative.Platform.OS === 'android' ? 'bold' : 'normal'\n    },\n    headerForceInset: {\n      top: 'never',\n      vertical: 'never'\n    },\n    gestureEnabled: true\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoading: state\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, null)(RewardPoints);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/mysiew/Documents/eCommerce/codecanyon-xPJMYS8x-react-native-delivery-solution-with-advance-website-and-cms/SourceCode/vesend-consumer-app-master/src/screens/TrackLocationScreen.js"],"names":["RewardPoints","props","requestLocationPermission","PermissionsAndroid","request","PERMISSIONS","ACCESS_FINE_LOCATION","ACCESS_COARSE_LOCATION","title","themeStyle","message","buttonNegative","buttonPositive","granted","RESULTS","GRANTED","ref","navigation","state","params","data","deliveryboy_info","deliveryboy_id","on","snapshot","newCoords","latitude","parseFloat","val","longitude","latitudeDelta","longitudeDelta","setState","deliveryBoyLatLong","Alert","alert","onLayout","setTimeout","undefined","x","mapRef","fitToCoordinates","edgePadding","top","right","bottom","left","animated","useNativeDriver","delivery_latitude","delivery_longitude","SpinnerTemp","setParams","headerTitle","isLoading","Config","languageJson2","Platform","OS","flex","Address","primaryDark","Component","navigationOptions","headerStyle","getParam","cardStyleInterpolator","CardStyleInterpolators","forHorizontalIOS","headerTitleAlign","headerTintColor","backgroundColor","primary","headerTitleStyle","fontWeight","headerForceInset","vertical","gestureEnabled","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n  View,\n  PermissionsAndroid,\n  Platform,\n  Alert\n} from 'react-native'\nimport { connect } from 'react-redux'\nimport database from '@react-native-firebase/database'\nimport { CardStyleInterpolators } from 'react-navigation-stack'\nimport themeStyle from '../common/Theme.style'\nimport MapView, { Marker } from 'react-native-maps'\nimport Spinner from 'react-native-loading-spinner-overlay'\n\nclass RewardPoints extends Component {\n  static navigationOptions = ({ navigation }) => {\n    const headerStyle = navigation.getParam('headerTitle')\n    return {\n      headerTitle: headerStyle,\n      cardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS,\n      headerTitleAlign: 'center',\n      headerTintColor: themeStyle.headerTintColor,\n      headerStyle: {\n        backgroundColor: themeStyle.primary\n      },\n      headerTitleStyle: {\n        fontWeight: Platform.OS === 'android' ? 'bold' : 'normal'\n      },\n      headerForceInset: { top: 'never', vertical: 'never' },\n      gestureEnabled: true\n    }\n  }\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      x: {\n        latitude:\n          this.props.navigation.state.params.data.delivery_latitude !== null &&\n          this.props.navigation.state.params.data.delivery_latitude !==\n            undefined\n            ? parseFloat(\n              this.props.navigation.state.params.data.delivery_latitude\n            )\n            : 32.100847,\n        longitude:\n          this.props.navigation.state.params.data.delivery_longitude !== null &&\n          this.props.navigation.state.params.data.delivery_longitude !==\n            undefined\n            ? parseFloat(\n              this.props.navigation.state.params.data.delivery_longitude\n            )\n            : 72.688091,\n        latitudeDelta: 0.009,\n        longitudeDelta: 0.009\n      },\n      deliveryBoyLatLong: {\n        latitude:\n          this.props.navigation.state.params.data.delivery_latitude !== null &&\n          this.props.navigation.state.params.data.delivery_latitude !==\n            undefined\n            ? parseFloat(\n              this.props.navigation.state.params.data.delivery_latitude\n            )\n            : 32.100847,\n        longitude:\n          this.props.navigation.state.params.data.delivery_longitude !== null &&\n          this.props.navigation.state.params.data.delivery_longitude !==\n            undefined\n            ? parseFloat(\n              this.props.navigation.state.params.data.delivery_longitude\n            )\n            : 72.688091,\n        latitudeDelta: 0.009,\n        longitudeDelta: 0.009\n      },\n      SpinnerTemp: false\n    }\n    this.mapRef = null\n  }\n\n  async componentDidMount () {\n    this.props.navigation.setParams({\n      headerTitle: this.props.isLoading.Config.languageJson2['Map Screen']\n    })\n    if (Platform.OS === 'android') {\n      await this.requestLocationPermission()\n    } else {\n      database()\n        .ref(\n          'location/' +\n            this.props.navigation.state.params.data.deliveryboy_info[0]\n              .deliveryboy_id\n        )\n        .on('value', snapshot => {\n          const newCoords = {}\n          newCoords.latitude = parseFloat(snapshot.val().latitude)\n          newCoords.longitude = parseFloat(snapshot.val().longitude)\n\n          newCoords.latitudeDelta = 0.09\n          newCoords.longitudeDelta = 0.09\n          this.setState(\n            {\n              deliveryBoyLatLong: newCoords\n            },\n            () => {\n            }\n          )\n        })\n    }\n  }\n\n  requestLocationPermission = async () => {\n    try {\n      const granted = await PermissionsAndroid.request(\n        PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION,\n        PermissionsAndroid.PERMISSIONS.ACCESS_COARSE_LOCATION,\n        {\n          title: themeStyle.title,\n          message: themeStyle.title + 'App access to your location ',\n          buttonNegative: 'Cancel',\n          buttonPositive: 'OK'\n        }\n      )\n      if (granted === PermissionsAndroid.RESULTS.GRANTED) {\n        database()\n          .ref(\n            'location/' +\n              this.props.navigation.state.params.data.deliveryboy_info[0]\n                .deliveryboy_id\n          )\n          .on('value', snapshot => {\n            const newCoords = {}\n            newCoords.latitude = parseFloat(snapshot.val().latitude)\n            newCoords.longitude = parseFloat(snapshot.val().longitude)\n\n            newCoords.latitudeDelta = 0.09\n            newCoords.longitudeDelta = 0.09\n            this.setState(\n              {\n                deliveryBoyLatLong: newCoords\n              },\n              () => {\n              }\n            )\n          })\n      } else {\n        Alert.alert('Please Turn On Device Location')\n      }\n    } catch (err) {\n      Alert.alert(err)\n    }\n  }\n\n  onLayout = () => {\n    setTimeout(() => {\n      if (\n        this.state.deliveryBoyLatLong !== null &&\n        this.state.deliveryBoyLatLong !== undefined &&\n        this.state.x !== null &&\n        this.state.x !== undefined\n      ) {\n        this.mapRef.fitToCoordinates(\n          [this.state.deliveryBoyLatLong, this.state.x],\n          {\n            edgePadding: { top: 200, right: 200, bottom: 200, left: 200 },\n            animated: false,\n            useNativeDriver: true\n          }\n        )\n      }\n    }, 3000)\n  }\n\n  render () {\n    return (\n      <View style={{ flex: 1 }}>\n        <Spinner visible={this.state.SpinnerTemp} />\n        <MapView\n          showsUserLocation={true}\n          ref={ref => {\n            this.mapRef = ref\n          }}\n          style={{ flex: 1 }}\n          showsMyLocationButton={true}\n          onMapReady={this.onLayout}\n          initialRegion={this.state.deliveryBoyLatLong}\n          region={this.state.deliveryBoyLatLong}>\n          {this.props.navigation.state.params.data.delivery_latitude !== null &&\n          this.props.navigation.state.params.data.delivery_latitude !==\n            undefined &&\n          this.props.navigation.state.params.data.delivery_longitude !== null &&\n          this.props.navigation.state.params.data.delivery_longitude !==\n            undefined ? (\n              <Marker\n                coordinate={{\n                  latitude: parseFloat(\n                    this.props.navigation.state.params.data.delivery_latitude\n                  ),\n                  longitude: parseFloat(\n                    this.props.navigation.state.params.data.delivery_longitude\n                  )\n                }}\n                title={this.props.isLoading.Config.languageJson2.Address}\n                description={\n                  this.props.isLoading.Config.languageJson2['My Location']\n                }\n              />\n            ) : null}\n          <Marker\n            coordinate={this.state.deliveryBoyLatLong}\n            title={this.props.isLoading.Config.languageJson2.Address}\n            description={\n              this.props.isLoading.Config.languageJson2['Delivery Boy']\n            }\n            pinColor={themeStyle.primaryDark}\n          />\n        </MapView>\n      </View>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  isLoading: state\n})\n\nexport default connect(mapStateToProps, null)(RewardPoints)\n"]},"metadata":{},"sourceType":"script"}