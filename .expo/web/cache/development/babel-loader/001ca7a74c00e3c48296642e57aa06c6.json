{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNavigationStack = require(\"react-navigation-stack\");\n\nvar _WooComFetch = require(\"../common/WooComFetch\");\n\nvar _reactNativeResponsiveScreen = require(\"react-native-responsive-screen\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _syncStorage = _interopRequireDefault(require(\"sync-storage\"));\n\nvar _reactNativeLoadingSpinnerOverlay = _interopRequireDefault(require(\"react-native-loading-spinner-overlay\"));\n\nvar _Theme = _interopRequireDefault(require(\"../common/Theme.style\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\mysiew\\\\Documents\\\\eCommerce\\\\codecanyon-xPJMYS8x-react-native-delivery-solution-with-advance-website-and-cms\\\\SourceCode\\\\vesend-consumer-app-master\\\\src\\\\screens\\\\CreateAccountScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar CreateAccount = function (_PureComponent) {\n  (0, _inherits2.default)(CreateAccount, _PureComponent);\n\n  var _super = _createSuper(CreateAccount);\n\n  (0, _createClass2.default)(CreateAccount, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.navigation.setParams({\n        headerTitle: this.props.isLoading.Config.languageJson2['Create an Account']\n      });\n    }\n  }]);\n\n  function CreateAccount(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, CreateAccount);\n    _this = _super.call(this, props);\n\n    _this.getUserData = function (data, t) {\n      var customerData = data;\n      customerData.customers_telephone = data.phone;\n      customerData.phone = data.phone;\n      customerData.customers_id = data.id;\n      customerData.customers_firstname = data.first_name;\n      customerData.customers_lastname = data.last_name;\n      customerData.phone = data.phone;\n      customerData.avatar = data.avatar;\n      customerData.image_id = data.image_id;\n      customerData.customers_dob = data.dob;\n\n      _syncStorage.default.set('customerData', customerData);\n\n      if (_syncStorage.default.get('drawerLogin')) {\n        _syncStorage.default.set('drawerLogin', false);\n\n        t.props.navigation.navigate('SETTINGS');\n      } else {\n        t.props.navigation.navigate('SettingsScreen');\n      }\n    };\n\n    _this.signUp = function _callee(t) {\n      var formData, data;\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.errorMessage = '';\n              formData = new FormData();\n              formData.append('customers_firstname', t.state.firstName);\n              formData.append('customers_lastname', t.state.lastName);\n              formData.append('email', t.state.email);\n              formData.append('password', t.state.password);\n              formData.append('display_name', t.state.firstName + \" \" + t.state.lastName);\n              formData.append('customers_telephone', t.state.userName);\n              _context.next = 10;\n              return _regenerator.default.awrap((0, _WooComFetch.postHttp)((0, _WooComFetch.getUrl)() + '/api/' + 'processregistration', formData));\n\n            case 10:\n              data = _context.sent;\n\n              if (data.success === '1') {\n                t.setState({\n                  spinnerTemp: false\n                }, function () {\n                  return _this.getUserData(data.data[0], t);\n                });\n              }\n\n              if (data.success === '0') {\n                t.setState({\n                  errorMessage: data.message,\n                  spinnerTemp: false\n                });\n              }\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      firstName: '',\n      lastName: '',\n      userName: '',\n      phoneNumber: '',\n      email: '',\n      password: '',\n      errorMessage: '',\n      spinnerTemp: false,\n      dOB: '',\n      chosenDate: new Date()\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(CreateAccount, [{\n    key: \"createAccount\",\n    value: function createAccount(t) {\n      var reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n      if (reg.test(this.state.email) === false) {\n        t.setState({\n          errorMessage: this.props.isLoading.Config.languageJson2['The email address is not valid']\n        });\n        return;\n      }\n\n      t.setState({\n        spinnerTemp: true\n      });\n      this.signUp(t);\n    }\n  }, {\n    key: \"canBeSubmitted\",\n    value: function canBeSubmitted() {\n      var _this$state = this.state,\n          lastName = _this$state.lastName,\n          firstName = _this$state.firstName,\n          userName = _this$state.userName,\n          email = _this$state.email,\n          password = _this$state.password;\n      return lastName.length > 0 && firstName.length > 0 && userName.length > 0 && email.length > 0 && password.length > 0;\n    }\n  }, {\n    key: \"phoneNumberCheck\",\n    value: function phoneNumberCheck() {\n      var _this$state2 = this.state,\n          phoneNumber = _this$state2.phoneNumber,\n          userName = _this$state2.userName;\n      var reg = /^(\\+601)[0-9]{8,9}$/;\n\n      if (reg.test(phoneNumber) !== true) {\n        if (phoneNumber.length !== 0) {\n          this.state.userName = '+6' + phoneNumber;\n        }\n      } else {\n        this.state.userName = phoneNumber;\n      }\n\n      return (userName.length >= 12 || userName.length === 0) && (userName.length === 0 || reg.test(this.state.userName)) === true;\n    }\n  }, {\n    key: \"EmailNumberCheck\",\n    value: function EmailNumberCheck() {\n      var email = this.state.email;\n      var reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+(\\s?)+$/;\n      this.state.email.trim();\n      return email.length === 0 || reg.test(this.state.email) === true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var isEnabled = this.canBeSubmitted();\n      return _react.default.createElement(_reactNative.ScrollView, {\n        style: {\n          backgroundColor: _Theme.default.backgroundColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: {\n          flex: 1,\n          backgroundColor: _Theme.default.backgroundColor,\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNativeLoadingSpinnerOverlay.default, {\n        visible: this.state.spinnerTemp,\n        textStyle: {\n          backgroundColor: _Theme.default.loadingIndicatorColor,\n          color: _Theme.default.loadingIndicatorColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }\n      }), _react.default.createElement(_reactNative.View, {\n        style: {\n          flex: 1,\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.TextInput, {\n        style: {\n          marginTop: 20,\n          height: 38,\n          width: (0, _reactNativeResponsiveScreen.widthPercentageToDP)('90%'),\n          borderColor: '#c1c1c1',\n          borderBottomWidth: 1,\n          textAlign: _reactNative.I18nManager.isRTL ? 'right' : 'left',\n          paddingLeft: 6,\n          paddingRight: 6,\n          fontSize: _Theme.default.mediumSize + 2,\n          color: _Theme.default.textColor\n        },\n        placeholderTextColor: '#c1c1c1',\n        selectionColor: \"#51688F\",\n        placeholder: this.props.isLoading.Config.languageJson2['First Name'],\n        onChangeText: function onChangeText(firstName) {\n          return _this2.setState({\n            firstName: firstName,\n            errorMessage: ''\n          });\n        },\n        value: this.state.firstName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }\n      }), _react.default.createElement(_reactNative.TextInput, {\n        style: {\n          marginTop: 20,\n          height: 38,\n          width: (0, _reactNativeResponsiveScreen.widthPercentageToDP)('90%'),\n          borderColor: '#c1c1c1',\n          borderBottomWidth: 1,\n          textAlign: _reactNative.I18nManager.isRTL ? 'right' : 'left',\n          paddingLeft: 6,\n          paddingRight: 6,\n          fontSize: _Theme.default.mediumSize + 2,\n          color: _Theme.default.textColor\n        },\n        placeholderTextColor: '#c1c1c1',\n        selectionColor: \"#51688F\",\n        placeholder: this.props.isLoading.Config.languageJson2['Last Name'],\n        onChangeText: function onChangeText(lastName) {\n          return _this2.setState({\n            lastName: lastName,\n            errorMessage: ''\n          });\n        },\n        value: this.state.lastName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }\n      }), _react.default.createElement(_reactNative.TextInput, {\n        style: {\n          marginTop: 20,\n          height: 38,\n          width: (0, _reactNativeResponsiveScreen.widthPercentageToDP)('90%'),\n          borderColor: this.phoneNumberCheck() ? '#c1c1c1' : _Theme.default.removeBtnColor,\n          borderBottomWidth: 1,\n          textAlign: _reactNative.I18nManager.isRTL ? 'right' : 'left',\n          paddingLeft: 6,\n          paddingRight: 6,\n          fontSize: _Theme.default.mediumSize + 2,\n          color: _Theme.default.textColor\n        },\n        placeholderTextColor: '#c1c1c1',\n        dataDetectorTypes: 'phoneNumber',\n        keyboardType: _reactNative.Platform.OS === 'ios' ? 'number-pad' : 'number-pad',\n        selectionColor: \"#51688F\",\n        placeholder: this.props.isLoading.Config.languageJson2.Mobile,\n        onChangeText: function onChangeText(phoneNumber) {\n          return _this2.setState({\n            phoneNumber: phoneNumber,\n            errorMessage: ''\n          });\n        },\n        value: this.state.phoneNumber,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }\n      }), !this.phoneNumberCheck() ? _react.default.createElement(_reactNative.Text, {\n        style: {\n          marginTop: 5,\n          color: 'red',\n          fontSize: _Theme.default.mediumSize,\n          alignSelf: 'flex-start'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 15\n        }\n      }, this.props.isLoading.Config.languageJson2['The phone number is not valid. No dashes or spaces']) : null, _react.default.createElement(_reactNative.TextInput, {\n        style: {\n          marginTop: !this.phoneNumberCheck() ? 0 : 20,\n          height: 38,\n          width: (0, _reactNativeResponsiveScreen.widthPercentageToDP)('90%'),\n          borderColor: this.EmailNumberCheck() ? '#c1c1c1' : _Theme.default.removeBtnColor,\n          borderBottomWidth: 1,\n          textAlign: _reactNative.I18nManager.isRTL ? 'right' : 'left',\n          paddingLeft: 6,\n          paddingRight: 6,\n          fontSize: _Theme.default.mediumSize + 2,\n          color: _Theme.default.textColor\n        },\n        placeholderTextColor: '#c1c1c1',\n        dataDetectorTypes: 'address',\n        selectionColor: \"#51688F\",\n        placeholder: this.props.isLoading.Config.languageJson2.Email,\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email,\n            errorMessage: ''\n          });\n        },\n        value: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }\n      }), !this.EmailNumberCheck() ? _react.default.createElement(_reactNative.Text, {\n        style: {\n          marginTop: 5,\n          color: 'red',\n          fontSize: _Theme.default.mediumSize,\n          alignSelf: 'flex-start'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 15\n        }\n      }, this.props.isLoading.Config.languageJson2['The email address is not valid']) : null, _react.default.createElement(_reactNative.TextInput, {\n        style: {\n          marginTop: !this.EmailNumberCheck() ? 0 : 15,\n          height: 38,\n          width: (0, _reactNativeResponsiveScreen.widthPercentageToDP)('90%'),\n          borderColor: '#c1c1c1',\n          borderBottomWidth: 1,\n          textAlign: _reactNative.I18nManager.isRTL ? 'right' : 'left',\n          paddingLeft: 6,\n          paddingRight: 6,\n          fontSize: _Theme.default.mediumSize + 2,\n          color: _Theme.default.textColor\n        },\n        placeholderTextColor: '#c1c1c1',\n        secureTextEntry: true,\n        selectionColor: \"#51688F\",\n        placeholder: this.props.isLoading.Config.languageJson2.Password,\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password,\n            errorMessage: ''\n          });\n        },\n        value: this.state.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }\n      }), this.state.errorMessage !== '' ? _react.default.createElement(_reactNative.Text, {\n        style: {\n          marginTop: 15,\n          color: this.state.errorMessage === 'User Created. Login Using your Username & Password' ? 'green' : 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 15\n        }\n      }, this.state.errorMessage) : null, _react.default.createElement(_reactNative.Text, {\n        style: {\n          marginTop: 10,\n          padding: 5,\n          width: (0, _reactNativeResponsiveScreen.widthPercentageToDP)('90%'),\n          fontSize: _Theme.default.mediumSize,\n          color: _Theme.default.textColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }\n      }, this.props.isLoading.Config.languageJson2[\"Creating an account means you\\u2019re okay with our\"], _react.default.createElement(_reactNative.Text, {\n        onPress: function onPress() {\n          _this2.props.navigation.navigate('TermAndServiceScreen');\n        },\n        style: {\n          color: '#00F',\n          fontSize: _Theme.default.mediumSize\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 15\n        }\n      }, \" \" + this.props.isLoading.Config.languageJson2['Term and Services']), \", \", '', _react.default.createElement(_reactNative.Text, {\n        onPress: function onPress() {\n          _this2.props.navigation.navigate('PrivacyPolicyScreen');\n        },\n        style: {\n          color: '#00F',\n          fontSize: _Theme.default.mediumSize\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 15\n        }\n      }, \" \" + this.props.isLoading.Config.languageJson2['Privacy Policy']), '', \" \", this.props.isLoading.Config.languageJson2.and, \" \", '', _react.default.createElement(_reactNative.Text, {\n        onPress: function onPress() {\n          _this2.props.navigation.navigate('RefundPolicy');\n        },\n        style: {\n          color: '#00F',\n          fontSize: _Theme.default.mediumSize\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 15\n        }\n      }, \" \" + this.props.isLoading.Config.languageJson2['Refund Policy'])), _react.default.createElement(_reactNative.TouchableOpacity, {\n        disabled: !isEnabled || !this.phoneNumberCheck() || !this.EmailNumberCheck(),\n        onPress: function onPress() {\n          return _this2.createAccount(_this2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: {\n          marginTop: 18,\n          alignItems: 'center',\n          height: 38,\n          width: (0, _reactNativeResponsiveScreen.widthPercentageToDP)('90%'),\n          backgroundColor: _Theme.default.otherBtnsColor,\n          justifyContent: 'center',\n          opacity: !isEnabled || !this.phoneNumberCheck() || !this.EmailNumberCheck() ? 0.4 : 0.9\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 15\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: {\n          textAlign: 'center',\n          color: _Theme.default.otherBtnsText,\n          fontSize: _Theme.default.mediumSize,\n          fontWeight: '500'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 17\n        }\n      }, this.props.isLoading.Config.languageJson2.Register))))));\n    }\n  }]);\n  return CreateAccount;\n}(_react.PureComponent);\n\nCreateAccount.navigationOptions = function (_ref) {\n  var navigation = _ref.navigation;\n  var headerStyle = navigation.getParam('headerTitle');\n  return {\n    headerTitle: headerStyle,\n    headerTitleAlign: 'center',\n    cardStyleInterpolator: _reactNavigationStack.CardStyleInterpolators.forHorizontalIOS,\n    headerRight: function headerRight() {\n      return null;\n    },\n    gestureEnabled: false,\n    drawerLockMode: 'locked-closed',\n    headerTintColor: _Theme.default.headerTintColor,\n    headerStyle: {\n      backgroundColor: _Theme.default.primary\n    },\n    headerTitleStyle: {\n      fontWeight: _reactNative.Platform.OS === 'android' ? 'bold' : 'normal'\n    },\n    headerForceInset: {\n      top: 'never',\n      vertical: 'never'\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoading: state\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, null)(CreateAccount);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/mysiew/Documents/eCommerce/codecanyon-xPJMYS8x-react-native-delivery-solution-with-advance-website-and-cms/SourceCode/vesend-consumer-app-master/src/screens/CreateAccountScreen.js"],"names":["CreateAccount","props","navigation","setParams","headerTitle","isLoading","Config","languageJson2","getUserData","data","t","customerData","customers_telephone","phone","customers_id","id","customers_firstname","first_name","customers_lastname","last_name","avatar","image_id","customers_dob","dob","SyncStorage","set","get","navigate","signUp","errorMessage","formData","FormData","append","state","firstName","lastName","email","password","userName","success","setState","spinnerTemp","message","phoneNumber","dOB","chosenDate","Date","reg","test","length","trim","isEnabled","canBeSubmitted","backgroundColor","themeStyle","flex","justifyContent","alignItems","loadingIndicatorColor","color","flexDirection","marginTop","height","width","borderColor","borderBottomWidth","textAlign","I18nManager","isRTL","paddingLeft","paddingRight","fontSize","mediumSize","textColor","phoneNumberCheck","removeBtnColor","Platform","OS","Mobile","alignSelf","EmailNumberCheck","Email","Password","padding","and","createAccount","otherBtnsColor","opacity","otherBtnsText","fontWeight","Register","PureComponent","navigationOptions","headerStyle","getParam","headerTitleAlign","cardStyleInterpolator","CardStyleInterpolators","forHorizontalIOS","headerRight","gestureEnabled","drawerLockMode","headerTintColor","primary","headerTitleStyle","headerForceInset","top","vertical","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport {\n  Text,\n  View,\n  TextInput,\n  TouchableOpacity,\n  Platform,\n  I18nManager,\n  ScrollView\n} from 'react-native'\nimport { CardStyleInterpolators } from 'react-navigation-stack'\nimport { getUrl, postHttp } from '../common/WooComFetch'\nimport { widthPercentageToDP as wp } from 'react-native-responsive-screen'\nimport { connect } from 'react-redux'\nimport SyncStorage from 'sync-storage'\nimport Spinner from 'react-native-loading-spinner-overlay'\nimport themeStyle from '../common/Theme.style'\n\nclass CreateAccount extends PureComponent {\n  /// /////////////////////////////////////////////////////////\n  static navigationOptions = ({ navigation }) => {\n    const headerStyle = navigation.getParam('headerTitle')\n    return {\n      headerTitle: headerStyle,\n      headerTitleAlign: 'center',\n      cardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS,\n      headerRight: () => null,\n      gestureEnabled: false,\n      drawerLockMode: 'locked-closed',\n      headerTintColor: themeStyle.headerTintColor,\n      headerStyle: {\n        backgroundColor: themeStyle.primary\n      },\n      headerTitleStyle: {\n        fontWeight: Platform.OS === 'android' ? 'bold' : 'normal'\n      },\n      headerForceInset: { top: 'never', vertical: 'never' }\n    }\n  }\n\n  /// /////////////////////////////////////////////////////////\n  componentDidMount () {\n    this.props.navigation.setParams({\n      headerTitle: this.props.isLoading.Config.languageJson2[\n        'Create an Account'\n      ]\n    })\n  }\n\n  /// //////////////////////////////////////////////////////////\n  constructor (props) {\n    super(props)\n    this.state = {\n      firstName: '',\n      lastName: '',\n      userName: '',\n      phoneNumber: '',\n      email: '',\n      password: '',\n      errorMessage: '',\n      spinnerTemp: false,\n      dOB: '',\n      chosenDate: new Date()\n    }\n  }\n\n  /// ////////////////////////\n  getUserData = (data, t) => {\n    const customerData = data\n    customerData.customers_telephone = data.phone\n    customerData.phone = data.phone\n    customerData.customers_id = data.id\n    customerData.customers_firstname = data.first_name\n    customerData.customers_lastname = data.last_name\n    customerData.phone = data.phone\n    customerData.avatar = data.avatar\n    customerData.image_id = data.image_id\n    customerData.customers_dob = data.dob\n    SyncStorage.set('customerData', customerData)\n    if (SyncStorage.get('drawerLogin')) {\n      SyncStorage.set('drawerLogin', false)\n      t.props.navigation.navigate('SETTINGS')\n    } else {\n      t.props.navigation.navigate('SettingsScreen')\n    }\n  }\n\n  /// ///////////////////////////////////////////////////\n  createAccount (t) {\n    const reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\n    if (reg.test(this.state.email) === false) {\n      t.setState({ errorMessage: this.props.isLoading.Config.languageJson2['The email address is not valid'] })\n      return\n    }\n    t.setState({ spinnerTemp: true })\n    this.signUp(t)\n  }\n\n  /// //////////////////////////////////////////\n  signUp = async t => {\n    this.errorMessage = ''\n    const formData = new FormData()\n    formData.append('customers_firstname', t.state.firstName)\n    formData.append('customers_lastname', t.state.lastName)\n    formData.append('email', t.state.email)\n    formData.append('password', t.state.password)\n    formData.append('display_name', `${t.state.firstName} ${t.state.lastName}`)\n    formData.append('customers_telephone', t.state.userName)\n    const data = await postHttp(\n      getUrl() + '/api/' + 'processregistration',\n      formData\n    )\n    if (data.success === '1') {\n      t.setState(\n        {\n          spinnerTemp: false\n        },\n        () => this.getUserData(data.data[0], t)\n      )\n    }\n    if (data.success === '0') {\n      t.setState({ errorMessage: data.message, spinnerTemp: false })\n    }\n  }\n  /// /////////////////////////////////////\n\n  canBeSubmitted () {\n    const { lastName, firstName, userName, email, password } = this.state\n    return (\n      lastName.length > 0 &&\n      firstName.length > 0 &&\n      userName.length > 0 &&\n      email.length > 0 &&\n      password.length > 0\n    )\n  }\n\n  phoneNumberCheck () {\n    const { phoneNumber, userName } = this.state\n    const reg = /^(\\+601)[0-9]{8,9}$/\n    if (reg.test(phoneNumber) !== true) {\n      if (phoneNumber.length !== 0) {\n        this.state.userName = '+6' + phoneNumber\n      }\n    }\n    else {\n      this.state.userName = phoneNumber\n    }\n    return (\n      (userName.length >= 12 || userName.length === 0) && (userName.length === 0 || reg.test(this.state.userName)) === true\n    )\n  }\n\n  EmailNumberCheck () {\n    const { email } = this.state\n    const reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+(\\s?)+$/\n    this.state.email.trim()\n    return (\n      (email.length === 0) || reg.test(this.state.email) === true\n    )\n  }\n\n  /// //////\n  render () {\n    const isEnabled = this.canBeSubmitted()\n    return (\n      <ScrollView style={{ backgroundColor: themeStyle.backgroundColor }}>\n        <View\n          style={{\n            flex: 1,\n            backgroundColor: themeStyle.backgroundColor,\n\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          }}>\n          <Spinner\n            visible={this.state.spinnerTemp}\n            textStyle={{\n              backgroundColor: themeStyle.loadingIndicatorColor,\n              color: themeStyle.loadingIndicatorColor\n            }}\n          />\n\n          <View\n            style={{\n              flex: 1,\n              flexDirection: 'column',\n              justifyContent: 'center',\n              alignItems: 'center'\n            }}>\n            <TextInput\n              style={{\n                marginTop: 20,\n                height: 38,\n                width: wp('90%'),\n                borderColor: '#c1c1c1',\n                borderBottomWidth: 1,\n                textAlign: I18nManager.isRTL ? 'right' : 'left',\n                paddingLeft: 6,\n                paddingRight: 6,\n                fontSize: themeStyle.mediumSize + 2,\n                color: themeStyle.textColor\n              }}\n              placeholderTextColor={'#c1c1c1'}\n              selectionColor='#51688F'\n              placeholder={\n                this.props.isLoading.Config.languageJson2['First Name']\n              }\n              onChangeText={firstName =>\n                this.setState({ firstName, errorMessage: '' })\n              }\n              value={this.state.firstName}\n            />\n            <TextInput\n              style={{\n                marginTop: 20,\n                height: 38,\n                width: wp('90%'),\n                borderColor: '#c1c1c1',\n                borderBottomWidth: 1,\n                textAlign: I18nManager.isRTL ? 'right' : 'left',\n                paddingLeft: 6,\n                paddingRight: 6,\n                fontSize: themeStyle.mediumSize + 2,\n                color: themeStyle.textColor\n              }}\n              placeholderTextColor={'#c1c1c1'}\n              selectionColor='#51688F'\n              placeholder={\n                this.props.isLoading.Config.languageJson2['Last Name']\n              }\n              onChangeText={lastName =>\n                this.setState({ lastName, errorMessage: '' })\n              }\n              value={this.state.lastName}\n            />\n\n            <TextInput\n              style={{\n                marginTop: 20,\n                height: 38,\n                width: wp('90%'),\n                borderColor: this.phoneNumberCheck() ? '#c1c1c1' : themeStyle.removeBtnColor,\n                borderBottomWidth: 1,\n                textAlign: I18nManager.isRTL ? 'right' : 'left',\n                paddingLeft: 6,\n                paddingRight: 6,\n                fontSize: themeStyle.mediumSize + 2,\n                color: themeStyle.textColor\n              }}\n              placeholderTextColor={'#c1c1c1'}\n              dataDetectorTypes={'phoneNumber'}\n              keyboardType={Platform.OS === 'ios' ? 'number-pad' : 'number-pad'}\n              selectionColor='#51688F'\n              placeholder={this.props.isLoading.Config.languageJson2.Mobile}\n              onChangeText={phoneNumber =>\n                this.setState({ phoneNumber, errorMessage: '' })\n              }\n              value={this.state.phoneNumber}\n            />\n            {!this.phoneNumberCheck() ? (\n              <Text\n                style={{\n                  marginTop: 5,\n                  color: 'red',\n                  fontSize: themeStyle.mediumSize,\n                  alignSelf: 'flex-start'\n                }}>\n                {this.props.isLoading.Config.languageJson2['The phone number is not valid. No dashes or spaces']}\n              </Text>\n            ) : null}\n            <TextInput\n              style={{\n                marginTop: !this.phoneNumberCheck() ? 0 : 20,\n                height: 38,\n                width: wp('90%'),\n                borderColor: this.EmailNumberCheck() ? '#c1c1c1' : themeStyle.removeBtnColor,\n                borderBottomWidth: 1,\n                textAlign: I18nManager.isRTL ? 'right' : 'left',\n                paddingLeft: 6,\n                paddingRight: 6,\n                fontSize: themeStyle.mediumSize + 2,\n                color: themeStyle.textColor\n              }}\n              placeholderTextColor={'#c1c1c1'}\n              dataDetectorTypes={'address'}\n              selectionColor='#51688F'\n              placeholder={this.props.isLoading.Config.languageJson2.Email}\n              onChangeText={email => this.setState({ email, errorMessage: '' })}\n              value={this.state.email}\n            />\n            {!this.EmailNumberCheck() ? (\n              <Text\n                style={{\n                  marginTop: 5,\n                  color: 'red',\n                  fontSize: themeStyle.mediumSize,\n                  alignSelf: 'flex-start'\n                }}>\n                {this.props.isLoading.Config.languageJson2['The email address is not valid']}\n              </Text>\n            ) : null}\n            <TextInput\n              style={{\n                marginTop: !this.EmailNumberCheck() ? 0 : 15,\n                height: 38,\n                width: wp('90%'),\n                borderColor: '#c1c1c1',\n                borderBottomWidth: 1,\n                textAlign: I18nManager.isRTL ? 'right' : 'left',\n                paddingLeft: 6,\n                paddingRight: 6,\n                fontSize: themeStyle.mediumSize + 2,\n                color: themeStyle.textColor\n              }}\n              placeholderTextColor={'#c1c1c1'}\n              secureTextEntry\n              selectionColor='#51688F'\n              placeholder={this.props.isLoading.Config.languageJson2.Password}\n              onChangeText={password =>\n                this.setState({ password, errorMessage: '' })\n              }\n              value={this.state.password}\n            />\n\n            {this.state.errorMessage !== '' ? (\n              <Text\n                style={{\n                  marginTop: 15,\n                  color:\n                    this.state.errorMessage ===\n                    'User Created. Login Using your Username & Password'\n                      ? 'green'\n                      : 'red'\n                }}>\n                {this.state.errorMessage}\n              </Text>\n            ) : null}\n            <Text\n              style={{\n                marginTop: 10,\n                padding: 5,\n                width: wp('90%'),\n                fontSize: themeStyle.mediumSize,\n                color: themeStyle.textColor\n              }}>\n              {\n                this.props.isLoading.Config.languageJson2[\n                  'Creating an account means you\\u2019re okay with our'\n                ]\n              }\n              <Text\n                onPress={() => {\n                  this.props.navigation.navigate('TermAndServiceScreen')\n                }}\n                style={{ color: '#00F', fontSize: themeStyle.mediumSize }}>\n                {` ${this.props.isLoading.Config.languageJson2['Term and Services']}`}\n              </Text>\n              , {''}\n              <Text\n                onPress={() => {\n                  this.props.navigation.navigate('PrivacyPolicyScreen')\n                }}\n                style={{ color: '#00F', fontSize: themeStyle.mediumSize }}>\n                {` ${this.props.isLoading.Config.languageJson2['Privacy Policy']}`}\n              </Text>\n              {''} {this.props.isLoading.Config.languageJson2.and} {''}\n              <Text\n                onPress={() => {\n                  this.props.navigation.navigate('RefundPolicy')\n                }}\n                style={{ color: '#00F', fontSize: themeStyle.mediumSize }}>\n                {` ${this.props.isLoading.Config.languageJson2['Refund Policy']}`}\n              </Text>\n            </Text>\n            <TouchableOpacity\n              disabled={!isEnabled || !this.phoneNumberCheck() || !this.EmailNumberCheck()}\n              onPress={() => this.createAccount(this)}>\n              <View\n                style={{\n                  marginTop: 18,\n                  alignItems: 'center',\n                  height: 38,\n                  width: wp('90%'),\n                  backgroundColor: themeStyle.otherBtnsColor,\n                  justifyContent: 'center',\n                  opacity: (!isEnabled || !this.phoneNumberCheck() || !this.EmailNumberCheck()) ? 0.4 : 0.9\n                }}>\n                <Text\n                  style={{\n                    textAlign: 'center',\n                    color: themeStyle.otherBtnsText,\n                    fontSize: themeStyle.mediumSize,\n                    fontWeight: '500'\n                  }}>\n                  {this.props.isLoading.Config.languageJson2.Register}\n                </Text>\n              </View>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </ScrollView>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoading: state\n})\n\nexport default connect(mapStateToProps, null)(CreateAccount)\n"]},"metadata":{},"sourceType":"script"}